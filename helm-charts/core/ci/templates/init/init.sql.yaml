# 初始化数据库
{{ if .Values.init.sql }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "bkci.names.fullname" . }}-init-sql
  labels: {{- include "bkci.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: init-sql
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels: {{- include "bkci.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: init-sql
    spec:
      {{- if .Values.mysql.enabled }}
      initContainers:
        - name: wait-for-mysql
          image: {{ include "common.images.image" ( dict "imageRoot" .Values.backendImage "global" .Values.global) }}
          imagePullPolicy: {{ .Values.backendImage.pullPolicy }}
          {{ $mysqlData := split ":" (include "bkci.mysqlAddr" .) }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              while ! mysql -u{{- include "bkci.mysqlUsername" . }} -p{{- include "bkci.mysqlPassword" . }} -h{{ $mysqlData._0 }} -P{{ $mysqlData._1 }}; do
                echo "mysql connecting.."
                sleep 3
              done
              echo "MySQL is available";
      {{- end }}
      containers:
        - name: init-sql
          image: {{ include "bkci-backend.image" . }}
          imagePullPolicy: {{ .Values.backendImage.pullPolicy }}
          workingDir: /data/workspace/support-files/sql
          {{ $mysqlData := split ":" (include "bkci.mysqlAddr" .) }}
          command:
            - "/bin/bash"
            - "-c"
            - |
              find . -type f -name "*.sql" | sort | while read SQL; do
                echo "Importing $SQL ..."
                mysql -u{{- include "bkci.mysqlUsername" . }} -p{{- include "bkci.mysqlPassword" . }} -h{{ $mysqlData._0 }} -P{{ $mysqlData._1 }} < $SQL
              done
              echo 'DELETE FROM devops_ci_store.T_CONTAINER WHERE ID = "d51a712508c011e99792fa163e50f2b5";'|mysql -u{{- include "bkci.mysqlUsername" . }} -p{{- include "bkci.mysqlPassword" . }} -h{{ $mysqlData._0 }} -P{{ $mysqlData._1 }}
              echo 'update devops_ci_store.T_BUSINESS_CONFIG set CONFIG_VALUE="DOCKER" WHERE BUSINESS_VALUE="LINUX" AND FEATURE="defaultBuildType";'|mysql -u{{- include "bkci.mysqlUsername" . }} -p{{- include "bkci.mysqlPassword" . }} -h{{ $mysqlData._0 }} -P{{ $mysqlData._1 }}
      restartPolicy: OnFailure
{{- end -}}

# 外部回调分发(codesvn|codegit|gitlab WEBHOOK)
location ~ /external/scm/(codesvn|codegit|gitlab)/commit {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-DEVOPS-RID $uuid;
    set $access_type 'build';
    set $service 'process';
    set $provider $1;
    set $target '';
    proxy_set_header X-DEVOPS-SERVICE-NAME $service;
    access_by_lua_file 'conf/lua/router_srv.lua';
    proxy_pass http://$target/api/external/scm/$provider/commit?$args;
}

# 第三方构建机安装脚本
location ~ /external/agents/(\w+)/(install|uninstall|agent|jre|upgrader|script_upgrader) {
    set $access_type 'build';
    set $service 'environment';
    set $agentId $1;
    set $target '';
    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.common.conf;
    proxy_set_header X-DEVOPS-SERVICE-NAME $service;
    proxy_pass http://$target/api/external/thirdPartyAgent/$agentId/$2?$args;
}

# Macos公共构建机的代理
location = /dispatch-macos/gw/build/macos/startBuild {
    auth_request /auth/build;

    set $access_type 'build';

    # 设置auth的变量
    include auth.request.set.build.conf;

    content_by_lua_block {
        ngx.say('{"agentId": "' .. ngx.var.agentId .. '","secretKey": "' .. ngx.var.secretKey .. '","projectId": "' .. ngx.var.projectId .. '","pipelineId": "' .. ngx.var.pipelineId .. '","buildId": "' .. ngx.var.buildId .. '","vmSeqId": "' .. ngx.var.vmSeqId .. '","systemVersion": "' .. ngx.var.systemVersion .. '","xcodeVersion": "' .. ngx.var.xcodeVersion .. '"}')
    }
}

# Macos公共构建机的代理
location = /ms/dispatch-macos/gw/build/macos/startBuild {
    auth_request /auth/build;

    set $access_type 'build';

    # 设置auth的变量
    include auth.request.set.build.conf;

    content_by_lua_block {
        ngx.say('{"agentId": "' .. ngx.var.agentId .. '","secretKey": "' .. ngx.var.secretKey .. '","projectId": "' .. ngx.var.projectId .. '","pipelineId": "' .. ngx.var.pipelineId .. '","buildId": "' .. ngx.var.buildId .. '","vmSeqId": "' .. ngx.var.vmSeqId .. '","systemVersion": "' .. ngx.var.systemVersion .. '","xcodeVersion": "' .. ngx.var.xcodeVersion .. '"}')
    }
}

# 用户access_token
location ~ /(ms/|)project/api/gw/user/accessToken {
    header_filter_by_lua_file 'conf/lua/cors_filter.lua';

    error_page 401 =302 http://login.o.oa.com/?c_url=http://$host$request_uri&is_signin=1;

    auth_request /auth/prebuild;

    set $access_type 'user';

    # 设置auth的变量
    include auth.request.set.user.conf;

    set_by_lua_file $use_https 'conf/lua/set/set_use_https.lua';

    content_by_lua_block {
        if ngx.var.use_https == '1' then
            ngx.redirect("https://"..config.bkci.host..ngx.var.request_uri, 302)
        else
            ngx.say('{"uid": "' .. ngx.var.uid .. '","accessToken": "' .. ngx.var.accessToken .. '","bk_ticket": "' .. ngx.var.bk_token .. '"}')
        end
    }
}

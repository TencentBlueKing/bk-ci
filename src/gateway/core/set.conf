# 设置请求的uuid
set_by_lua_file $uuid 'conf/lua/set/set_uuid.lua';

# 设置蓝盾的realip
set_by_lua_file $realip 'conf/lua/set/set_real_ip.lua';

# 设置蓝盾的JWT-TOKEN
set_by_lua_file $jwt_token 'conf/lua/set/set_jwt_token.lua';

# 设置request的region
set_by_lua_file $request_region 'conf/lua/set/set_region.lua';

# 设置request的original host
set_by_lua_file $original_host 'conf/lua/set/set_original_host.lua';

# 设置项目ID
set_by_lua_file $project_id 'conf/lua/set/set_project_id.lua';

# 设置容器化相关变量
set_by_lua_block $namespace {
    return os.getenv("NAMESPACE")
}
set_by_lua_block $release_name {
    return os.getenv("RELEASE_NAME")
}
set_by_lua_block $chart_name {
    return os.getenv("CHART_NAME")
}
set_by_lua_block $multi_cluster {
    return os.getenv("MULTI_CLUSTER")
}
set_by_lua_block $default_namespace {
    return os.getenv("DEFAULT_NAMESPACE")
}

#  设置tag
set_by_lua_block $route_tag {
    if ngx.var.http_x_gateway_tag ~= nil then
        return ngx.var.http_x_gateway_tag
    end
    return ''
}

# 设置静态页面的目录
set_by_lua_block $static_dir {
    return config.static_dir
}
# 设置codecc静态页面的目录
set_by_lua_block $static_dir_codecc {
    return config.static_dir_codecc
}
# 设置文档中心页面的目录
set_by_lua_block $docs_dir {
    return config.docs_dir
}
# 设置http的scheme
set_by_lua_block $http_schema {
    return config.http_schema
}
# 设置http的scheme
set_by_lua_block $login_url {
    return config.login_url
}
# 设置paas-ci后台的域名
set_by_lua_block $paasCIDomain {
    return config.paasCIDomain
}


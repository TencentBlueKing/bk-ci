---
version: "v2.0"
name: "log_download代码质量扫描"
label: []
triggerOn:
  push:
    branches:
    - "master"
  mr:
    target-branches:
    - "master"
stages:
- name: "腾讯代码质量扫描"
  label: []
  if: null
  fast-kill: false
  jobs:
  - id: "job_tcoder_codecc_new"
    name: "腾讯代码质量扫描"
    mutex: null
    runs-on:
      self-hosted: false
      pool-name: "docker"
      container:
        image: "mirrors.tencent.com/ci/tlinux3_ci:latest"
        credentials: null
      agent-selector: null
      workspace: null
      queue-timeout-minutes: null
      needs: null
    services: []
    if: null
    steps:
    - name: "代码拉取"
      id: "step-1"
      if: null
      if-modify: null
      uses: null
      with:
        strategy: "FRESH_CHECKOUT"
        enableVirtualMergeBranch: true
        enableSubmodule: true
        enableSubmoduleRecursive: true
      timeout-minutes: null
      continue-on-error: null
      retry-times: null
      env: null
      run: null
      runAdditionalOptions:
        shell: null
      checkout: "self"
    - name: "腾讯代码分析(官方-代码分析工作组)"
      id: "check"
      if: "false == true"
      if-modify: null
      uses: "CodeccCheckAtomDebug@4.*"
      with:
        beAutoLang: false
        checkerSetType: "normal"
        toolScanType: "1"
        languages:
        - "C_CPP"
        tools: "${{ parameters.tools }}"
        languageRuleSetMap:
          C_CPP_RULE:
          - "standard_cpp"
          - "codecc_fast_cpp"
          - "pecker_cpp"
          - "codecc_default_coverity_cpp"
          JAVA_RULE: []
          C_SHARP_RULE: []
          JS_RULE: []
          OC_RULE: []
          OTHERS_RULE: []
          PYTHON_RULE: []
          PHP_RULE: []
          RUBY_RULE: []
          GOLANG_RULE: []
          SWIFT_RULE: []
          TYPESCRIPT_RULE: []
          KOTLIN_RULE: []
          LUA_RULE: []
          DART_RULE: []
          SOLIDITY_RULE: []
        pyVersion: "py3"
        goPath: ""
        scriptType: "SHELL"
        script: "cd src\nmkdir build\ncd build\ncmake -DLIB_LEGO_DIR=${{ ci.workspace }}/tmp/liblego ..\nmake -j`nproc`\necho \"213123123 ${{ ci.actor }}\"\necho '123123123 ${{ ci.actor }}'"
        newDefectJudgeFromDate: "2021-11-01"
        rtxReceiverType: 4
        rtxReceiverList: []
        instantReportStatus: 1
        emailReceiverType: 4
        emailReceiverList: []
        emailCCReceiverList: []
      timeout-minutes: null
      continue-on-error: null
      retry-times: null
      env: null
      run: null
      runAdditionalOptions:
        shell: null
      checkout: null
    - name: null
      id: "123123123"
      if: "[JAVA, JS] == [PYTHON]"
      if-modify: null
      uses: null
      with: null
      timeout-minutes: null
      continue-on-error: null
      retry-times: null
      env: null
      run: "echo 123\n"
      runAdditionalOptions:
        shell: null
      checkout: null
    if-modify: null
    timeout-minutes: null
    env: null
    continue-on-error: null
    strategy: null
    depend-on: null
  if-modify: null
  check-in: null
  check-out: null
resource:
  repositories:
  - repository: "sissicchen/log_download"
    name: "tcoder"
    ref: "refs/heads/master"
    credentials: null
finally: []

version: v2.0
name: ""
label: []
on:
  push:
    branches:
    - '*'
  tag:
    tags:
    - '*'
  mr:
    target-branches:
    - '*'
    action:
    - open
    - reopen
    - push-update
variables:
  DEPLOY_TYPE:
    value: dev
  APPROVE:
    value: "${{ sss }}_${{ approve22 }}"
  GIT_USERNAME:
    value: user1
    readonly: true
  RES_REPOA_VAR1_USERNAME:
    value: RES_VARIABLE
  RES_REPOA_VAR2_USERNAME:
    value: aaa
stages:
- name: root_stage_id_1
  label: []
  if: world == world
  fast-kill: false
  jobs:
  - id: root_job_id_1
    name: root_job_id_1
    runs-on:
      self-hosted: false
      pool-name: "[docker-on-vm]"
    services:
    - serviceId: mysql1
      image: mysql:8.0
      with:
        password: "123456"
    if: world == world
    steps:
    - name: root_step_1
      id: root_step_1
      if: world == world
      uses: UploadArtifactory@1.*
      with:
        path: test.txt
      timeout-minutes: 480
      continue-on-error: false
      retry-times: 0
      runAdditionalOptions: {}
    - if: steps.world1.xxx.outputs == world
      run: |
        echo "root_step_1"
      runAdditionalOptions: {}
    timeout-minutes: 480
    continue-on-error: false
    depend-on:
    - job1
    - job2
  - id: root_job_id_2
    name: root_job_id_2
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - if: steps.world1.outputs.xxx == world
      run: |
        echo "root_stage_id_1, root_job_id_2"
      runAdditionalOptions: {}
    depend-on:
    - job_id_1
  - id: res_repoA_job_id_1
    name: res_repoA_job_id_1
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_job_id_1"
      runAdditionalOptions: {}
  - id: res_repoB_job_id_2
    name: res_repoB_job_id_2
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoB_job_id_2"
      runAdditionalOptions: {}
  - id: res_repoB_job_id_3
    name: res_repoB_job_id_3
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoB_job_id_3 username RES_REPOB_JOB3"
      runAdditionalOptions: {}
  - id: res_repoA_job_id_3
    name: res_repoA_job_id_3
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_job_id_3"
      runAdditionalOptions: {}
  - id: res_repoA_job_id_2
    name: res_repoA_job_id_2
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_job_id_2 username RES_JOB!"
      runAdditionalOptions: {}
    - run: |
        echo "res_repoA_job_id_2 jobname JOBNAME again!"
      runAdditionalOptions: {}
  check-in:
    reviews:
      flows:
      - name: 审批组1
        reviewers:
        - "${{ci.actor}}"
      - name: 审批组2
        reviewers:
        - "${{ci.actor}}"
    gates:
    - name: gate-1
      rule:
      - CodeccCheckAtomDebug.coverity_serious_defect <= 3
      - CodeccCheckAtomDebug.sensitive_defect < 2
      notify-on-fail:
      - type: wework-message
        receivers:
        - ruotiantang
- name: res_stage_id_1
  label: []
  fast-kill: false
  jobs:
  - id: res_repoA_stage_id_1_job_id_1
    name: res_repoA_stage_id_1_job_id_1
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_stage_id_1_job_id_1 username RES_STAGE"
      runAdditionalOptions: {}
  - id: res_repoA_stage_id_1_job_id_2
    name: res_repoA_stage_id_1_job_id_2
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_stage_id_1_job_id_2 stagename STAGENAME"
      runAdditionalOptions: {}
    - if-modify:
      - asd/**
      run: |
        echo "res_repoA_step_id_4 username RES_REPOA_STAGE1_JOB2_STEP3!"
      runAdditionalOptions: {}
  check-in:
    gates:
    - name: gate-1
      rule:
      - CodeccCheckAtomDebug.coverity_serious_defect <= 2
      - CodeccCheckAtomDebug.sensitive_defect < 1
      notify-on-fail:
      - type: wework-message
        receivers:
        - "${{ ci.actor }}"
- name: res_stage_id_2
  label: []
  fast-kill: false
  jobs:
  - id: res_repoA_stage_id_2_job_id_1
    name: res_repoA_stage_id_2_job_id_1
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_stage_id_2_job_id_1 username RES_PEPOA_STAGE1"
      runAdditionalOptions: {}
  - id: res_repoA_stage_id_2_job_id_2
    name: res_repoA_stage_id_2_job_id_2
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoA_stage_id_2_job_id_2 stagename STAGENAME"
      runAdditionalOptions: {}
    - if-modify:
      - asd/**
      run: |
        echo "res_repoA_step_id_4 username RES_REPOA_STAGE2_JOB2_STEP3!"
      runAdditionalOptions: {}
- name: res_repoB_stage_id_1
  label: []
  fast-kill: false
  jobs:
  - id: res_repoB_stage_id_1_job_id_1
    name: res_repoB_stage_id_1_job_id_1
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoB_stage_id_1_job_id_1 username RES_PEPOA_STAGE1"
      runAdditionalOptions: {}
- name: res_repoB_stage_id_2
  label: []
  fast-kill: false
  jobs:
  - id: res_repoB_stage_id_2_job_id_1
    name: res_repoB_stage_id_2_job_id_1
    runs-on:
      self-hosted: false
      pool-name: docker
    services: []
    steps:
    - run: |
        echo "res_repoB_stage_id_2_job_id_1 username RES_PEPOB_STAGE2"
      runAdditionalOptions: {}
notices:
- type: email
  receivers:
  - user1
  - user2
  title: this is a email notice
  content: "this is a email notice,content is hello."
  ccs:
  - user3
  if: SUCCESS
- type: wework-message
  receivers:
  - user1
  - user2
  title: this is a wework-message notice
  content: "this is a wework-message notice,content is hello."
- type: wework-chat
  content: "this is a wework-chat notice,content is hello."
  chat-id:
  - xxxxxxxx
- type: email
  receivers:
  - ruotiantang
  - "${{ci.actor}}"
  title: "${{ variables.EVENT }}触发 STREAM-TEST环境-全部语法测试(模板) 测试失败"
  content: "${{ variables.EVENT }}触发 STREAM-TEST环境-全部语法测试(模板) 测试失败"
  ccs:
  - ruotiantang
  - "${{ci.actor}}"
  if: FAILURE
- type: wework-message
  receivers:
  - "${{ci.actor}}"
  content: "${{ variables.EVENT }}触发 STREAM-TEST环境-全部语法测试(模板) 测试失败"
  if: FAILURE
- type: wework-chat
  content: "${{ variables.EVENT }}触发 STREAM-TEST环境-全部语法测试(模板) 测试失败"
  if: FAILURE
  chat-id:
  - "${{ci.actor}}"
finally: []

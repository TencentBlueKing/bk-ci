#wsproxy configmap
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  run.json: |-
    {
      "dockerAuth": "/data/workspace/registry-facade/pull-secret/pull-secret.json",
      {{- if .Values.registry.readinessProbeAddr }}
      "readinessProbeAddr": "{{.Values.registry.readinessProbeAddr }}",
      {{- end }}
      {{- if .Values.registry.logConfig.enablePathLog }}
      "logConfig": {
        "serviceLogPath": "{{ .Values.registry.logConfig.serviceLogPath }}",
        "errorLogPath": "{{ .Values.registry.logConfig.errorLogPath }}"
      },
      {{- end }}
      "registry": {
        "port": 9000,
        {{- if .Values.registry.fixedSpec }}
        "fixedSpecFN": "/data/workspace/registry-facade/config/fixed.json",
        {{- end }}
        {{- if .Values.registry.staticLayers }}
        "staticLayer": {{ toJson .Values.registry.staticLayers }},
        {{- end }}
        "store": "/data/landun/workspace/cache",
        "requireAuth": false,
        "remoteSpecProvider": [
          {
            "addr": "{{.Values.registry.remoteSpecProvider.addr}}",
            "sha1key": "{{ .Values.registry.remoteSpecProvider.sha1key }}"
          }
        ],
        "tls": {
          "crt": "/data/workspace/registry-facade/tls/https.pem",
          "key": "/data/workspace/registry-facade/tls/https.key"
        }
      }
    }
  fixed.json: |
    {{- .Values.registry.fixedSpec | nindent 4 }}

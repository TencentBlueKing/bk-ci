server:
  port: 8081

mysql:
  dataSourceName: root:123456@tcp(localhost:3306)/devops_kubernetes_manager?parseTime=true&loc=Local
  connMaxLifetime: 3
  maxOpenConns: 10
  maxIdleConns: 10

redis:
  addr: localhost:6379
  password: root
  db: 0

kubernetes:
  nameSpace: blueking-dispatch

gateway:
  # manager api服务的访问地址
  url: 127.0.0.1:8081

dispatch:
  # 调度需要使用到的label，确定构建机唯一性
  label: bkci.dispatch.kubenetes/core
  # 通过k8s watch来观察构建机状态
  watch:
    task:
      label: bkci.dispatch.kubenetes/watch-task
  builder:
    # 将构建机调度到指定标签节点的配置，不填写则在集群内都可以调度，优先级小于专机和特殊机器
    nodeSelector:
      label:
      value:
    # 构建机曾经调度过的节点名称列表
    nodesAnnotation: bkci.dispatch.kubenetes/builder-history-nodes
    # 容器历史资源使用相关
    realResource:
      # 监控构建机容器资源使用的 prometheus api地址， 字段为空则不开启realResource优化
      # 注：集群内为 集群内为 <service>.<namespace>.svc.cluster.local:<port>
      prometheusUrl: 
      realResourceAnnotation: bkci.dispatch.kubenetes/builder-real-resources
  volume:
    # 构建机脚本
    builderConfigMap:
      name: dispatch-kubernetes-builder
      items:
        # 初始化脚本
        - key: initsh.properties
          path: init.sh
        # 登录调试需要的sleep脚本
        - key: sleepsh.properties
          path: sleep.sh
    hostPath:
      # 数据盘
      dataHostDir: /data/landun/workspace
      # 日志盘
      logsHostDir: /data/landun/logs
    # 应用数据使用cfs
    cfs:
      path: /data/cfs
  volumeMount:
    dataPath: /data/landun/workspace
    logPath: /data/logs
    builderConfigMapPath: /data/landun/config
    cfs:
      path: /data/bkdevops/apps
      readOnly: true
  # 一些具有特定属性的机器，例如独特的网络策略
  specialMachine:
    label: bkci.dispatch.kubenetes/special-builder
  # 只给特定用户使用的专机
  privateMachine:
    label: bkci.dispatch.kubenetes/private-builder

buildAndPushImage:
  image: gcr.io/kaniko-project/executor:v1.9.0
  # 拉取kaniko需要的凭据，如果不填视为没有
  pullImageRegistry:
    server:
    username:
    password:

apiserver:
  auth:
    # 针对蓝盾流水线访问的超级权限token
    apiToken:
      key: Devops-Token
      value: landun
    rsaPrivateKey: |
     # 在这里保存私钥用来解密apitoken
     # 推荐使用rsa-generate生成公私钥，rsa-generate可通过make打包获得

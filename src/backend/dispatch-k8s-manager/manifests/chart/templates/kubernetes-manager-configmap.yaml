#kubernetes-manager configmap
{{ if .Values.kubernetesManager.enabled -}}
{{ if .Values.configmap.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubernetes-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: kubernetes-manager
    app.kubernetes.io/component: kubernetes-manager
    app.kubernetes.io/name: kubernetes-manager
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
data:
  config.yaml: |-
    server:
      port: 80
    
    mysql:
      dataSourceName: {{ include "bkci.mysqlUsername" . }}:{{- include "bkci.mysqlPassword" . }}@tcp({{- include "bkci.mysqlAddr" . }})/devops_ci_kubernetes_manager?parseTime=true&loc=Local
      connMaxLifetime: 3
      maxOpenConns: 10
      maxIdleConns: 10
    
    redis:
      addr: {{ include "bkci.redisHost" . }}:{{ include "bkci.redisPort" . }}
      password: {{ include "bkci.redisPassword" . }}
      db: {{ .Values.kubernetesManager.redis.db }}
    
    kubernetes:
      {{- if .Values.kubernetesManager.builderNamespace }}
      nameSpace: {{ .Values.kubernetesManager.builderNamespace }}
      {{- else }}
      nameSpace: {{ .Release.Namespace }}
      {{- end }}

    gateway:
      # manager api服务的访问地址
      url: {{ .Values.kubernetesManager.gateway.url }}
    
    dispatch:
      # 调度需要使用到的label，确定构建机唯一性
      label: bkci.dispatch.kubenetes/core
      # 通过k8s watch来观察构建机状态
      watch:
        task:
          label: bkci.dispatch.kubenetes/watch-task
      builder:
        # 将构建机调度到指定标签节点的配置，不填写则在集群内都可以调度，优先级小于专机和特殊机器  
        nodeSelector:
          label:
          value:
        # 构建机曾经调度过的节点名称列表
        nodesAnnotation: bkci.dispatch.kubenetes/builder-history-nodes
        # 容器历史资源使用相关
        realResource:
          # 监控构建机容器资源使用的 prometheus api地址， 字段为空则不开启realResource优化
          # 注：集群内为 <service>.<namespace>.svc.cluster.local:<port>
          prometheusUrl: {{ .Values.kubernetesManager.realResource.prometheusUrl }}
          realResourceAnnotation: bkci.dispatch.kubenetes/builder-real-resources
      volume:
        # 构建机脚本
        builderConfigMap:
          name: dispatch-kubernetes-builder
          items:
            # 初始化脚本
            - key: initsh.properties
              path: init.sh
            # 登录调试需要的sleep脚本
            - key: sleepsh.properties
              path: sleep.sh
        hostPath:
          # 数据盘
          dataHostDir: /data/landun/workspace
          # 日志盘
          logsHostDir: /data/landun/logs
        # 应用数据使用cfs
        cfs:
          path: /data/cfs
      volumeMount:
        dataPath: /data/landun/workspace
        logPath: /data/devops/logs
        builderConfigMapPath: /data/landun/config
        cfs:
          path: /data/bkdevops/apps
          readOnly: true
      # 一些具有特定属性的机器，例如独特的网络策略
      specialMachine:
        label: bkci.dispatch.kubenetes/special-builder
      # 只给特定用户使用的专机
      privateMachine:
        label: bkci.dispatch.kubenetes/private-builder
    buildAndPushImage:
      image: {{ .Values.kubernetesManager.buildAndPushImage.image }}
      # 拉取kaniko需要的凭据，如果不填视为没有
      pullImageRegistry: 
        server: {{ .Values.kubernetesManager.buildAndPushImage.server }}
        username: {{ .Values.kubernetesManager.buildAndPushImage.username }}
        password: {{ .Values.kubernetesManager.buildAndPushImage.password }}

    apiserver:
      auth:
        # 针对蓝盾流水线访问的超级权限token
        apiToken:
          key: {{ .Values.kubernetesManager.apiserver.auth.apiToken.key }}
          value: {{ .Values.kubernetesManager.apiserver.auth.apiToken.value }}
        rsaPrivateKey: |
          {{- .Values.kubernetesManager.apiserver.auth.rsaPrivateKey | nindent 10 }}

  {{ if .Values.kubeConfig.useKubeConfig -}}
  kubeConfig.yaml: |
    {{- .Values.kubeConfig.content | nindent 4 }}
  {{- end -}}
{{- end -}}
{{- end -}}
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_experience"] = globalThis["webpackChunkdevops_experience"] || []).push([[687],{

/***/ 4230:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937542397\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIzMC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZXhwZXJpZW5jZS8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9ncm91cElkU2VsZWN0b3IvaW5kZXgudnVlPzhlYmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU0MjM5N1xuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4230\n");

/***/ }),

/***/ 1352:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937546593\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZXhwZXJpZW5jZS8uL3NyYy92aWV3cy9leHBlcmllbmNlL2NyZWF0ZV9leHBlcmllbmNlLnZ1ZT8zZjU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1NDY1OTNcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1352\n");

/***/ }),

/***/ 14:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937539393\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWV4cGVyaWVuY2UvLi9zcmMvdmlld3MvZXhwZXJpZW5jZS92ZXJzaW9uX3BhY2thZ2UudnVlPzM0YTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzUzOTM5M1xuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n");

/***/ }),

/***/ 4711:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ create_experience)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_experience.vue?vue&type=template&id=36f3a089\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticStyle: {\n      height: \"100%\"\n    }\n  }, [_c(\"content-header\", [_c(\"div\", {\n    attrs: {\n      slot: \"left\"\n    },\n    slot: \"left\"\n  }, [_vm._v(_vm._s(_vm.$route.meta.title))])]), _vm._v(\" \"), _c(\"section\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{\\n            isLoading: loading.isLoading,\\n            title: loading.title\\n        }\"\n    }],\n    staticClass: \"create-experience-wrapper sub-view-port\"\n  }, [!_vm.loading.isLoading ? [_c(\"bk-form\", {\n    ref: \"form\",\n    staticClass: \"experience-form\",\n    attrs: {\n      model: _vm.createReleaseForm\n    }\n  }, [_vm.hasPermission ? [_c(\"div\", {\n    staticClass: \"version-name\"\n  }, [_c(\"bk-form-item\", {\n    attrs: {\n      label: \"ipa/apk文件\",\n      \"label-width\": \"190\",\n      required: true,\n      property: \"name\"\n    }\n  }, [_c(\"bk-input\", {\n    ref: \"releaseName\",\n    attrs: {\n      placeholder: \"请从版本仓库中选择一个ipa或apk文件\",\n      name: \"releaseName\",\n      disabled: \"\"\n    },\n    model: {\n      value: _vm.createReleaseForm.name,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"name\", $$v);\n      },\n      expression: \"createReleaseForm.name\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"span\", {\n    class: {\n      \"prompt-tips\": true,\n      \"is-unedit\": _vm.isEdit\n    },\n    attrs: {\n      disabled: _vm.isEdit\n    },\n    on: {\n      click: _vm.toShowPackageList\n    }\n  }, [_vm._v(\"从版本仓库获取\")])], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    },\n    attrs: {\n      label: \"应用名称\",\n      \"label-width\": \"190\",\n      \"desc-type\": \"icon\",\n      \"desc-icon\": \"icon-info-circle\",\n      desc: \"展示于蓝盾App上的应用名。如果为空，将自动获取ipa/apk内置的应用名\",\n      property: \"experienceName\"\n    }\n  }, [_c(\"bk-input\", {\n    attrs: {\n      placeholder: \"请输入应用名称\",\n      maxlength: \"20\"\n    },\n    model: {\n      value: _vm.createReleaseForm.experienceName,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"experienceName\", $$v);\n      },\n      expression: \"createReleaseForm.experienceName\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"版本标题\",\n      required: true,\n      \"label-width\": \"190\",\n      \"desc-type\": \"icon\",\n      \"desc-icon\": \"icon-info-circle\",\n      desc: \"该体验版本的标志性说明\",\n      property: \"versionTitle\"\n    }\n  }, [_c(\"bk-input\", {\n    attrs: {\n      placeholder: \"请输入版本标题\",\n      rule: [{\n        required: true\n      }],\n      maxlength: \"100\"\n    },\n    model: {\n      value: _vm.createReleaseForm.versionTitle,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"versionTitle\", $$v);\n      },\n      expression: \"createReleaseForm.versionTitle\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"版本号\",\n      \"label-width\": \"190\"\n    }\n  }, [_c(\"span\", {\n    staticClass: \"version-number-info\"\n  }, [_vm._v(_vm._s(_vm.createReleaseForm.version_no || \"--\"))])]), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"版本描述\",\n      property: \"desc\",\n      \"label-width\": \"190\",\n      required: true\n    }\n  }, [_c(\"bk-input\", {\n    class: {\n      \"is-error\": _vm.errorFormHandler.nameError\n    },\n    attrs: {\n      type: \"textarea\",\n      placeholder: \"请填写版本描述\",\n      maxlength: \"2000\",\n      name: \"releaseDesc\"\n    },\n    model: {\n      value: _vm.createReleaseForm.desc,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"desc\", $$v);\n      },\n      expression: \"createReleaseForm.desc\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"产品类别\",\n      required: true,\n      \"label-width\": \"190\",\n      property: \"categoryId\"\n    }\n  }, [_c(\"bk-select\", {\n    model: {\n      value: _vm.createReleaseForm.categoryId,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"categoryId\", $$v);\n      },\n      expression: \"createReleaseForm.categoryId\"\n    }\n  }, _vm._l(_vm.categoryList, function (option) {\n    return _c(\"bk-option\", {\n      key: option.id,\n      attrs: {\n        id: option.id,\n        name: option.name\n      }\n    });\n  }), 1)], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"产品负责人\",\n      \"label-width\": \"190\",\n      required: true,\n      property: \"productOwner\"\n    }\n  }, [_c(\"bk-member-selector\", {\n    attrs: {\n      rule: [{\n        required: true\n      }],\n      placeholder: \"请输入英文名，多个产品负责人以英文逗号分隔\"\n    },\n    model: {\n      value: _vm.createReleaseForm.productOwner,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"productOwner\", $$v);\n      },\n      expression: \"createReleaseForm.productOwner\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"体验结束时间\",\n      \"label-width\": \"190\",\n      required: true,\n      property: \"end_date\"\n    }\n  }, [_c(\"bk-date-picker\", {\n    attrs: {\n      placeholder: \"请选择体验结束时间\",\n      \"start-date\": _vm.query.beginDate,\n      \"quick-select\": false\n    },\n    model: {\n      value: _vm.createReleaseForm.end_date,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"end_date\", $$v);\n      },\n      expression: \"createReleaseForm.end_date\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"体验范围\",\n      \"label-width\": \"190\",\n      required: true\n    }\n  }, [_c(\"bk-radio-group\", {\n    model: {\n      value: _vm.experienceRange,\n      callback: function ($$v) {\n        _vm.experienceRange = $$v;\n      },\n      expression: \"experienceRange\"\n    }\n  }, [_c(\"bk-radio\", {\n    staticClass: \"mr20\",\n    attrs: {\n      value: \"public\"\n    }\n  }, [_vm._v(\"公开体验\")]), _vm._v(\" \"), _c(\"bk-radio\", {\n    attrs: {\n      value: \"internals\"\n    }\n  }, [_vm._v(\"内部体验组\")])], 1)], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showExperienceGroup,\n      expression: \"showExperienceGroup\"\n    }],\n    attrs: {\n      label: \"体验组\",\n      required: true,\n      \"label-width\": \"190\",\n      property: \"experienceGroups\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bkdevop-checkbox-group\"\n  }, _vm._l(_vm.experienceGroup, function (col, index) {\n    return _c(\"bk-checkbox\", {\n      key: index,\n      staticClass: \"exp-group-item\",\n      on: {\n        change: _vm.handleGroupChange\n      },\n      model: {\n        value: col.isChecked,\n        callback: function ($$v) {\n          _vm.$set(col, \"isChecked\", $$v);\n        },\n        expression: \"col.isChecked\"\n      }\n    }, [_c(\"span\", {\n      staticClass: \"exp-group-item-content\"\n    }, [_c(\"span\", {\n      staticClass: \"exp-group-item-name\"\n    }, [_vm._v(_vm._s(col.name))]), _vm._v(\" \"), _c(\"bk-popover\", {\n      attrs: {\n        delay: [300, 0],\n        \"max-width\": \"600\",\n        placement: \"bottom\"\n      }\n    }, [_c(\"i\", {\n      staticClass: \"devops-icon icon-member-list\"\n    }), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"exp-group-popup-box\",\n      attrs: {\n        slot: \"content\"\n      },\n      slot: \"content\"\n    }, _vm._l(_vm.expGroupPopupConf, function (item) {\n      return _c(\"p\", {\n        key: item.key,\n        staticClass: \"exp-group-popup-item\"\n      }, [_c(\"span\", [_vm._v(_vm._s(item.typeLabel))]), _vm._v(\" \"), _c(\"span\", [_vm._v(_vm._s(col[item.key].join(\", \")))])]);\n    }), 0)])], 1)]);\n  }), 1), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"create-group-entry\",\n    on: {\n      click: _vm.toCreateGroup\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-plus-circle\"\n  }), _vm._v(\"\\n                            新增体验组\\n                        \")])]), _vm._v(\" \"), _c(\"bk-form-item\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showExperienceGroup,\n      expression: \"showExperienceGroup\"\n    }],\n    attrs: {\n      label: \"临时体验人员（内部）\",\n      \"desc-type\": \"icon\",\n      \"desc-icon\": \"icon-info-circle\",\n      desc: \"全公司人员有效\",\n      \"label-width\": \"190\",\n      property: \"internal_list\"\n    }\n  }, [_c(\"bk-member-selector\", {\n    attrs: {\n      placeholder: \"请输入英文名，多个体验人员以英文逗号分隔\",\n      name: \"internalList\"\n    },\n    model: {\n      value: _vm.createReleaseForm.internal_list,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"internal_list\", $$v);\n      },\n      expression: \"createReleaseForm.internal_list\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showExperienceGroup,\n      expression: \"showExperienceGroup\"\n    }],\n    attrs: {\n      label: \"临时体验人员（外部）\",\n      \"label-width\": \"190\",\n      property: \"external_list\"\n    }\n  }, [_c(\"bk-select\", {\n    attrs: {\n      disabled: false,\n      \"ext-cls\": \"select-custom\",\n      \"ext-popover-cls\": \"select-popover-custom\",\n      multiple: \"\",\n      searchable: \"\"\n    },\n    model: {\n      value: _vm.createReleaseForm.external_list,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"external_list\", $$v);\n      },\n      expression: \"createReleaseForm.external_list\"\n    }\n  }, _vm._l(_vm.outersList, function (option) {\n    return _c(\"bk-option\", {\n      key: option.id,\n      attrs: {\n        id: option.id,\n        name: option.name\n      }\n    });\n  }), 1)], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"通知方式\",\n      \"label-width\": \"190\",\n      desc: \"三种通知方式均不会对公开体验生效\",\n      \"desc-type\": \"icon\",\n      \"desc-icon\": \"icon-info-circle\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bkdevop-checkbox-group notify-group\"\n  }, _vm._l(_vm.noticeTypeList, function (col, index) {\n    return _c(\"bk-checkbox\", {\n      key: index,\n      model: {\n        value: col.isChecked,\n        callback: function ($$v) {\n          _vm.$set(col, \"isChecked\", $$v);\n        },\n        expression: \"col.isChecked\"\n      }\n    }, [_vm._v(_vm._s(col.name))]);\n  }), 1), _vm._v(\" \"), _c(\"bk-checkbox\", {\n    staticClass: \"enable-wechat-group\",\n    attrs: {\n      name: \"enableWechatGroups\"\n    },\n    model: {\n      value: _vm.createReleaseForm.enableWechatGroups,\n      callback: function ($$v) {\n        _vm.$set(_vm.createReleaseForm, \"enableWechatGroups\", $$v);\n      },\n      expression: \"createReleaseForm.enableWechatGroups\"\n    }\n  }, [_vm._v(\"\\n                            启用企业微信群通知\\n                            \"), _c(\"span\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.groupIdDesc,\n      expression: \"groupIdDesc\"\n    }],\n    staticClass: \"top-start\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-info-circle\"\n  })])])], 1), _vm._v(\" \"), _vm.createReleaseForm.enableWechatGroups ? _c(\"group-id-selector\", {\n    staticClass: \"item-groupid\",\n    attrs: {\n      \"handle-change\": _vm.groupIdChange,\n      value: _vm.createReleaseForm.wechatGroups,\n      placeholder: \"请输入群ID，多个群ID以分号隔开\",\n      \"icon-class\": \"icon-question-circle\",\n      \"desc-direction\": \"top\"\n    }\n  }) : _vm._e()] : _vm._e()], 2), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"submit-btn-bar\"\n  }, [_c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        tooltips: \"没有权限\",\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.EXPERIENCE_TASK_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.EXPERIENCE_TASK_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                        tooltips: '没有权限',\\n                        permissionData: {\\n                            projectId: projectId,\\n                            resourceType: EXPERIENCE_TASK_RESOURCE_TYPE,\\n                            resourceCode: projectId,\\n                            action: EXPERIENCE_TASK_RESOURCE_ACTION.CREATE\\n                        }\\n                    }\"\n    }],\n    key: \"submitBtn\",\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: function ($event) {\n        $event.preventDefault();\n        return _vm.beforeSubmit.apply(null, arguments);\n      }\n    }\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.submitText) + \"\\n                \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    attrs: {\n      theme: \"default\"\n    },\n    on: {\n      click: _vm.cancel\n    }\n  }, [_vm._v(\"取消\")])], 1)] : _vm._e(), _vm._v(\" \"), _vm.metaList.length ? _c(\"div\", {\n    staticClass: \"metadata-box\"\n  }, [_c(\"div\", {\n    staticClass: \"title\"\n  }, [_vm._v(\"元数据\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _vm._l(_vm.metaList, function (row, index) {\n    return _c(\"div\", {\n      key: index,\n      staticClass: \"data-row\"\n    }, [_c(\"div\", {\n      staticClass: \"key-item\"\n    }, [_vm._v(_vm._s(row.key))]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"value-item\",\n      attrs: {\n        title: row.value\n      }\n    }, [_vm._v(_vm._s(row.value))])]);\n  })], 2) : _vm._e(), _vm._v(\" \"), _c(\"experience-group\", _vm._b({\n    attrs: {\n      \"create-group-form\": _vm.createGroupForm,\n      \"handle-group-field-change\": _vm.handleGroupFieldChange,\n      \"error-handler\": _vm.errorHandler,\n      \"cancel-fn\": _vm.cancelFn\n    },\n    on: {\n      \"after-submit\": _vm.afterCreateGroup\n    }\n  }, \"experience-group\", _vm.groupSideslider, false)), _vm._v(\" \"), _c(\"version-package\", {\n    attrs: {\n      \"version-select-conf\": _vm.versionSelectConf,\n      loading: _vm.packageLoading,\n      \"confirm-fn\": _vm.confirmSelect,\n      \"cancel-fn\": _vm.cancelSelect\n    }\n  })], 2)], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"data-head\"\n  }, [_c(\"div\", {\n    staticClass: \"key-head\"\n  }, [_vm._v(\"键\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"value-head\"\n  }, [_vm._v(\"值\")])]);\n}];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/experience/create_experience.vue?vue&type=template&id=36f3a089\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/groupIdSelector/index.vue?vue&type=template&id=74300983\nvar groupIdSelectorvue_type_template_id_74300983_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"code-mode-check bk-form\"\n  }, [_c(\"div\", {\n    staticClass: \"bk-form-item\"\n  }, [[_vm.label ? _c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(_vm._s(_vm.label) + \"：\")]) : _vm._e(), _vm._v(\" \"), _vm.desc ? _c(\"bk-tooltip\", {\n    attrs: {\n      placement: _vm.descDirection ? _vm.descDirection : _vm.right\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon\",\n    class: [_vm.iconClass ? _vm.iconClass : \"icon-info-circle\"]\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticStyle: {\n      \"white-space\": \"pre-wrap\",\n      \"font-weight\": \"normal\"\n    },\n    attrs: {\n      slot: \"content\"\n    },\n    slot: \"content\"\n  }, [_c(\"div\", [_vm._v(_vm._s(_vm.desc))])])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content\"\n  }, [_c(\"multiple-complete\", {\n    attrs: {\n      name: _vm.name,\n      type: \"text\",\n      value: _vm.value,\n      disabled: _vm.disabled,\n      placeholder: _vm.placeholder,\n      config: _vm.dataInputConfig\n    }\n  })], 1)]], 2)]);\n};\nvar groupIdSelectorvue_type_template_id_74300983_staticRenderFns = [];\ngroupIdSelectorvue_type_template_id_74300983_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/common/groupIdSelector/index.vue?vue&type=template&id=74300983\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/multiple-complete/index.vue?vue&type=template&id=143ff001\nvar multiple_completevue_type_template_id_143ff001_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"bk-selector\",\n    class: {\n      \"is-required\": _vm.required\n    }\n  }, [_c(\"input\", {\n    staticClass: \"bk-form-input\",\n    attrs: {\n      type: \"text\",\n      autocomplete: \"off\",\n      name: _vm.name,\n      placeholder: _vm.placeholder,\n      disabled: _vm.disabled\n    },\n    domProps: {\n      value: _vm.value\n    },\n    on: {\n      input: _vm.input,\n      keydown: _vm.keydown,\n      mousedown: _vm.focus,\n      blur: _vm.hideAll\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showList && _vm.list.length,\n      expression: \"showList && list.length\"\n    }],\n    staticClass: \"bk-selector-list\"\n  }, [_c(\"ul\", _vm._l(_vm.list, function (data, index) {\n    return _c(\"li\", {\n      key: index,\n      staticClass: \"bk-selector-list-item\",\n      class: _vm.activeClass(index),\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.selectList(data);\n        }\n      }\n    }, [_c(\"div\", {\n      staticClass: \"bk-selector-node\",\n      class: _vm.activeClass(index)\n    }, [_c(\"div\", {\n      staticClass: \"text\"\n    }, [_vm._v(_vm._s(data))])])]);\n  }), 0)])]);\n};\nvar multiple_completevue_type_template_id_143ff001_staticRenderFns = [];\nmultiple_completevue_type_template_id_143ff001_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/common/multiple-complete/index.vue?vue&type=template&id=143ff001\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(3188);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(9297);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/multiple-complete/index.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const multiple_completevue_type_script_lang_js = ({\n  props: {\n    config: {\n      type: Object,\n      default: {\n        data: [],\n        onChange: () => {}\n      },\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String\n    },\n    placeholder: {\n      type: String,\n      default: '请输入'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      showList: false,\n      focusList: '',\n      list: [],\n      groupIdStr: this.value\n    };\n  },\n  watch: {\n    'config.data'(val) {\n      this.getData();\n    }\n  },\n  created() {\n    this.getData();\n  },\n  methods: {\n    input(e) {\n      this.showList = true;\n      this.focusList = -1;\n      let val;\n      if (e) {\n        let value = e.target.value;\n        val = e.target.value;\n        value = value.replace(/;\\+/gm, ';');\n        const lastIdx = val.lastIndexOf(';');\n        if (lastIdx > -1) {\n          this.groupIdStr = val.substring(0, lastIdx + 1) || '';\n          val = val.substring(lastIdx + 1);\n        } else {\n          // 未匹配到‘;’时\n          this.groupIdStr = '';\n        }\n        this.config.onChange(this.name, value);\n      } else {\n        val = '';\n      }\n      // 触发调用getData方法\n      this.filterData(val);\n    },\n    // 隐藏补全列表\n    hideAll(e) {\n      // 为了让blur方法延迟执行，以便能够成功执行click方法\n      setTimeout(() => {\n        this.showList = false;\n      }, 250);\n    },\n    focus(e) {\n      this.showList = true;\n      this.focusList = -1;\n      if (this.value) {\n        const lastIndex = this.value.lastIndexOf(';');\n        const value = lastIndex > -1 ? this.value.substring(lastIndex + 1) : this.value;\n        this.filterData(value);\n        this.list.forEach((item, index) => {\n          if (item === value) {\n            this.focusList = index;\n          }\n        });\n      }\n    },\n    mousemove(i) {\n      this.focusList = i;\n    },\n    // 键盘移动\n    keydown(e) {\n      const key = e.keyCode;\n\n      // 如果没有展示的list，则直接返回\n      if (!this.showList) return;\n      switch (key) {\n        case 40:\n          // 向上,阻止默认事件\n          e.preventDefault();\n          this.focusList++;\n          break;\n        case 38:\n          // 向下,阻止默认事件\n          e.preventDefault();\n          this.focusList--;\n          break;\n        case 13:\n          // 确认\n          if (this.focusList < 0) {\n            return false;\n          }\n          this.selectList(this.list[this.focusList]);\n          // 重置下拉列表\n          this.showList = false;\n          this.input();\n          break;\n        case 27:\n          // 退出\n          this.showList = false;\n          break;\n      }\n\n      // 点中的序号超过数组的长度时，循环到第一个\n      const listLength = this.list.length - 1;\n      if (key === 13 || key === 8 && !this.groupIdStr) {\n        this.focusList = -1;\n      } else {\n        this.focusList = this.focusList > listLength ? 0 : this.focusList < 0 ? listLength : this.focusList;\n      }\n    },\n    // 更新样式\n    activeClass(i) {\n      return {\n        'bk-selector-selected': i === this.focusList\n      };\n    },\n    // 选中列表中的哪一项\n    selectList(data) {\n      if (data) {\n        this.groupIdStr += data + ';';\n      }\n      this.config.onChange(this.name, this.groupIdStr);\n    },\n    // 过滤数据\n    filterData(val) {\n      this.list = this.config.data.filter(item => item.indexOf(val) > -1);\n      if (!this.list.length) {\n        this.showList = false;\n      }\n    },\n    // 获取数据\n    getData() {\n      this.list = this.config.data;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/common/multiple-complete/index.vue?vue&type=script&lang=js\n /* harmony default export */ const common_multiple_completevue_type_script_lang_js = (multiple_completevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/common/multiple-complete/index.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.A)(\n  common_multiple_completevue_type_script_lang_js,\n  multiple_completevue_type_template_id_143ff001_render,\n  multiple_completevue_type_template_id_143ff001_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const multiple_complete = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/groupIdSelector/index.vue?vue&type=script&lang=js\n\n/* harmony default export */ const groupIdSelectorvue_type_script_lang_js = ({\n  name: 'group-id-selector',\n  components: {\n    MultipleComplete: multiple_complete\n  },\n  props: {\n    text: {\n      type: String\n    },\n    repositoryHashId: {\n      type: String,\n      required: true\n    },\n    branchName: {\n      type: String,\n      default: ''\n    },\n    elementType: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    desc: {\n      type: String\n    },\n    iconClass: {\n      type: String\n    },\n    descDirection: {\n      type: String\n    },\n    handleChange: Function\n  },\n  data() {\n    return {\n      noPermission: true,\n      isLoading: false,\n      list: []\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    dataInputConfig() {\n      return {\n        data: this.list || [],\n        onChange: this.onChange\n      };\n    }\n  },\n  mounted() {\n    this.list = localStorage.getItem('groupIdStr') ? localStorage.getItem('groupIdStr').split(';').filter(item => item) : [];\n  },\n  methods: {\n    onChange(name, value) {\n      this.value = value;\n      this.handleChange(name, value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/common/groupIdSelector/index.vue?vue&type=script&lang=js\n /* harmony default export */ const common_groupIdSelectorvue_type_script_lang_js = (groupIdSelectorvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/index.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/groupIdSelector/index.vue?vue&type=style&index=0&id=74300983&prod&lang=scss\nvar groupIdSelectorvue_type_style_index_0_id_74300983_prod_lang_scss = __webpack_require__(4230);\n;// CONCATENATED MODULE: ./src/components/common/groupIdSelector/index.vue?vue&type=style&index=0&id=74300983&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/common/groupIdSelector/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar groupIdSelector_component = (0,componentNormalizer/* default */.A)(\n  common_groupIdSelectorvue_type_script_lang_js,\n  groupIdSelectorvue_type_template_id_74300983_render,\n  groupIdSelectorvue_type_template_id_74300983_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const groupIdSelector = (groupIdSelector_component.exports);\n// EXTERNAL MODULE: ./src/utils/permission.js\nvar permission = __webpack_require__(9203);\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(7716);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n// EXTERNAL MODULE: ./src/views/experience/create_group.vue + 10 modules\nvar create_group = __webpack_require__(9537);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/version_package.vue?vue&type=template&id=45e05dd9\nvar version_packagevue_type_template_id_45e05dd9_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-dialog\", {\n    attrs: {\n      width: \"800\",\n      \"ext-cls\": \"version-package-wrapper\",\n      \"header-position\": \"left\",\n      title: \"请选择ipa或apk文件\",\n      \"has-header\": _vm.versionSelectConf.hasHeader,\n      \"close-icon\": _vm.versionSelectConf.closeIcon,\n      \"quick-close\": _vm.versionSelectConf.quickClose,\n      \"ok-text\": _vm.versionSelectConf.confirmText\n    },\n    on: {\n      confirm: _vm.confirmFn,\n      cancel: _vm.cancelFn\n    },\n    model: {\n      value: _vm.versionSelectConf.isShow,\n      callback: function ($$v) {\n        _vm.$set(_vm.versionSelectConf, \"isShow\", $$v);\n      },\n      expression: \"versionSelectConf.isShow\"\n    }\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{ isLoading: loading.isLoading, title: loading.title }\"\n    }],\n    staticClass: \"artifactory-container\"\n  }, [_c(\"bk-form\", {\n    staticClass: \"select-nav\",\n    attrs: {\n      model: _vm.selectInfo,\n      \"form-type\": \"inline\"\n    }\n  }, [_c(\"bk-form-item\", {\n    attrs: {\n      label: \"流水线\"\n    }\n  }, [_c(\"bk-select\", {\n    ref: \"pipeline\",\n    attrs: {\n      \"enable-scroll-load\": \"\",\n      searchable: \"\",\n      \"remote-method\": _vm.handleSearch,\n      \"scroll-loading\": _vm.bottomLoadingOptions,\n      clearable: false\n    },\n    on: {\n      \"scroll-end\": _vm.handleScrollToBottom\n    },\n    model: {\n      value: _vm.selectInfo.pipelineId,\n      callback: function ($$v) {\n        _vm.$set(_vm.selectInfo, \"pipelineId\", $$v);\n      },\n      expression: \"selectInfo.pipelineId\"\n    }\n  }, _vm._l(_vm.pipelineList, function (item) {\n    return _c(\"bk-option\", {\n      key: item.pipelineId,\n      staticClass: \"artifactory-option\",\n      attrs: {\n        id: item.pipelineId,\n        name: item.pipelineName\n      }\n    });\n  }), 1)], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"构建号\"\n    }\n  }, [_c(\"bk-select\", {\n    ref: \"build\",\n    attrs: {\n      searchable: \"\",\n      loading: _vm.isConstructLoading,\n      disabled: !_vm.selectInfo.pipelineId,\n      clearable: false\n    },\n    on: {\n      toggle: _vm.refreshConstructList,\n      selected: _vm.changeBuildNo\n    },\n    model: {\n      value: _vm.selectInfo.constructId,\n      callback: function ($$v) {\n        _vm.$set(_vm.selectInfo, \"constructId\", $$v);\n      },\n      expression: \"selectInfo.constructId\"\n    }\n  }, _vm._l(_vm.constructList, function (item) {\n    return _c(\"bk-option\", {\n      key: item.id,\n      staticClass: \"artifactory-option\",\n      attrs: {\n        id: item.id,\n        name: item.buildNum\n      }\n    });\n  }), 1)], 1)], 1), _vm._v(\" \"), _c(\"bk-table\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.listLoading.isLoading,\n        title: _vm.listLoading.title\n      },\n      expression: \"{ isLoading: listLoading.isLoading, title: listLoading.title }\"\n    }],\n    attrs: {\n      \"max-height\": 400,\n      data: _vm.fileList,\n      \"empty-text\": \"暂无数据\"\n    }\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: \"名称\",\n      prop: \"name\",\n      width: \"250\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"label\", {\n          staticClass: \"bk-form-radio\"\n        }, [_c(\"input\", {\n          attrs: {\n            type: \"radio\",\n            name: \"selectedFile\"\n          },\n          domProps: {\n            checked: _vm.selectedFile.file.path === props.row.path\n          },\n          on: {\n            change: function ($event) {\n              return _vm.handleFileSelect(props.row);\n            }\n          }\n        }), _vm._v(\" \"), _vm.selectedFile.file.path === props.row.path ? _c(\"i\", {\n          staticClass: \"icon-check\"\n        }) : _vm._e(), _vm._v(\" \"), _c(\"span\", {\n          staticClass: \"bk-radio-text file-name\",\n          attrs: {\n            title: props.row.name\n          }\n        }, [_vm._v(_vm._s(props.row.buildNo) + _vm._s(props.row.name))])])];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"路径\",\n      prop: \"fullName\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"文件大小\",\n      prop: \"size\",\n      width: \"100\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"仓库类型\",\n      prop: \"artifactoryTypeDesc\"\n    }\n  })], 1)], 1)]);\n};\nvar version_packagevue_type_template_id_45e05dd9_staticRenderFns = [];\nversion_packagevue_type_template_id_45e05dd9_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/experience/version_package.vue?vue&type=template&id=45e05dd9\n\n;// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/version_package.vue?vue&type=script&lang=js\n\n/* harmony default export */ const version_packagevue_type_script_lang_js = ({\n  props: {\n    versionSelectConf: Object,\n    loading: Object,\n    confirmFn: Function,\n    cancelFn: Function\n  },\n  data() {\n    return {\n      isConstructLoading: false,\n      fileList: [],\n      pipelineList: [],\n      constructList: [],\n      selectInfo: {\n        pipelineId: '',\n        constructId: ''\n      },\n      listLoading: {\n        isLoading: false,\n        title: ''\n      },\n      selectedFile: {\n        file: {}\n      },\n      filterByPipelineName: '',\n      bottomLoadingOptions: {\n        size: 'mini',\n        isLoading: true\n      },\n      pagination: {\n        page: 0,\n        pageSize: 10,\n        total: 0\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    artifactoryTypeMap() {\n      return {\n        CUSTOM_DIR: '自定义仓库',\n        PIPELINE: '流水线仓库'\n      };\n    }\n  },\n  watch: {\n    'versionSelectConf.isShow'(val) {},\n    'selectInfo.pipelineId'(val) {\n      this.selectInfo.constructId = '';\n      this.$store.dispatch('experience/updateCurSelectedFile', {\n        selectFile: {}\n      });\n      this.getDefaultFile();\n    },\n    'selectedFile.file'(val) {\n      this.$store.dispatch('experience/updateCurSelectedFile', {\n        selectFile: val\n      });\n    }\n  },\n  mounted() {\n    this.handleScrollToBottom();\n  },\n  methods: {\n    async handleScrollToBottom() {\n      if (this.pipelineList.length > 0 && this.pipelineList.length >= this.pagination.total) {\n        return;\n      }\n      try {\n        this.bottomLoadingOptions.isLoading = true;\n        const res = await this.fetchPipelineList(this.pagination.page + 1, this.filterByPipelineName);\n        if (res.records.length === 0) {\n          this.bottomLoadingOptions.isLoading = false;\n          _extends(this.pagination, {\n            total: this.pipelineList.length\n          });\n          return;\n        }\n        this.pipelineList = [...this.pipelineList, ...res.records];\n        _extends(this.pagination, {\n          page: res.page,\n          total: res.count\n        });\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      } finally {\n        this.bottomLoadingOptions.isLoading = false;\n      }\n    },\n    async fetchPipelineList(page, filterByPipelineName) {\n      const res = await this.$store.dispatch('experience/requestPipelineList', {\n        projectId: this.projectId,\n        params: {\n          page,\n          pageSize: this.pagination.pageSize,\n          filterByPipelineName\n        }\n      });\n      return res;\n    },\n    async handleSearch(keyword) {\n      try {\n        this.filterByPipelineName = keyword;\n        const res = await this.fetchPipelineList(1, keyword);\n        _extends(this.pagination, {\n          page: res.page,\n          total: res.count\n        });\n        this.pipelineList = res.records;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    handleFileSelect(file) {\n      this.selectedFile.file = file;\n    },\n    changeBuildNo(id) {\n      if (id) {\n        this.requestList(id);\n      }\n    },\n    /**\r\n     获取文件列表\r\n     *\r\n     */\n    async requestList(buildId) {\n      this.listLoading.isLoading = true;\n      const params = {\n        fileNames: ['*.ipa', '*.apk'],\n        props: {\n          pipelineId: this.selectInfo.pipelineId,\n          buildId: buildId === 'all' ? undefined : buildId\n        }\n      };\n      try {\n        const res = await this.$store.dispatch('experience/requestFileList', {\n          projectId: this.projectId,\n          params: params\n        });\n        this.selectedFile.file = '';\n        this.$store.dispatch('experience/updateCurSelectedFile', {\n          selectFile: {}\n        });\n        this.fileList = res.records.map(item => {\n          item.properties = item.properties.map(property => {\n            if (property.key === 'buildNo') item.buildNo = `(#${property.value})`;\n            return property;\n          });\n          return {\n            ...item,\n            size: `${(item.size / 1024 / 1024).toFixed(2)}MB`,\n            artifactoryTypeDesc: this.artifactoryTypeMap[item.artifactoryType]\n          };\n        });\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      } finally {\n        this.listLoading.isLoading = false;\n      }\n    },\n    async refreshConstructList(val) {\n      this.$refs.build.condition = '';\n      if (val && this.selectInfo.pipelineId) {\n        this.isConstructLoading = true;\n        try {\n          const res = await this.$store.dispatch('experience/requestBuildList', {\n            projectId: this.projectId,\n            pipelineId: this.selectInfo.pipelineId,\n            params: {\n              pageSize: -1,\n              checkPermission: false\n            }\n          });\n          this.constructList.splice(0, this.constructList.length, ...res.records);\n          this.constructList.unshift({\n            id: 'all',\n            buildNum: '全部'\n          });\n        } catch (err) {\n          this.$bkMessage({\n            message: err.message || err,\n            theme: 'error'\n          });\n        } finally {\n          this.isConstructLoading = false;\n        }\n      }\n    },\n    async getDefaultFile() {\n      if (this.selectInfo.pipelineId) {\n        this.listLoading.isLoading = true;\n        this.isConstructLoading = true;\n        try {\n          const res = await this.$store.dispatch('experience/requestBuildList', {\n            projectId: this.projectId,\n            pipelineId: this.selectInfo.pipelineId,\n            params: {\n              pageSize: -1,\n              checkPermission: false\n            }\n          });\n          this.constructList.splice(0, this.constructList.length, ...res.records);\n          this.constructList.unshift({\n            id: 'all',\n            buildNum: '全部'\n          });\n          if (this.constructList.length) {\n            this.selectInfo.constructId = this.constructList[0].id;\n            this.changeBuildNo(this.constructList[0].id);\n          }\n        } catch (err) {\n          this.$bkMessage({\n            message: err.message || err,\n            theme: 'error'\n          });\n        } finally {\n          this.isConstructLoading = false;\n        }\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/experience/version_package.vue?vue&type=script&lang=js\n /* harmony default export */ const experience_version_packagevue_type_script_lang_js = (version_packagevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/index.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/version_package.vue?vue&type=style&index=0&id=45e05dd9&prod&lang=scss\nvar version_packagevue_type_style_index_0_id_45e05dd9_prod_lang_scss = __webpack_require__(14);\n;// CONCATENATED MODULE: ./src/views/experience/version_package.vue?vue&type=style&index=0&id=45e05dd9&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/experience/version_package.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar version_package_component = (0,componentNormalizer/* default */.A)(\n  experience_version_packagevue_type_script_lang_js,\n  version_packagevue_type_template_id_45e05dd9_render,\n  version_packagevue_type_template_id_45e05dd9_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const version_package = (version_package_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_experience.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n/* harmony default export */ const create_experiencevue_type_script_lang_js = ({\n  components: {\n    experienceGroup: create_group/* default */.A,\n    versionPackage: version_package,\n    GroupIdSelector: groupIdSelector\n  },\n  data() {\n    return {\n      hasPermission: true,\n      curPipelineId: '',\n      curPipelineName: '',\n      groupIdDesc: \"可发通知至企业微信群。群ID获取方法：添加'DevOps-notice' 群机器人，手动@DevOps-notice并输入关键字'群ID', 发送后即可获取\",\n      experienceGroup: [],\n      groupIdStorage: [],\n      categoryList: [{\n        id: 1,\n        name: '游戏'\n      }, {\n        id: 2,\n        name: '工具'\n      }, {\n        id: 3,\n        name: '生活'\n      }, {\n        id: 4,\n        name: '社交'\n      }],\n      noticeTypeList: [{\n        name: '企业微信',\n        value: 'RTX',\n        isChecked: false\n      }, {\n        name: '邮件',\n        value: 'EMAIL',\n        isChecked: false\n      }],\n      metaList: [],\n      outersList: [],\n      loading: {\n        isLoading: false,\n        title: ''\n      },\n      query: {},\n      experienceRange: 'public',\n      createReleaseForm: {\n        name: '',\n        version_no: '',\n        versionTitle: '',\n        desc: '',\n        experienceName: '',\n        categoryId: null,\n        productOwner: [],\n        end_date: new Date(),\n        internal_list: [],\n        external_list: [],\n        notice_list: '',\n        wechatGroups: '',\n        enableWechatGroups: false,\n        experienceGroups: []\n      },\n      packageLoading: {\n        isLoading: false,\n        title: ''\n      },\n      tipLoading: {\n        isLoading: true,\n        title: ''\n      },\n      versionSelectConf: {\n        isShow: false,\n        closeIcon: false,\n        hasHeader: false,\n        quickClose: false,\n        confirmText: '确定'\n      },\n      groupSideslider: {\n        title: '',\n        visible: false,\n        isLoading: false\n      },\n      createGroupForm: {\n        name: '',\n        members: [],\n        remark: ''\n      },\n      errorHandler: {\n        nameError: false\n      },\n      errorFormHandler: {\n        nameError: false,\n        dateError: false\n      },\n      PIPELINE_RESOURCE_ACTION: permission/* PIPELINE_RESOURCE_ACTION */.bc,\n      PIPELINE_RESOURCE_TYPE: permission/* PIPELINE_RESOURCE_TYPE */.hy,\n      EXPERIENCE_TASK_RESOURCE_TYPE: permission/* EXPERIENCE_TASK_RESOURCE_TYPE */.pY,\n      EXPERIENCE_TASK_RESOURCE_ACTION: permission/* EXPERIENCE_TASK_RESOURCE_ACTION */.PO\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapGetters)('experience', ['getSelectedFile', 'getUserGroup']),\n    pathName() {\n      return this.$route.name;\n    },\n    isEdit() {\n      return this.pathName === 'editExperience';\n    },\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    experienceHashId() {\n      return this.$route.params.experienceId;\n    },\n    innerTitle() {\n      return this.isEdit ? '编辑体验' : '新增体验';\n    },\n    submitText() {\n      return this.isEdit ? '更新体验' : '转体验';\n    },\n    showExperienceGroup() {\n      return this.experienceRange === 'internals';\n    },\n    expGroupPopupConf() {\n      return [{\n        typeLabel: '内部人员：',\n        key: 'innerUsers'\n      }, {\n        typeLabel: '内部组织：',\n        key: 'depts'\n      }, {\n        typeLabel: '外部人员：',\n        key: 'outerUsers'\n      }];\n    },\n    isPublicExp() {\n      return this.experienceRange === 'public';\n    },\n    isAlphaApk() {\n      return !!this.metaList.find(item => item.key === 'BK-CI-APP-STAGE' && item.value === 'Alpha');\n    },\n    createInnerApkExpTips() {\n      return `${this.createReleaseForm.name}${this.isPublicExp ? '为开发测试版本，确定发起公开体验吗' : '为开发测试版本，准备体验包过程需要一段时间，请耐心等待'}`;\n    }\n  },\n  watch: {\n    '$route'(path) {\n      if (!this.isEdit) {\n        this.requestGroupList();\n        this.noticeTypeList.forEach(item => {\n          item.isChecked = false;\n        });\n        this.metaList = [];\n        this.query.initDate = '';\n        this.createReleaseForm = {\n          name: '',\n          version_no: '',\n          desc: '',\n          end_date: '',\n          internal_list: [],\n          external_list: [],\n          notice_list: '',\n          versionTitle: '',\n          experienceName: '',\n          categoryId: null,\n          productOwner: [],\n          experienceGroups: []\n        };\n      }\n    },\n    projectId(val) {\n      this.toExperienceList();\n    }\n  },\n  async created() {\n    await this.requestGroupList();\n    this.query.beginDate = new Date();\n    if (this.isEdit) {\n      this.requestExperienceDetail();\n    }\n  },\n  mounted() {\n    this.groupIdStorage = localStorage.getItem('groupIdStr') ? localStorage.getItem('groupIdStr').split(';').filter(item => item) : [];\n  },\n  methods: {\n    /**\r\n     * 获取体验组列表\r\n     */\n    async requestGroupList(repect) {\n      if (!repect) {\n        this.loading.isLoading = true;\n      }\n      try {\n        const res = await this.$store.dispatch('experience/requestGroupList', {\n          projectId: this.projectId,\n          params: {\n            returnPublic: false\n          }\n        });\n        this.experienceGroup.splice(0, this.experienceGroup.length);\n        res.records.forEach(item => {\n          item.isChecked = false;\n          item.isHover = false;\n          this.experienceGroup.push(item);\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        this.loading.isLoading = false;\n      }\n    },\n    handleGroupChange(val) {\n      const newExperienceGroups = [];\n      this.experienceGroup.forEach(item => {\n        if (item.isChecked) {\n          newExperienceGroups.push(item.groupHashId);\n        }\n      });\n      this.createReleaseForm.experienceGroups = newExperienceGroups;\n    },\n    /**\r\n     * 获取体验详情\r\n     */\n    async requestExperienceDetail() {\n      this.loading.isLoading = true;\n      try {\n        const res = await this.$store.dispatch('experience/requestExperienceDetail', {\n          projectId: this.projectId,\n          experienceHashId: this.experienceHashId\n        });\n        this.createReleaseForm.name = res.name;\n        this.createReleaseForm.path = res.path;\n        this.createReleaseForm.artifactoryType = res.artifactoryType;\n        this.createReleaseForm.version_no = res.version;\n        this.createReleaseForm.end_date = (0,util/* convertTime */.t)(res.expireDate * 1000).split(' ')[0];\n        this.query.initDate = this.createReleaseForm.end_date;\n        this.createReleaseForm.desc = res.remark;\n        this.createReleaseForm.versionTitle = res.versionTitle;\n        this.createReleaseForm.experienceName = res.experienceName;\n        this.createReleaseForm.categoryId = res.categoryId;\n        this.createReleaseForm.productOwner = res.productOwner;\n        this.createReleaseForm.external_list = res.outerUsers;\n        this.createReleaseForm.internal_list = res.innerUsers;\n        this.createReleaseForm.enableWechatGroups = res.enableWechatGroups;\n        this.createReleaseForm.experienceGroups = res.experienceGroups;\n        // 体验组如果为kygplomw,选中公开体验\n        const publicGroup = this.createReleaseForm.experienceGroups.find(item => item.groupHashId === 'kygplomw');\n        this.experienceRange = publicGroup ? 'public' : 'internals';\n        if (res.enableWechatGroups) {\n          this.createReleaseForm.wechatGroups = res.wechatGroups;\n        }\n        this.getFileInfo(res.path, res.artifactoryType);\n        res.experienceGroups.forEach(vv => {\n          this.experienceGroup.forEach(kk => {\n            if (vv.groupHashId === kk.groupHashId) {\n              kk.isChecked = true;\n            }\n          });\n        });\n        res.notifyTypes.forEach(vv => {\n          this.noticeTypeList.forEach(kk => {\n            if (vv === kk.value) {\n              kk.isChecked = true;\n            }\n          });\n        });\n      } catch (e) {\n        this.handleError(e, {\n          projectId: this.projectId,\n          resourceType: permission/* EXPERIENCE_TASK_RESOURCE_TYPE */.pY,\n          resourceCode: this.experienceHashId,\n          action: permission/* EXPERIENCE_TASK_RESOURCE_ACTION */.PO.EDIT\n        });\n      } finally {\n        this.loading.isLoading = false;\n      }\n    },\n    async getFileInfo(path, type) {\n      try {\n        const res = await this.$store.dispatch('experience/requestMetaList', {\n          projectId: this.projectId,\n          artifactoryType: type,\n          path: path\n        });\n        this.metaList.splice(0, this.metaList.length);\n        res.forEach(item => {\n          this.metaList.push(item);\n        });\n        for (let i = this.metaList.length - 1; i >= 0; i--) {\n          if (this.metaList[i].key === 'buildId' || this.metaList[i].key === 'pipelineId' || this.metaList[i].key === 'projectId' || this.metaList[i].key === 'source') {\n            this.metaList.splice(i, 1);\n          }\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    cancel() {\n      this.$bkInfo({\n        title: '离开后，新编辑的数据将会丢失',\n        type: 'warning',\n        theme: 'warning',\n        confirmFn: () => {\n          this.toExperienceList();\n        }\n      });\n    },\n    selectGroups(col) {\n      this.experienceGroup.forEach(item => {\n        if (col.groupHashId === item.groupHashId) {\n          item.isChecked = !item.isChecked;\n        }\n      });\n    },\n    selectedNotice(col) {\n      this.noticeTypeList.forEach(item => {\n        if (col.name === item.name) {\n          item.isChecked = !item.isChecked;\n        }\n      });\n    },\n    toCreateGroup() {\n      this.createGroupForm = {\n        name: '',\n        members: [],\n        remark: ''\n      };\n      this.groupSideslider.title = '新增体验组';\n      this.groupSideslider.visible = true;\n    },\n    handleGroupFieldChange(name, value) {\n      this.createGroupForm[name] = value;\n    },\n    productResult() {\n      this.createReleaseForm.productOwner = this.createReleaseForm.productOwner.split(',');\n    },\n    validate() {\n      let errorCount = 0;\n      if (!this.createGroupForm.name) {\n        this.errorHandler.nameError = true;\n        errorCount++;\n      }\n      if (errorCount > 0) {\n        return false;\n      }\n      return true;\n    },\n    afterCreateGroup() {\n      this.requestGroupList();\n      this.groupSideslider.visible = false;\n    },\n    cancelFn() {\n      if (!this.groupSideslider.isLoading) {\n        this.groupSideslider.visible = false;\n      }\n    },\n    toShowPackageList() {\n      if (!this.isEdit) {\n        this.versionSelectConf.isShow = true;\n      }\n    },\n    async confirmSelect() {\n      if (!this.packageLoading.isLoading) {\n        if (this.getSelectedFile.name) {\n          this.packageLoading.isLoading = true;\n          this.versionSelectConf.confirmText = '提交中...';\n          const obj = this.getSelectedFile;\n          try {\n            const res = await this.$store.dispatch('experience/requestMetaList', {\n              projectId: this.projectId,\n              artifactoryType: obj.artifactoryType,\n              path: obj.fullPath\n            });\n            this.metaList = res.map(item => {\n              if (item.key === 'appVersion') {\n                this.createReleaseForm.version_no = item.value;\n              }\n              if (item.key === 'pipelineId') {\n                this.curPipelineId = item.value;\n              }\n              if (item.key === 'pipelineName') {\n                this.curPipelineName = item.value;\n              }\n              return item;\n            });\n            for (let i = this.metaList.length - 1; i >= 0; i--) {\n              if (this.metaList[i].key === 'buildId' || this.metaList[i].key === 'pipelineId' || this.metaList[i].key === 'projectId' || this.metaList[i].key === 'source') {\n                this.metaList.splice(i, 1);\n              }\n            }\n            this.createReleaseForm.name = obj.name;\n            this.createReleaseForm.path = obj.fullPath;\n            this.createReleaseForm.artifactoryType = obj.artifactoryType;\n            this.errorFormHandler.nameError = false;\n          } catch (err) {\n            const message = err.message ? err.message : err;\n            const theme = 'error';\n            this.$bkMessage({\n              message,\n              theme\n            });\n          } finally {\n            this.versionSelectConf.isShow = false;\n            this.packageLoading.isLoading = false;\n            this.versionSelectConf.confirmText = '确定';\n          }\n        }\n      }\n    },\n    cancelSelect() {\n      if (!this.packageLoading.isLoading) {\n        this.versionSelectConf.isShow = false;\n        this.packageLoading.isLoading = false;\n        this.versionSelectConf.confirmText = '确定';\n      }\n    },\n    groupIdChange(name, value) {\n      this.createReleaseForm.wechatGroups = value;\n    },\n    toggleEnable(name, value) {\n      this.createReleaseForm.enableWechatGroups = value;\n    },\n    // 补全末尾分号\n    wechatGroupCompletion() {\n      const wechatGroup = this.createReleaseForm.wechatGroups;\n      let targetGro = '';\n      if (wechatGroup && wechatGroup.charAt(wechatGroup.length - 1) !== ';') {\n        this.createReleaseForm.wechatGroups += ';';\n        targetGro = this.createReleaseForm.wechatGroups;\n      } else {\n        targetGro = this.createReleaseForm.wechatGroups;\n      }\n      return targetGro;\n    },\n    setGroupidStorage(data) {\n      if (!this.createReleaseForm.enableWechatGroups) {\n        return false;\n      }\n      data.split(';').filter(item => item).forEach(item => {\n        if (!this.groupIdStorage.includes(item)) {\n          this.groupIdStorage.push(item);\n        }\n      });\n      localStorage.setItem('groupIdStr', this.groupIdStorage.sort().join(';'));\n    },\n    beforeSubmit() {\n      if (!this.isAlphaApk) {\n        this.submitFn();\n        return;\n      }\n      this.$bkInfo({\n        subTitle: this.createInnerApkExpTips,\n        type: 'warning',\n        confirmFn: () => {\n          this.submitFn();\n        }\n      });\n    },\n    async submitFn() {\n      if (this.isPublicExp) {\n        this.createReleaseForm.experienceGroups = ['kygplomw'];\n        this.createReleaseForm.internal_list = [];\n        this.createReleaseForm.external_list = [];\n      }\n      let message;\n      const theme = 'error';\n      if (!this.createReleaseForm.desc || !this.createReleaseForm.name || !this.createReleaseForm.end_date || !this.createReleaseForm.versionTitle || !this.createReleaseForm.categoryId || !this.createReleaseForm.productOwner.length || !this.createReleaseForm.experienceGroups.length) {\n        if (!this.createReleaseForm.experienceGroups.length) message = '请选择体验组';\n        if (!this.createReleaseForm.end_date) message = '请选择体验结束日期';\n        if (this.createReleaseForm.categoryId === null) message = '请选择产品类别';\n        if (!this.createReleaseForm.productOwner.length) message = '请填写产品负责人';\n        if (!this.createReleaseForm.desc) message = '请填写版本描述';\n        if (!this.createReleaseForm.versionTitle) message = '请填写版本标题';\n        // if (!this.createReleaseForm.experienceName) message = '请填写体验名称'\n        if (!this.createReleaseForm.name) message = '请选择ipa/apk文件';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } else {\n        if (this.experienceRange === 'internals') {\n          // 如果为内部体验组，取选中体验组id\n          const newExperienceGroups = [];\n          this.experienceGroup.forEach(item => {\n            if (item.isChecked) {\n              newExperienceGroups.push(item.groupHashId);\n            }\n          });\n          this.createReleaseForm.experienceGroups = newExperienceGroups;\n        }\n        const params = {\n          name: this.createReleaseForm.name,\n          path: this.createReleaseForm.path,\n          artifactoryType: this.createReleaseForm.artifactoryType,\n          version: this.createReleaseForm.version_no,\n          expireDate: Date.parse(this.createReleaseForm.end_date) / 1000,\n          remark: this.createReleaseForm.desc || undefined,\n          outerUsers: this.createReleaseForm.external_list,\n          innerUsers: this.createReleaseForm.internal_list,\n          enableWechatGroups: this.createReleaseForm.enableWechatGroups,\n          experienceGroups: this.createReleaseForm.experienceGroups,\n          notifyTypes: [],\n          experienceName: this.createReleaseForm.experienceName,\n          versionTitle: this.createReleaseForm.versionTitle,\n          categoryId: this.createReleaseForm.categoryId,\n          productOwner: this.createReleaseForm.productOwner\n        };\n        if (this.createReleaseForm.enableWechatGroups) {\n          params.wechatGroups = this.wechatGroupCompletion();\n        } else {\n          params.wechatGroups = '';\n        }\n        this.noticeTypeList.forEach(item => {\n          if (item.isChecked) {\n            params.notifyTypes.push(item.value);\n          }\n        });\n        let message, theme;\n        this.loading.isLoading = true;\n        try {\n          if (this.$route.params.experienceId) {\n            await this.$store.dispatch('experience/editExperience', {\n              projectId: this.projectId,\n              experienceHashId: this.experienceHashId,\n              params\n            });\n            message = '编辑体验成功';\n            theme = 'success';\n          } else {\n            const payload = {\n              path: params.path,\n              artifactoryType: params.artifactoryType\n            };\n            const result = await this.$store.dispatch('experience/requestHasPermission', {\n              projectId: this.projectId,\n              payload\n            });\n            if (result) {\n              await this.$store.dispatch('experience/createExperience', {\n                projectId: this.projectId,\n                params\n              });\n              message = '新增体验成功';\n              theme = 'success';\n            } else {\n              const resourceCode = params.path.split('/')[1] || '';\n              this.handleNoPermission({\n                projectId: this.projectId,\n                resourceType: permission/* PIPELINE_RESOURCE_TYPE */.hy,\n                resourceCode,\n                action: permission/* PIPELINE_RESOURCE_ACTION */.bc.EXECUTE\n              });\n            }\n          }\n        } catch (err) {\n          message = err.message ? err.message : err;\n          theme = 'error';\n        } finally {\n          if (message) {\n            this.$bkMessage({\n              message,\n              theme\n            });\n          }\n          this.loading.isLoading = false;\n          if (theme === 'success') {\n            if (this.createReleaseForm.enableWechatGroups) {\n              this.setGroupidStorage(params.wechatGroups);\n            }\n            this.toExperienceList();\n          }\n        }\n      }\n    },\n    toExperienceList() {\n      this.$router.push({\n        name: 'experienceList',\n        params: {\n          projectId: this.projectId\n        }\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/experience/create_experience.vue?vue&type=script&lang=js\n /* harmony default export */ const experience_create_experiencevue_type_script_lang_js = (create_experiencevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/index.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_experience.vue?vue&type=style&index=0&id=36f3a089&prod&lang=scss\nvar create_experiencevue_type_style_index_0_id_36f3a089_prod_lang_scss = __webpack_require__(1352);\n;// CONCATENATED MODULE: ./src/views/experience/create_experience.vue?vue&type=style&index=0&id=36f3a089&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/experience/create_experience.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar create_experience_component = (0,componentNormalizer/* default */.A)(\n  experience_create_experiencevue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const create_experience = (create_experience_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4711\n");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdevops_environment"] = self["webpackChunkdevops_environment"] || []).push([[997],{

/***/ 6397:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"P2\": () => (/* binding */ throttle),\n/* harmony export */   \"Wz\": () => (/* binding */ getQueryString),\n/* harmony export */   \"rJ\": () => (/* binding */ convertTime),\n/* harmony export */   \"zp\": () => (/* binding */ copyText)\n/* harmony export */ });\n/* unused harmony exports isVNode, isInArray, isInlineElment, getActualTop, getActualLeft, addClass, removeClass, localizeConfig, findValByKeyValue, deepClone, converStrToNum, converStrToArr, convertStrToNumArr, convertMStoString, convertFileSize, isObject, mergeModules, getOuterHeight, getOuterWidth, getInnerWidth, deepCopy, hashID, getServiceLogoByPath, getAtomPath */\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2077);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(911);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2759);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3902);\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nfunction isVNode(node) {\n  return typeof node === 'object' && Object.prototype.hasOwnProperty.call(node, 'componentOptions');\n}\nfunction isInArray(ele, array) {\n  for (const item of array) {\n    if (item === ele) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction throttle(func) {\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  let lastFunc;\n  let lastRan;\n  return function () {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function () {\n        if (Date.now() - lastRan >= interval) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, interval - (Date.now() - lastRan));\n    }\n  };\n}\nfunction isInlineElment(node) {\n  const inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'cite', 'code', 'dfn', 'em', 'font', 'i', 'img', 'input', 'kbd', 'label', 'q', 's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup', 'textarea', 'tt', 'u', 'var'];\n  const tag = node.tagName.toLowerCase();\n  const display = getComputedStyle(node).display;\n  if (isInArray(tag, inlineElements) && display === 'index' || display === 'inline') {\n    console.warn('Binding node is displayed as inline element. To avoid some unexpected rendering error, please set binding node displayed as block element.');\n    return true;\n  }\n  return false;\n}\n\n/**\r\n *  获取元素相对于页面的高度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualTop(node) {\n  let actualTop = node.offsetTop;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent;\n  }\n  return actualTop;\n}\n\n/**\r\n *  获取元素相对于页面左侧的宽度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualLeft(node) {\n  let actualLeft = node.offsetLeft;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualLeft += current.offsetLeft;\n    current = current.offsetParent;\n  }\n  return actualLeft;\n}\n\n/**\r\n *  对元素添加样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction addClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    if (!node.className && classNames.length === 1) {\n      node.className = className;\n    } else {\n      let setClass = ' ' + node.className + ' ';\n      classNames.forEach(cl => {\n        if (setClass.indexOf(' ' + cl + ' ') < 0) {\n          setClass += cl + ' ';\n        }\n      });\n      const rtrim = /^\\s+|\\s+$/;\n      node.className = setClass.replace(rtrim, '');\n    }\n  }\n}\n\n/**\r\n *  对元素删除样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction removeClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    let setClass = ' ' + node.className + ' ';\n    classNames.forEach(cl => {\n      setClass = setClass.replace(' ' + cl + ' ', ' ');\n    });\n    const rtrim = /^\\s+|\\s+$/;\n    node.className = setClass.replace(rtrim, '');\n  }\n}\n\n/**\r\n *  将传入的配置项转成本地的对象\r\n *  @param config {Object} 传入的对象\r\n *  @return obj {Object} 本地化之后的对象\r\n */\nfunction localizeConfig(config) {\n  const obj = {};\n  for (const key in config) {\n    obj[key] = config[key];\n  }\n  return obj;\n}\n\n/**\r\n *  在一个元素为对象的数组中，根据oldKey: oldValue找到指定的数组元素，并返回该数组元素中指定key的value\r\n *  @param arr - 元素为对象的数组\r\n *  @param oldKey - 查找的key\r\n *  @param oldValue - 查找的value\r\n *  @param key - 需要返回的value的指定的key\r\n *  @return result - 找到的value值，未找到返回undefined\r\n */\nfunction findValByKeyValue(arr, oldKey, oldValue, key) {\n  let result;\n  for (const obj of arr) {\n    for (const _key in obj) {\n      if (_key === oldKey && obj[_key] === oldValue) {\n        result = obj[key];\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction deepClone(obj) {\n  const _obj = {};\n  for (const key in obj) {\n    if (obj[key].toString().toLowerCase() === '[object object]') {\n      _obj[key] = deepClone(obj[key]);\n    } else {\n      _obj[key] = key === 'text' ? '' : obj[key];\n    }\n  }\n  return _obj;\n}\n\n/**\r\n *  将字符串去掉指定内容之后转成数字\r\n *  @param {String} str - 需要转换的字符串\r\n *  @param {String} indicator - 需要被去掉的内容\r\n */\nfunction converStrToNum(str, indicator) {\n  const reg = new RegExp(indicator, 'g');\n  const $str = str.replace(reg, '');\n  return ~~$str;\n}\n\n/**\r\n *  将字符串根据indicator转成数组\r\n */\nfunction converStrToArr(str, indicator) {\n  return str.length ? str.split(indicator) : [];\n}\n\n/**\r\n * 将字符串根据indicator转成数组并将内容都转成Number类型（仅限数组内容均为数字的字符串）\r\n */\nfunction convertStrToNumArr(str, indicator) {\n  return converStrToArr(str, indicator).map(item => {\n    return ~~item;\n  });\n}\n\n/**\r\n *  将毫秒值转换成x时x分x秒的形式\r\n *  @param {Number} time - 时间的毫秒形式\r\n *  @return {String} str - 转换后的字符串\r\n */\nfunction convertMStoString(time) {\n  function getSeconds(sec) {\n    return `${sec}秒`;\n  }\n  function getMinutes(sec) {\n    if (sec / 60 >= 1) {\n      return `${Math.floor(sec / 60)}分${getSeconds(sec % 60)}`;\n    } else {\n      return getSeconds(sec);\n    }\n  }\n  function getHours(sec) {\n    if (sec / 3600 >= 1) {\n      return `${Math.floor(sec / 3600)}小时${getMinutes(sec % 3600)}`;\n    } else {\n      return getMinutes(sec);\n    }\n  }\n  function getDays(sec) {\n    if (sec / 86400 >= 1) {\n      return `${Math.floor(sec / 86400)}天${getHours(sec % 86400)}`;\n    } else {\n      return getHours(sec);\n    }\n  }\n  return time ? getDays(Math.floor(time / 1000)) : '0秒';\n}\nfunction prezero(num) {\n  num = Number(num);\n  if (num < 10) {\n    return '0' + num;\n  }\n  return num;\n}\nfunction convertTime(ms) {\n  const time = new Date(ms);\n  return `${time.getFullYear()}-${prezero(time.getMonth() + 1)}-${prezero(time.getDate())} ${prezero(time.getHours())}:${prezero(time.getMinutes())}:${prezero(time.getSeconds())}`;\n}\n\n/**\r\n *  转换文件大小\r\n */\nfunction convertFileSize(size, unit) {\n  const arr = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const calcSize = size / 1024;\n  let index;\n  arr.some((item, _index) => {\n    if (unit === item) {\n      index = _index;\n      return true;\n    }\n    return false;\n  });\n  const next = arr[index + 1];\n  if (calcSize > 1024) {\n    if (!next) {\n      return `${calcSize.toFixed(2)}${unit}`;\n    } else {\n      return convertFileSize(calcSize, next);\n    }\n  } else {\n    return `${calcSize.toFixed(2)}${next || unit}`;\n  }\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction mergeModules(target) {\n  for (var _len = arguments.length, modules = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    modules[_key2 - 1] = arguments[_key2];\n  }\n  return modules.reduce((merged, mod) => {\n    Object.keys(mod).forEach(key => {\n      if (isObject(merged[key]) && isObject(mod[key])) {\n        merged[key] = {\n          ...merged[key],\n          ...mod[key]\n        };\n      }\n    });\n    return merged;\n  }, target);\n}\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterHeight = (selector, parent) => {\n  const {\n    marginTop,\n    height,\n    marginBottom\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginTop) + parseFloat(height) + parseFloat(marginBottom);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterWidth = (selector, parent) => {\n  const {\n    marginLeft,\n    width,\n    marginRight\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginLeft) + parseFloat(width) + parseFloat(marginRight);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getInnerWidth = (selector, parent) => {\n  const {\n    width\n  } = getDOMRect(selector, parent);\n  return parseFloat(width);\n};\nconst getDOMRect = (selector, parent) => {\n  const target = isDOMElement(selector) ? selector : parent ? parent.querySelector(selector) : document.querySelector(selector);\n  if (!target) {\n    return {};\n  }\n  const style = window.getComputedStyle(target);\n  return {\n    width: style.width,\n    height: style.height,\n    marginTop: style.marginTop,\n    marginBottom: style.marginBottom,\n    marginLeft: style.marginLeft,\n    marginRight: style.marginRight\n  };\n};\nconst isDOMElement = obj => {\n  return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n};\nconst deepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\nconst hashID = function () {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let pos = 0;\n  let result = '';\n  while (pos < length) {\n    const n = Math.round(Math.random() * 126) + 33;\n    result += String.fromCharCode(n);\n    pos++;\n  }\n  return result;\n};\nfunction getServiceLogoByPath(link) {\n  return link.replace(/\\/?(devops\\/)?(\\w+)\\S*$/, '$2');\n}\nfunction getAtomPath() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return args.join('-');\n}\n\n/**\r\n *  获取url参数值\r\n */\nfunction getQueryString(name) {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\n  const r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n\n/**\r\n *  复制文本\r\n */\nconst copyText = text => {\n  const textarea = document.createElement('textarea');\n  document.body.appendChild(textarea);\n  textarea.value = text;\n  textarea.select();\n  if (document.execCommand('copy')) {\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    return true;\n  } else {\n    console.warn(window.devops.$i18n.t('environment.browserNotSupport'));\n  }\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6397\n");

/***/ }),

/***/ 9720:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ extPageContainer)\n});\n\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/extPageContainer.vue?vue&type=template&id=57fd89ab&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"ext-page-container-wrapper\" },\n    [\n      _c(\"content-header\", { staticClass: \"env-header\" }, [\n        _c(\"div\", { attrs: { slot: \"left\" }, slot: \"left\" }, [\n          _vm._v(_vm._s(_vm.servideName)),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"section\",\n        { staticClass: \"sub-view-port\" },\n        [\n          _vm.service\n            ? [\n                _c(\"iframe\", {\n                  ref: \"extensionIframe\",\n                  staticClass: \"environment-view-port-iframe\",\n                  attrs: { src: _vm.iframeUrl },\n                  on: { load: _vm.handlePageLoad },\n                }),\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue?vue&type=template&id=57fd89ab&\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(2077);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(911);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(6294);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/extPageContainer.vue?vue&type=script&lang=js&\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const extPageContainervue_type_script_lang_js_ = ({\n  props: {\n    extensionMap: {\n      type: Object\n    }\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['extensions']),\n    serviceCode() {\n      return this.$route.params.serviceCode;\n    },\n    service() {\n      return this.extensions.find(ext => ext.serviceCode === this.serviceCode);\n    },\n    servideName() {\n      console.log(this.service, this.extensions);\n      return this.service && this.service.serviceName ? this.service.serviceName : '';\n    },\n    iframeUrl() {\n      return this.service ? this.getResUrl(this.service.props.entryResUrl, this.service.baseUrl) : '';\n    }\n  },\n  methods: {\n    isAbsoluteURL() {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return /^https?:\\/\\//i.test(url);\n    },\n    urlJoin() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return args.filter(arg => arg).join('/').replace(/([^:]\\/)\\/+/g, '$1');\n    },\n    getResUrl() {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'index.html';\n      let baseURL = arguments.length > 1 ? arguments[1] : undefined;\n      return this.isAbsoluteURL(url) ? url : this.urlJoin(baseURL, 'static', url);\n    },\n    handlePageLoad() {\n      this.syncData({\n        ...this.$route.params\n      });\n    },\n    syncData(data) {\n      try {\n        // @ts-ignore\n        this.$refs.extensionIframe.contentWindow.postMessage({\n          action: 'syncCustomData',\n          params: JSON.stringify(data)\n        }, '*');\n      } catch (e) {\n        console.warn('can not find extensionIframe');\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue?vue&type=script&lang=js&\n /* harmony default export */ const views_extPageContainervue_type_script_lang_js_ = (extPageContainervue_type_script_lang_js_); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(810);\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  views_extPageContainervue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/views/extPageContainer.vue\"\n/* harmony default export */ const extPageContainer = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9720\n");

/***/ }),

/***/ 4236:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ node_detail)\n});\n\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/node_detail.vue?vue&type=template&id=0cf21a04&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"bkloading\",\n          rawName: \"v-bkloading\",\n          value: {\n            isLoading: _vm.loading.isLoading,\n            title: _vm.loading.title,\n          },\n          expression:\n            \"{\\n        isLoading: loading.isLoading,\\n        title: loading.title\\n    }\",\n        },\n      ],\n      staticClass: \"node-detail-wrapper\",\n    },\n    [\n      _c(\"content-header\", { staticClass: \"info-header\" }, [\n        _c(\"div\", { attrs: { slot: \"left\" }, slot: \"left\" }, [\n          _c(\"i\", {\n            staticClass: \"devops-icon icon-arrows-left\",\n            on: { click: _vm.toNodeList },\n          }),\n          _vm._v(\" \"),\n          _vm.editable\n            ? _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"required\",\n                    expression: \"'required'\",\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.nodeDetails.displayName,\n                    expression: \"nodeDetails.displayName\",\n                  },\n                ],\n                ref: \"nodeName\",\n                staticClass: \"bk-form-input display-name-input\",\n                class: { \"is-danger\": _vm.errors.has(\"nodeName\") },\n                attrs: { type: \"text\", maxlength: \"30\", name: \"nodeName\" },\n                domProps: { value: _vm.nodeDetails.displayName },\n                on: {\n                  blur: _vm.saveName,\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.nodeDetails,\n                      \"displayName\",\n                      $event.target.value\n                    )\n                  },\n                },\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          !_vm.editable\n            ? _c(\"span\", { staticClass: \"header-text\" }, [\n                _vm._v(_vm._s(_vm.nodeDetails.displayName)),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          !_vm.editable && _vm.nodeDetails.canEdit\n            ? _c(\"i\", {\n                staticClass: \"devops-icon icon-edit\",\n                on: { click: _vm.editNodeName },\n              })\n            : _vm._e(),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"node-handle\",\n            attrs: { slot: \"right\" },\n            slot: \"right\",\n          },\n          [\n            _c(\n              \"span\",\n              { staticClass: \"copy-btn\", on: { click: _vm.copyHandle } },\n              [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(\n                      _vm.nodeDetails.os === \"WINDOWS\"\n                        ? _vm.$t(\"environment.nodeInfo.copyDownloadLink\")\n                        : _vm.$t(\"environment.nodeInfo.copyInstallCommand\")\n                    ) +\n                    \"\\n            \"\n                ),\n              ]\n            ),\n            _vm._v(\" \"),\n            _vm.nodeDetails.os === \"WINDOWS\"\n              ? _c(\n                  \"span\",\n                  {\n                    staticClass: \"download-btn\",\n                    on: { click: _vm.downloadHandle },\n                  },\n                  [\n                    _vm._v(\n                      _vm._s(\n                        _vm.$t(\n                          \"environment.nodeInfo.downloadInstallationPackage\"\n                        )\n                      )\n                    ),\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"i\", {\n              staticClass: \"devops-icon icon-refresh\",\n              on: { click: _vm.refresh },\n            }),\n          ]\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.showContent,\n              expression: \"showContent\",\n            },\n          ],\n          staticClass: \"sub-view-port\",\n        },\n        [\n          _c(\n            \"ul\",\n            { staticClass: \"base-prototype-list\" },\n            _vm._l(_vm.basePrototypeList, function (entry, index) {\n              return _c(\"li\", { key: index }, [\n                _c(\"div\", { staticClass: \"info-title\" }, [\n                  _vm._v(_vm._s(entry.name) + \"：\"),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"info-value\", attrs: { title: entry.value } },\n                  [_vm._v(_vm._s(entry.value))]\n                ),\n              ])\n            }),\n            0\n          ),\n          _vm._v(\" \"),\n          _c(\"node-overview-chart\"),\n          _vm._v(\" \"),\n          _c(\"node-detail-tab\"),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/views/node_detail.vue?vue&type=template&id=0cf21a04&\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.promise.js\nvar es_promise = __webpack_require__(1418);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(6294);\n// EXTERNAL MODULE: external \"Vue\"\nvar external_Vue_ = __webpack_require__(311);\nvar external_Vue_default = /*#__PURE__*/__webpack_require__.n(external_Vue_);\n;// CONCATENATED MODULE: ./src/utils/bus.js\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\n\n\n// Use a bus for components communication,\n// see https://vuejs.org/v2/guide/components.html#Non-Parent-Child-Communication\nconst bus = new (external_Vue_default())();\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(6397);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-detail-tab.vue?vue&type=template&id=513d4e42&\nvar node_detail_tabvue_type_template_id_513d4e42_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"node-details-tab\" },\n    [\n      _c(\n        \"bk-tab\",\n        {\n          staticStyle: { \"margin-top\": \"20px\" },\n          attrs: { active: _vm.activeName, type: _vm.currentType },\n          on: {\n            \"update:active\": function ($event) {\n              _vm.activeName = $event\n            },\n          },\n        },\n        _vm._l(_vm.menuList, function (panel, index) {\n          return _c(\n            \"bk-tab-panel\",\n            _vm._b({ key: index }, \"bk-tab-panel\", panel, false),\n            [\n              panel.name === \"base\" ? _c(\"basic-information\") : _vm._e(),\n              _vm._v(\" \"),\n              panel.name === \"envVariable\" ? _c(\"env-variable\") : _vm._e(),\n              _vm._v(\" \"),\n              panel.name === \"pipeline\" ? _c(\"pipeline-list\") : _vm._e(),\n              _vm._v(\" \"),\n              panel.name === \"activity\" ? _c(\"machine-record\") : _vm._e(),\n            ],\n            1\n          )\n        }),\n        1\n      ),\n    ],\n    1\n  )\n}\nvar node_detail_tabvue_type_template_id_513d4e42_staticRenderFns = []\nnode_detail_tabvue_type_template_id_513d4e42_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue?vue&type=template&id=513d4e42&\n\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/basic-information.vue?vue&type=template&id=89ce64e2&\nvar basic_informationvue_type_template_id_89ce64e2_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"basic-information-wrapper\" }, [\n    _c(\"div\", { staticClass: \"base-item-list\" }, [\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.startUser\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.startedUser || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.installPath\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.agentInstallPath || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.agentVersion\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.agentVersion || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.workerVersion\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.slaveVersion || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.maxParallelTaskCount\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm.isEditCount\n            ? _c(\"div\", { staticClass: \"display-item\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate.initial\",\n                      value: \"required|between:0,100|decimal:0\",\n                      expression: \"`required|between:0,100|decimal:0`\",\n                      modifiers: { initial: true },\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.parallelTaskCount,\n                      expression: \"parallelTaskCount\",\n                    },\n                  ],\n                  ref: \"parallelTaskCount\",\n                  staticClass: \"bk-form-input parallelTaskCount-input\",\n                  class: { \"is-danger\": _vm.errors.has(\"parallelTaskCount\") },\n                  attrs: {\n                    type: \"number\",\n                    name: \"parallelTaskCount\",\n                    placeholder: _vm.$t(\n                      \"environment.nodeInfo.parallelTaskCountTips\"\n                    ),\n                  },\n                  domProps: { value: _vm.parallelTaskCount },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.parallelTaskCount = $event.target.value\n                    },\n                  },\n                }),\n              ])\n            : _c(\"div\", { staticClass: \"editing-item\" }, [\n                _vm._v(_vm._s(_vm.nodeDetails.parallelTaskCount || \"--\")),\n              ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"handle-btn\" }, [\n          _vm.isEditCount\n            ? _c(\"div\", [\n                _c(\n                  \"span\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.saveHandle(\"parallelTaskCount\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"environment.save\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.editHandle(\"parallelTaskCount\", false)\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"environment.cancel\")))]\n                ),\n              ])\n            : _c(\n                \"div\",\n                { class: { \"is-disabled\": !_vm.nodeDetails.canEdit } },\n                [\n                  _c(\n                    \"span\",\n                    {\n                      on: {\n                        click: function ($event) {\n                          return _vm.editHandle(\"parallelTaskCount\", true)\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"environment.edit\")))]\n                  ),\n                ]\n              ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.status\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"item-value\",\n            class: _vm.nodeDetails.status === \"NORMAL\" ? \"normal\" : \"abnormal\",\n          },\n          [\n            _vm._v(\n              \"\\n                \" +\n                _vm._s(\n                  _vm.nodeDetails.status === \"NORMAL\"\n                    ? _vm.$t(\"environment.nodeInfo.normal\")\n                    : _vm.$t(\"environment.nodeInfo.abnormal\")\n                ) +\n                \"\\n            \"\n            ),\n          ]\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.importTime\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.createdTime || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.lastActiveTime\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"item-value\" }, [\n          _vm._v(_vm._s(_vm.nodeDetails.lastHeartbeatTime || \"--\")),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"item-content\" }, [\n        _c(\"div\", { staticClass: \"item-label\" }, [\n          _vm._v(\n            _vm._s(\n              _vm.nodeDetails.os === \"WINDOWS\"\n                ? _vm.$t(\"environment.nodeInfo.downloadLink\")\n                : _vm.$t(\"environment.nodeInfo.installCommand\")\n            )\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"item-value\", attrs: { title: _vm.agentLink } },\n          [_vm._v(_vm._s(_vm.agentLink))]\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"handle-btn\" }, [\n          _c(\n            \"span\",\n            { staticClass: \"agent-url\", on: { click: _vm.copyHandle } },\n            [_vm._v(_vm._s(_vm.$t(\"environment.copy\")))]\n          ),\n          _vm._v(\" \"),\n          _vm.nodeDetails.os === \"WINDOWS\"\n            ? _c(\"span\", { on: { click: _vm.downloadHandle } }, [\n                _vm._v(_vm._s(_vm.$t(\"environment.download\"))),\n              ])\n            : _vm._e(),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar basic_informationvue_type_template_id_89ce64e2_staticRenderFns = []\nbasic_informationvue_type_template_id_89ce64e2_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue?vue&type=template&id=89ce64e2&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/basic-information.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const basic_informationvue_type_script_lang_js_ = ({\n  data() {\n    return {\n      isEditWorkspace: false,\n      isEditCount: false,\n      isEditCreatedUser: false,\n      isEditNoticeType: false,\n      workspace: '',\n      createdUser: '',\n      parallelTaskCount: 0,\n      noticeTypeList: [{\n        name: 'work-wechat',\n        value: 'RTX',\n        isChecked: true\n      }, {\n        name: 'wechat',\n        value: 'WECHAT',\n        isChecked: false\n      }, {\n        name: 'email',\n        value: 'EMAIL',\n        isChecked: false\n      }]\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    agentLink() {\n      return this.nodeDetails.os === 'WINDOWS' ? this.nodeDetails.agentUrl : this.nodeDetails.agentScript;\n    }\n  },\n  mounted() {},\n  methods: {\n    editHandle(type, isOpen) {\n      if (!this.nodeDetails.canEdit) {\n        return;\n      }\n      switch (type) {\n        case 'workspace':\n          this.isEditWorkspace = isOpen;\n          if (isOpen) {\n            this.workspace = this.nodeDetails.workspace;\n          }\n          break;\n        case 'parallelTaskCount':\n          this.isEditCount = isOpen;\n          if (isOpen) {\n            this.parallelTaskCount = this.nodeDetails.parallelTaskCount;\n            this.$nextTick(() => {\n              this.$refs.parallelTaskCount.focus();\n            });\n          }\n          break;\n        case 'createdUser':\n          this.isEditCreatedUser = isOpen;\n          if (isOpen) {\n            this.createdUser = this.nodeDetails.createdUser;\n          }\n          break;\n        case 'noticeType':\n          this.isEditNoticeType = isOpen;\n          break;\n        default:\n          break;\n      }\n    },\n    async saveHandle() {\n      const valid = await this.$validator.validate();\n      if (valid) {\n        this.saveParallelTaskCount(this.parallelTaskCount);\n      }\n    },\n    async saveParallelTaskCount(parallelTaskCount) {\n      let message, theme;\n      try {\n        await this.$store.dispatch('environment/saveParallelTaskCount', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          parallelTaskCount\n        });\n        message = this.$t('environment.successfullySaved');\n        theme = 'success';\n        this.requestNodeDetail();\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async requestNodeDetail() {\n      try {\n        const res = await this.$store.dispatch('environment/requestNodeDetail', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.$store.commit('environment/updateNodeDetail', {\n          res\n        });\n        this.isEditCount = false;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    downloadHandle() {\n      window.location.href = this.nodeDetails.agentUrl;\n    },\n    copyHandle() {\n      if ((0,util/* copyText */.zp)(this.agentLink)) {\n        this.$bkMessage({\n          theme: 'success',\n          message: this.$t('environment.successfullyCopyed')\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue?vue&type=script&lang=js&\n /* harmony default export */ const environment_basic_informationvue_type_script_lang_js_ = (basic_informationvue_type_script_lang_js_); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(810);\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  environment_basic_informationvue_type_script_lang_js_,\n  basic_informationvue_type_template_id_89ce64e2_render,\n  basic_informationvue_type_template_id_89ce64e2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/components/devops/environment/basic-information.vue\"\n/* harmony default export */ const basic_information = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/env-variable.vue?vue&type=template&id=f094636c&\nvar env_variablevue_type_template_id_f094636c_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"env-variable-wrapper\" }, [\n    _c(\"div\", { staticClass: \"Key-value-nomal\" }, [\n      _c(\n        \"ul\",\n        [\n          _vm.renderList.length\n            ? _vm._l(_vm.renderList, function (param, index) {\n                return _c(\"li\", { key: index, staticClass: \"param-item\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\",\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: param.name,\n                        expression: \"param.name\",\n                      },\n                    ],\n                    staticClass: \"bk-form-input\",\n                    class: {\n                      \"is-danger\": _vm.errors.has(\"param-\" + index + \"-key\"),\n                    },\n                    attrs: {\n                      name: \"param-\" + index + \"-key\",\n                      disabled: !_vm.editable,\n                    },\n                    domProps: { value: param.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(param, \"name\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"i\", { staticClass: \"equal-sign\" }, [_vm._v(\"=\")]),\n                  _vm._v(\" \"),\n                  (param.secure ? \"password\" : \"text\") === \"checkbox\"\n                    ? _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\",\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: param.value,\n                            expression: \"param.value\",\n                          },\n                        ],\n                        staticClass: \"bk-form-input\",\n                        class: {\n                          \"editable-input\": _vm.editable,\n                          \"is-danger\": _vm.errors.has(\n                            \"param-\" + index + \"-value\"\n                          ),\n                        },\n                        attrs: {\n                          name: \"param-\" + index + \"-value\",\n                          disabled: !_vm.editable,\n                          type: \"checkbox\",\n                        },\n                        domProps: {\n                          checked: Array.isArray(param.value)\n                            ? _vm._i(param.value, null) > -1\n                            : param.value,\n                        },\n                        on: {\n                          change: function ($event) {\n                            var $$a = param.value,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(param, \"value\", $$a.concat([$$v]))\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    param,\n                                    \"value\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(param, \"value\", $$c)\n                            }\n                          },\n                        },\n                      })\n                    : (param.secure ? \"password\" : \"text\") === \"radio\"\n                    ? _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\",\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: param.value,\n                            expression: \"param.value\",\n                          },\n                        ],\n                        staticClass: \"bk-form-input\",\n                        class: {\n                          \"editable-input\": _vm.editable,\n                          \"is-danger\": _vm.errors.has(\n                            \"param-\" + index + \"-value\"\n                          ),\n                        },\n                        attrs: {\n                          name: \"param-\" + index + \"-value\",\n                          disabled: !_vm.editable,\n                          type: \"radio\",\n                        },\n                        domProps: { checked: _vm._q(param.value, null) },\n                        on: {\n                          change: function ($event) {\n                            return _vm.$set(param, \"value\", null)\n                          },\n                        },\n                      })\n                    : _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\",\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: param.value,\n                            expression: \"param.value\",\n                          },\n                        ],\n                        staticClass: \"bk-form-input\",\n                        class: {\n                          \"editable-input\": _vm.editable,\n                          \"is-danger\": _vm.errors.has(\n                            \"param-\" + index + \"-value\"\n                          ),\n                        },\n                        attrs: {\n                          name: \"param-\" + index + \"-value\",\n                          disabled: !_vm.editable,\n                          type: param.secure ? \"password\" : \"text\",\n                        },\n                        domProps: { value: param.value },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(param, \"value\", $event.target.value)\n                          },\n                        },\n                      }),\n                  _vm._v(\" \"),\n                  _vm.editable\n                    ? _c(\"i\", {\n                        staticClass: \"devops-icon text-type-icon\",\n                        class: param.secure ? \"icon-eye\" : \"icon-hide\",\n                        on: {\n                          click: function ($event) {\n                            return _vm.toggleInputType(index)\n                          },\n                        },\n                      })\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.editable\n                    ? _c(\"section\", [\n                        _c(\"i\", {\n                          staticClass: \"devops-icon icon-minus-circle\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.reduceHandle(index, \"reduce\")\n                            },\n                          },\n                        }),\n                      ])\n                    : _vm._e(),\n                ])\n              })\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _vm.editable || !_vm.renderList.length\n        ? _c(\n            \"p\",\n            {\n              staticClass: \"add-variable\",\n              class: { \"is-disabled\": !_vm.nodeDetails.canEdit },\n              on: { click: _vm.addHandle },\n            },\n            [\n              _c(\"i\", { staticClass: \"devops-icon icon-plus-circle\" }),\n              _vm._v(\n                _vm._s(_vm.$t(\"environment.envInfo.createVariable\")) +\n                  \"\\n        \"\n              ),\n            ]\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"footer-handle\" },\n        [\n          !_vm.editable && _vm.renderList.length\n            ? _c(\n                \"bk-button\",\n                {\n                  attrs: {\n                    theme: \"primary\",\n                    disabled: !_vm.nodeDetails.canEdit,\n                  },\n                  on: { click: _vm.edithandle },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"environment.edit\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.editable\n            ? _c(\n                \"bk-button\",\n                { attrs: { theme: \"primary\" }, on: { click: _vm.save } },\n                [_vm._v(_vm._s(_vm.$t(\"environment.save\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.editable\n            ? _c(\n                \"bk-button\",\n                {\n                  attrs: { theme: \"defalut\" },\n                  on: {\n                    click: function ($event) {\n                      _vm.editable = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"environment.cancel\")))]\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n    ]),\n  ])\n}\nvar env_variablevue_type_template_id_f094636c_staticRenderFns = []\nenv_variablevue_type_template_id_f094636c_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue?vue&type=template&id=f094636c&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/env-variable.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const env_variablevue_type_script_lang_js_ = ({\n  data() {\n    return {\n      editable: false,\n      paramList: [],\n      editableList: []\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    renderList() {\n      return this.editable ? this.editableList : this.paramList;\n    }\n  },\n  mounted() {\n    this.requestEnvs();\n  },\n  created() {\n    bus.$off('refreshEnv');\n    bus.$on('refreshEnv', () => {\n      this.requestEnvs();\n    });\n  },\n  methods: {\n    edithandle() {\n      this.editable = true;\n      this.editableList = JSON.parse(JSON.stringify(this.paramList));\n    },\n    async requestEnvs() {\n      try {\n        const res = await this.$store.dispatch('environment/requestEnvs', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.paramList.splice(0, this.paramList.length, ...(res || []));\n        this.editable = false;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    addHandle() {\n      if (this.nodeDetails.canEdit) {\n        this.editable = true;\n        this.editableList.push({\n          name: '',\n          value: '',\n          secure: false\n        });\n      }\n    },\n    reduceHandle(index, type) {\n      this.editableList.splice(index, 1);\n    },\n    toggleInputType(key) {\n      this.editableList = this.editableList.map((item, index) => {\n        return {\n          ...item,\n          secure: index === key ? !item.secure : item.secure\n        };\n      });\n    },\n    async save() {\n      const valid = await this.$validator.validate();\n      if (valid) {\n        let message, theme;\n        const params = this.editableList;\n        try {\n          await this.$store.dispatch('environment/saveEnvs', {\n            projectId: this.projectId,\n            nodeHashId: this.nodeHashId,\n            params\n          });\n          message = this.$t('environment.successfullySaved');\n          theme = 'success';\n          this.requestEnvs();\n        } catch (err) {\n          message = err.message ? err.message : err;\n          theme = 'error';\n        } finally {\n          this.$bkMessage({\n            message,\n            theme\n          });\n        }\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue?vue&type=script&lang=js&\n /* harmony default export */ const environment_env_variablevue_type_script_lang_js_ = (env_variablevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar env_variable_component = (0,componentNormalizer/* default */.Z)(\n  environment_env_variablevue_type_script_lang_js_,\n  env_variablevue_type_template_id_f094636c_render,\n  env_variablevue_type_template_id_f094636c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var env_variable_api; }\nenv_variable_component.options.__file = \"src/components/devops/environment/env-variable.vue\"\n/* harmony default export */ const env_variable = (env_variable_component.exports);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/pipeline-list.vue?vue&type=template&id=015d3b6b&\nvar pipeline_listvue_type_template_id_015d3b6b_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"pipeline-list-wrapper\" },\n    [\n      _c(\n        \"bk-table\",\n        {\n          staticClass: \"pipeline-table\",\n          attrs: {\n            size: \"small\",\n            \"outer-border\": false,\n            data: _vm.pipelineList,\n            pagination: _vm.pagination,\n            \"empty-text\": _vm.$t(\"environment.noData\"),\n          },\n          on: {\n            \"page-change\": _vm.handlePageChange,\n            \"page-limit-change\": _vm.handlePageLimitChange,\n          },\n        },\n        [\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.pipeline\"),\n              prop: \"pipelineName\",\n              \"min-width\": \"200\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"item-pipelinename\",\n                        attrs: {\n                          title: props.row.pipelineName,\n                          target: \"_blank\",\n                          href:\n                            \"/console/pipeline/\" +\n                            props.row.projectId +\n                            \"/\" +\n                            props.row.pipelineId +\n                            \"/detail/\" +\n                            props.row.buildId,\n                        },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(props.row.pipelineName) + \"\\n                \"\n                        ),\n                      ]\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.nodeInfo.buildNo\"),\n              prop: \"buildNumber\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [_c(\"span\", [_vm._v(_vm._s(props.row.buildNumber))])]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.nodeInfo.ownJob\"),\n              prop: \"taskName\",\n              \"min-width\": \"160\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _c(\"span\", { attrs: { title: props.row.taskName } }, [\n                      _vm._v(_vm._s(props.row.taskName)),\n                    ]),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.nodeInfo.buildTaskStatus\"),\n              prop: \"status\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        class: {\n                          \"is-success\": props.row.status === \"DONE\",\n                          \"is-fail\": props.row.status === \"FAIL\",\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.statusMap[props.row.status]))]\n                    ),\n                    _vm._v(\" \"),\n                    props.row.agentTask &&\n                    props.row.agentTask.status === \"RUNNING\"\n                      ? _c(\"span\", [\n                          _vm._v(\n                            _vm._s(\n                              \"（\" +\n                                _vm.$t(\n                                  \"environment.nodeInfo.agentTaskRunning\"\n                                ) +\n                                \"）\"\n                            )\n                          ),\n                        ])\n                      : _vm._e(),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.envInfo.creationTime\"),\n              prop: \"createdTime\",\n              \"min-width\": \"160\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(_vm.localConvertTime(props.row.createdTime)) +\n                        \"\\n            \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.updateTime\"),\n              prop: \"updatedTime\",\n              \"min-width\": \"160\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(_vm.localConvertTime(props.row.updatedTime)) +\n                        \"\\n            \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar pipeline_listvue_type_template_id_015d3b6b_staticRenderFns = []\npipeline_listvue_type_template_id_015d3b6b_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue?vue&type=template&id=015d3b6b&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/pipeline-list.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const pipeline_listvue_type_script_lang_js_ = ({\n  data() {\n    return {\n      loopTimer: '',\n      pipelineList: [],\n      pagination: {\n        current: 1,\n        count: 30,\n        limitList: [10, 20, 50, 100],\n        limit: 10\n      },\n      statusMap: {\n        QUEUE: this.$t('environment.nodeInfo.queuing'),\n        RUNNING: this.$t('environment.nodeInfo.running'),\n        DONE: this.$t('environment.nodeInfo.succeed'),\n        FAIL: this.$t('environment.nodeInfo.fail')\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    }\n  },\n  created() {\n    bus.$off('refreshBuild');\n    bus.$on('refreshBuild', () => {\n      this.requestBuildList(this.pagination.current, this.pagination.limit);\n      this.loopCheck();\n    });\n  },\n  async mounted() {\n    await this.requestBuildList(this.pagination.current, this.pagination.limit);\n    this.loopCheck();\n  },\n  beforeDestroy() {\n    clearTimeout(this.loopTimer);\n    this.loopTimer = null;\n  },\n  methods: {\n    async requestBuildList(page, pageSize) {\n      try {\n        const res = await this.$store.dispatch('environment/requestBuildList', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          page: page,\n          pageSize: pageSize\n        });\n        this.pipelineList.splice(0, this.pipelineList.length, ...(res.records || []));\n        this.pagination.count = res.count;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async handlePageLimitChange(limit) {\n      this.pagination.current = 1;\n      this.pagination.limit = limit;\n      await this.requestBuildList(1, limit);\n      this.loopCheck();\n    },\n    async handlePageChange(curPage) {\n      this.pagination.current = curPage;\n      await this.requestBuildList(curPage, this.pagination.limit);\n      this.loopCheck();\n    },\n    /**\n     *  轮询检查状态\n     */\n    loopCheck() {\n      clearTimeout(this.loopTimer);\n      const needLoop = this.pipelineList.some(item => item.status === 'RUNNING' || item.agentTask && item.agentTask.status === 'RUNNING');\n      if (needLoop) {\n        this.loopTimer = setTimeout(async () => {\n          try {\n            await this.requestBuildList(this.pagination.current, this.pagination.limit);\n            this.loopCheck();\n          } catch (err) {\n            this.$bkMessage({\n              message: err.message || err,\n              theme: 'error'\n            });\n          }\n        }, 5000);\n      }\n    },\n    /**\n     * 处理时间格式\n     */\n    localConvertTime(timestamp) {\n      return (0,util/* convertTime */.rJ)(timestamp * 1000);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue?vue&type=script&lang=js&\n /* harmony default export */ const environment_pipeline_listvue_type_script_lang_js_ = (pipeline_listvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar pipeline_list_component = (0,componentNormalizer/* default */.Z)(\n  environment_pipeline_listvue_type_script_lang_js_,\n  pipeline_listvue_type_template_id_015d3b6b_render,\n  pipeline_listvue_type_template_id_015d3b6b_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var pipeline_list_api; }\npipeline_list_component.options.__file = \"src/components/devops/environment/pipeline-list.vue\"\n/* harmony default export */ const pipeline_list = (pipeline_list_component.exports);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/machine-record.vue?vue&type=template&id=bacb0ef6&\nvar machine_recordvue_type_template_id_bacb0ef6_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"machine-record-wrapper\" },\n    [\n      _c(\n        \"bk-table\",\n        {\n          staticClass: \"record-table\",\n          attrs: {\n            size: \"small\",\n            \"outer-border\": false,\n            data: _vm.recordList,\n            pagination: _vm.pagination,\n            \"empty-text\": _vm.$t(\"environment.noData\"),\n          },\n          on: {\n            \"page-change\": _vm.handlePageChange,\n            \"page-limit-change\": _vm.handlePageLimitChange,\n          },\n        },\n        [\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.time\"),\n              prop: \"actionTime\",\n              \"min-width\": \"160\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(_vm.localConvertTime(props.row.actionTime)) +\n                        \"\\n            \"\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-table-column\", {\n            attrs: {\n              label: _vm.$t(\"environment.nodeInfo.ownJob\"),\n              prop: \"action\",\n              \"min-width\": \"160\",\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (props) {\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        class:\n                          props.row.action === \"ONLINE\" ? \"online\" : \"offline\",\n                        attrs: { title: props.row.action },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            props.row.action === \"ONLINE\"\n                              ? _vm.$t(\"environment.nodeInfo.online\")\n                              : _vm.$t(\"environment.nodeInfo.offline\")\n                          )\n                        ),\n                      ]\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar machine_recordvue_type_template_id_bacb0ef6_staticRenderFns = []\nmachine_recordvue_type_template_id_bacb0ef6_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue?vue&type=template&id=bacb0ef6&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/machine-record.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ const machine_recordvue_type_script_lang_js_ = ({\n  data() {\n    return {\n      recordList: [],\n      pagination: {\n        count: 30,\n        current: 1,\n        limitList: [10, 20, 50, 100],\n        limit: 10\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    }\n  },\n  created() {\n    bus.$off('refreshAction');\n    bus.$on('refreshAction', () => {\n      this.requestActionList(this.pagination.current, this.pagination.limit);\n    });\n  },\n  mounted() {\n    this.requestActionList(this.pagination.current, this.pagination.limit);\n  },\n  methods: {\n    async requestActionList(page, pageSize) {\n      try {\n        const res = await this.$store.dispatch('environment/requestActionList', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          page: page || 1,\n          pageSize: pageSize || 10\n        });\n        this.recordList.splice(0, this.recordList.length, ...(res.records || []));\n        this.pagination.count = res.count;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    handlePageLimitChange(limit) {\n      this.pagination.current = 1;\n      this.pagination.limit = limit;\n      this.requestActionList(this.pagination.current, this.pagination.limit);\n    },\n    handlePageChange(newPage) {\n      this.pagination.current = newPage;\n      this.requestActionList(newPage, this.pagination.limit);\n    },\n    /**\n     * 处理时间格式\n     */\n    localConvertTime(timestamp) {\n      return (0,util/* convertTime */.rJ)(timestamp * 1000);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue?vue&type=script&lang=js&\n /* harmony default export */ const environment_machine_recordvue_type_script_lang_js_ = (machine_recordvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar machine_record_component = (0,componentNormalizer/* default */.Z)(\n  environment_machine_recordvue_type_script_lang_js_,\n  machine_recordvue_type_template_id_bacb0ef6_render,\n  machine_recordvue_type_template_id_bacb0ef6_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var machine_record_api; }\nmachine_record_component.options.__file = \"src/components/devops/environment/machine-record.vue\"\n/* harmony default export */ const machine_record = (machine_record_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-detail-tab.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ const node_detail_tabvue_type_script_lang_js_ = ({\n  components: {\n    BasicInformation: basic_information,\n    EnvVariable: env_variable,\n    PipelineList: pipeline_list,\n    MachineRecord: machine_record\n  },\n  data() {\n    return {\n      active: 'mission',\n      type: ['card', 'border-card', 'unborder-card'],\n      currentType: 'card',\n      activeName: 'base',\n      menuList: [{\n        name: 'base',\n        label: this.$t('environment.basicInfo')\n      }, {\n        name: 'envVariable',\n        label: this.$t('environment.environmentVariable')\n      }, {\n        name: 'pipeline',\n        label: this.$t('environment.nodeInfo.buildTask')\n      }, {\n        name: 'activity',\n        label: this.$t('environment.nodeInfo.machineActivityRecord')\n      }]\n    };\n  },\n  mounted() {},\n  methods: {\n    tabChanged(tab) {\n      this.activeName = tab;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue?vue&type=script&lang=js&\n /* harmony default export */ const devops_node_detail_tabvue_type_script_lang_js_ = (node_detail_tabvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_detail_tab_component = (0,componentNormalizer/* default */.Z)(\n  devops_node_detail_tabvue_type_script_lang_js_,\n  node_detail_tabvue_type_template_id_513d4e42_render,\n  node_detail_tabvue_type_template_id_513d4e42_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var node_detail_tab_api; }\nnode_detail_tab_component.options.__file = \"src/components/devops/node-detail-tab.vue\"\n/* harmony default export */ const node_detail_tab = (node_detail_tab_component.exports);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-overview-chart.vue?vue&type=template&id=f6b4c89a&\nvar node_overview_chartvue_type_template_id_f6b4c89a_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"node-overview-chart-wrapper\" }, [\n    _c(\"div\", { staticClass: \"node-overview-chart\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"part top-left\" },\n        [\n          _c(\"div\", { staticClass: \"info\" }, [\n            _c(\"div\", { staticClass: \"left\" }, [\n              _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.cpuUsageRate\"))),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"right\" },\n              [\n                _c(\n                  \"bk-dropdown-menu\",\n                  { ref: \"cpuDropdown\", attrs: { align: \"right\" } },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { slot: \"dropdown-trigger\" },\n                        slot: \"dropdown-trigger\",\n                      },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(_vm.cpuToggleRangeStr))]),\n                        _vm._v(\" \"),\n                        _c(\"button\", { staticClass: \"dropdown-button\" }, [\n                          _c(\"i\", {\n                            staticClass: \"devops-icon icon-angle-down\",\n                          }),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"bk-dropdown-list\",\n                        attrs: { slot: \"dropdown-content\" },\n                        slot: \"dropdown-content\",\n                      },\n                      [\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"cpuDropdown\",\n                                    \"cpuToggleRangeStr\",\n                                    \"cpu_summary\",\n                                    \"1\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneHour\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"cpuDropdown\",\n                                    \"cpuToggleRangeStr\",\n                                    \"cpu_summary\",\n                                    \"2\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneDay\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"cpuDropdown\",\n                                    \"cpuToggleRangeStr\",\n                                    \"cpu_summary\",\n                                    \"3\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"chart\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.isEmptyCpu,\n                expression: \"!isEmptyCpu\",\n              },\n            ],\n            ref: \"cpuLine1\",\n            attrs: {\n              option: _vm.cpuLine,\n              autoresize: \"\",\n              loading: _vm.cpuChartLoading,\n              \"loading-options\": _vm.chartLoadingOption,\n            },\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-exception\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.isEmptyCpu,\n                expression: \"isEmptyCpu\",\n              },\n            ],\n            staticClass: \"exception-wrap-item exception-part\",\n            attrs: { type: \"empty\", scene: \"part\" },\n          }),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"part top-right\" },\n        [\n          _c(\"div\", { staticClass: \"info\" }, [\n            _c(\"div\", { staticClass: \"left\" }, [\n              _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.ramUsageRate\"))),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"right\" },\n              [\n                _c(\n                  \"bk-dropdown-menu\",\n                  { ref: \"memoryDropdown\", attrs: { align: \"right\" } },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { slot: \"dropdown-trigger\" },\n                        slot: \"dropdown-trigger\",\n                      },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(_vm.memToggleRangeStr))]),\n                        _vm._v(\" \"),\n                        _c(\"button\", { staticClass: \"dropdown-button\" }, [\n                          _c(\"i\", {\n                            staticClass: \"devops-icon icon-angle-down\",\n                          }),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"bk-dropdown-list\",\n                        attrs: { slot: \"dropdown-content\" },\n                        slot: \"dropdown-content\",\n                      },\n                      [\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"memoryDropdown\",\n                                    \"memToggleRangeStr\",\n                                    \"mem\",\n                                    \"1\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneHour\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"memoryDropdown\",\n                                    \"memToggleRangeStr\",\n                                    \"mem\",\n                                    \"2\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneDay\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"memoryDropdown\",\n                                    \"memToggleRangeStr\",\n                                    \"mem\",\n                                    \"3\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"chart\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.isEmptyMemory,\n                expression: \"!isEmptyMemory\",\n              },\n            ],\n            ref: \"memoryLine1\",\n            attrs: {\n              option: _vm.memoryLine,\n              loading: _vm.memChartLoading,\n              \"loading-options\": _vm.chartLoadingOption,\n              autoresize: \"\",\n            },\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-exception\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.isEmptyMemory,\n                expression: \"isEmptyMemory\",\n              },\n            ],\n            staticClass: \"exception-wrap-item exception-part\",\n            attrs: { type: \"empty\", scene: \"part\" },\n          }),\n        ],\n        1\n      ),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"node-overview-chart\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"part bottom-left\" },\n        [\n          _c(\"div\", { staticClass: \"info\" }, [\n            _c(\"div\", { staticClass: \"left\" }, [\n              _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.networkIo\"))),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"right\" },\n              [\n                _c(\n                  \"bk-dropdown-menu\",\n                  { ref: \"networkDropdown\", attrs: { align: \"right\" } },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { slot: \"dropdown-trigger\" },\n                        slot: \"dropdown-trigger\",\n                      },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(_vm.networkToggleRangeStr))]),\n                        _vm._v(\" \"),\n                        _c(\"button\", { staticClass: \"dropdown-button\" }, [\n                          _c(\"i\", {\n                            staticClass: \"devops-icon icon-angle-down\",\n                          }),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"bk-dropdown-list\",\n                        attrs: { slot: \"dropdown-content\" },\n                        slot: \"dropdown-content\",\n                      },\n                      [\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"networkDropdown\",\n                                    \"networkToggleRangeStr\",\n                                    \"net\",\n                                    \"1\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneHour\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"networkDropdown\",\n                                    \"networkToggleRangeStr\",\n                                    \"net\",\n                                    \"2\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneDay\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"networkDropdown\",\n                                    \"networkToggleRangeStr\",\n                                    \"net\",\n                                    \"3\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"chart\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.isEmptyNetwork,\n                expression: \"!isEmptyNetwork\",\n              },\n            ],\n            ref: \"networkLine1\",\n            attrs: {\n              option: _vm.networkLine,\n              loading: _vm.netChartLoading,\n              \"loading-options\": _vm.chartLoadingOption,\n              autoresize: \"\",\n            },\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-exception\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.isEmptyNetwork,\n                expression: \"isEmptyNetwork\",\n              },\n            ],\n            staticClass: \"exception-wrap-item exception-part\",\n            attrs: { type: \"empty\", scene: \"part\" },\n          }),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"part\" },\n        [\n          _c(\"div\", { staticClass: \"info\" }, [\n            _c(\"div\", { staticClass: \"left\" }, [\n              _vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.diskIo\"))),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"right\" },\n              [\n                _c(\n                  \"bk-dropdown-menu\",\n                  { ref: \"storageDropdown\", attrs: { align: \"right\" } },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticStyle: { cursor: \"pointer\" },\n                        attrs: { slot: \"dropdown-trigger\" },\n                        slot: \"dropdown-trigger\",\n                      },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(_vm.storageToggleRangeStr))]),\n                        _vm._v(\" \"),\n                        _c(\"button\", { staticClass: \"dropdown-button\" }, [\n                          _c(\"i\", {\n                            staticClass: \"devops-icon icon-angle-down\",\n                          }),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"ul\",\n                      {\n                        staticClass: \"bk-dropdown-list\",\n                        attrs: { slot: \"dropdown-content\" },\n                        slot: \"dropdown-content\",\n                      },\n                      [\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"storageDropdown\",\n                                    \"storageToggleRangeStr\",\n                                    \"io\",\n                                    \"1\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneHour\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"storageDropdown\",\n                                    \"storageToggleRangeStr\",\n                                    \"io\",\n                                    \"2\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneDay\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"li\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:;\" },\n                              on: {\n                                click: function ($event) {\n                                  $event.stopPropagation()\n                                  return _vm.toggleRange(\n                                    \"storageDropdown\",\n                                    \"storageToggleRangeStr\",\n                                    \"io\",\n                                    \"3\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\"))\n                              ),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"chart\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.isEmptyDiskio,\n                expression: \"!isEmptyDiskio\",\n              },\n            ],\n            ref: \"storageLine1\",\n            attrs: {\n              option: _vm.storageLine,\n              loading: _vm.ioChartLoading,\n              \"loading-options\": _vm.chartLoadingOption,\n              autoresize: \"\",\n            },\n          }),\n          _vm._v(\" \"),\n          _c(\"bk-exception\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.isEmptyDiskio,\n                expression: \"isEmptyDiskio\",\n              },\n            ],\n            staticClass: \"exception-wrap-item exception-part\",\n            attrs: { type: \"empty\", scene: \"part\" },\n          }),\n        ],\n        1\n      ),\n    ]),\n  ])\n}\nvar node_overview_chartvue_type_template_id_f6b4c89a_staticRenderFns = []\nnode_overview_chartvue_type_template_id_f6b4c89a_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue?vue&type=template&id=f6b4c89a&\n\n// EXTERNAL MODULE: ../node_modules/echarts/lib/extension.js\nvar extension = __webpack_require__(549);\n// EXTERNAL MODULE: ../node_modules/vue-echarts/dist/index.esm.min.js + 3 modules\nvar index_esm_min = __webpack_require__(3786);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/renderer/installCanvasRenderer.js + 2 modules\nvar installCanvasRenderer = __webpack_require__(7631);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/chart/line/install.js + 20 modules\nvar install = __webpack_require__(3298);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/grid/install.js + 16 modules\nvar grid_install = __webpack_require__(8204);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/tooltip/install.js + 5 modules\nvar tooltip_install = __webpack_require__(1410);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/legend/install.js + 10 modules\nvar legend_install = __webpack_require__(2342);\n;// CONCATENATED MODULE: ./src/utils/chart-option.js\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\n\nconst localeEnvObj = window.devops.$i18n.t('environment');\nconst nodeOverview = {\n  // cpu 使用率图表\n  cpu: {\n    tooltip: {\n      trigger: 'axis',\n      confine: true,\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        if (params[0].value[1] === undefined) {\n          ret = `<div>${localeEnvObj.noDate}</div>`;\n        } else {\n          ret = `\n                        <div>${(0,util/* convertTime */.rJ)(Date.parse(params[0].value[0]))}</div>\n                        <div>${params[0].marker}${localeEnvObj.nodeInfo.cpuUsageRate}：${params[0].value[1]}%</div>\n                    `;\n        }\n        return ret;\n      }\n    },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n        }\n      },\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      // min: 0,\n      // max: 100,\n      // interval: 25,\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          return `${value}%`;\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      name: `${localeEnvObj.nodeInfo.cpuUsageRate}`,\n      showSymbol: false,\n      smooth: true,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#30d878' // 0% 处的颜色\n            }, {\n              offset: 1,\n              color: '#c0f3d6' // 100% 处的颜色\n            }],\n\n            globalCoord: false\n          }\n        }\n      },\n      itemStyle: {\n        normal: {\n          color: '#30d878'\n        }\n      },\n      data: []\n    }]\n  },\n  // 内存使用率\n  memory: {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        if (params[0].value[1] === undefined) {\n          ret = `<div>${localeEnvObj.noDate}</div>`;\n        } else {\n          ret = `\n                        <div>${(0,util/* convertTime */.rJ)(Date.parse(params[0].value[0]))}</div>\n                        <div>${params[0].marker}${localeEnvObj.nodeInfo.ramUsageRate}：${params[0].value[1]}%</div>\n                    `;\n        }\n        return ret;\n      }\n    },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          return `${value}%`;\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      name: 'total',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {\n          // color: {\n          //     type: 'linear',\n          //     x: 0,\n          //     y: 0,\n          //     x2: 0,\n          //     y2: 1,\n          //     colorStops: [\n          //         {\n          //             offset: 0, color: '#52a2ff' // 0% 处的颜色\n          //         },\n          //         {\n          //             offset: 1, color: '#a9d1ff' // 100% 处的颜色\n          //         }\n          //     ],\n          //     globalCoord: false\n          // }\n        }\n      },\n      // itemStyle: {\n      //     normal: {\n      //         color: '#52a2ff'\n      //     }\n      // }\n      data: []\n    }\n    // {\n    //     type: 'line',\n    //     name: 'used',\n    //     smooth: true,\n    //     showSymbol: false,\n    //     hoverAnimation: false,\n    //     areaStyle: {\n    //         normal: {\n    //             // color: {\n    //             //     type: 'linear',\n    //             //     x: 0,\n    //             //     y: 0,\n    //             //     x2: 0,\n    //             //     y2: 1,\n    //             //     colorStops: [\n    //             //         {\n    //             //             offset: 0, color: '#52a2ff' // 0% 处的颜色\n    //             //         },\n    //             //         {\n    //             //             offset: 1, color: '#a9d1ff' // 100% 处的颜色\n    //             //         }\n    //             //     ],\n    //             //     globalCoord: false\n    //             // }\n    //         }\n    //     }\n    //     // itemStyle: {\n    //     //     normal: {\n    //     //         color: 'red'\n    //     //     }\n    //     // }\n    // }\n    ]\n  },\n\n  // 网络使用率\n  network: {\n    tooltip: {\n      trigger: 'axis',\n      position: function (point, params, dom, rect, size) {\n        // 提示框高度\n        const boxHeight = size.contentSize[1];\n        return [point[0] + 20, point[1] - boxHeight / 2];\n      },\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        ret = `<div>${(0,util/* convertTime */.rJ)(Date.parse(params[0].value[0]))}</div>`;\n        params.forEach(item => {\n          let displayTime;\n          if (item.value[1] / (8 * 1024 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024 * 1024 * 1024) || 0).toFixed(2)}G`;\n          } else if (item.value[1] / (8 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024 * 1024) || 0).toFixed(2)}MB`;\n          } else if (item.value[1] / (8 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024) || 0).toFixed(2)}KB`;\n          } else {\n            displayTime = `${(item.value[1] / 8 || 0).toFixed(2)}B`;\n          }\n          ret += `<div>${item.marker}${item.seriesName}：${displayTime}</div>`;\n        });\n        return ret;\n      }\n    },\n    // legend: {\n    //     data: ['sent', 'recv']\n    // },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '50%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          console.log(value);\n          if (value / (8 * 1024 * 1024 * 1024) > 1) {\n            return `${(value / (8 * 1024 * 1024 * 1024)).toFixed(1)}G`;\n          } else if (value / (8 * 1024 * 1024) > 1) {\n            return `${(value / (8 * 1024 * 1024)).toFixed(1)}MB`;\n          } else if (value / (8 * 1024) > 1) {\n            return `${(value / (8 * 1024)).toFixed(1)}KB`;\n          } else {\n            return `${value / 8}B`;\n          }\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      // showSymbol: true,\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: '#ffbe21'\n        }\n      },\n      data: []\n    }, {\n      type: 'line',\n      // showSymbol: true,\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: 'red'\n        }\n      },\n      data: []\n    }]\n  },\n  // 存储使用率\n  storage: {\n    tooltip: {\n      trigger: 'axis',\n      // position: function (point, params, dom, rect, size) {\n      //     // 提示框高度\n      //     var boxHeight = size.contentSize[1]\n      //     return [point[0] + 20, point[1] - (boxHeight / 2)]\n      // },\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        ret = `<div>${(0,util/* convertTime */.rJ)(Date.parse(params[0].value[0]))}</div>`;\n        params.forEach(item => {\n          let displayTime;\n          if (item.value[1] / (1024 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (1024 * 1024 * 1024) || 0).toFixed(2)}G`;\n          } else if (item.value[1] / (1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (1024 * 1024) || 0).toFixed(2)}MB`;\n          } else if (item.value[1] / 1024 >= 1) {\n            displayTime = `${(item.value[1] / 1024 || 0).toFixed(2)}KB`;\n          } else {\n            displayTime = `${item.value[1] || 0}B`;\n          }\n          ret += `<div>${item.marker}${item.seriesName}：${displayTime}</div>`;\n        });\n        return ret;\n      }\n    },\n    // legend: {\n    //     data: ['sent', 'recv']\n    // },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          if (value / (1024 * 1024 * 1024) > 1) {\n            return `${(value / (1024 * 1024 * 1024)).toFixed(0)}G`;\n          } else if (value / (1024 * 1024) > 1) {\n            return `${(value / (1024 * 1024)).toFixed(0)}MB`;\n          } else if (value / 1024 > 1) {\n            return `${(value / 1024).toFixed(0)}KB`;\n          } else {\n            return `${value}B`;\n          }\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: '#ffbe21'\n        }\n      },\n      data: []\n    }, {\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: 'red'\n        }\n      },\n      data: []\n    }]\n  }\n};\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-overview-chart.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n(0,extension/* use */.D)([installCanvasRenderer/* install */.N, install/* install */.N, grid_install/* install */.N, tooltip_install/* install */.N, legend_install/* install */.N]);\n/* harmony default export */ const node_overview_chartvue_type_script_lang_js_ = ({\n  components: {\n    chart: index_esm_min/* default */.ZP\n  },\n  data() {\n    return {\n      isEmptyCpu: false,\n      isEmptyMemory: false,\n      isEmptyNetwork: false,\n      isEmptyDiskio: false,\n      cpuToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      memToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      networkToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      storageToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      cpuLine: nodeOverview.cpu,\n      memoryLine: nodeOverview.memory,\n      networkLine: nodeOverview.network,\n      storageLine: nodeOverview.storage,\n      cpuChartLoading: false,\n      memChartLoading: false,\n      netChartLoading: false,\n      ioChartLoading: false\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    chartLoadingOption() {\n      return {\n        text: this.$t('environment.loading'),\n        color: '#30d878',\n        maskColor: 'rgba(255, 255, 255, 0.8)'\n      };\n    }\n  },\n  created() {\n    bus.$off('refreshCharts');\n    bus.$on('refreshCharts', () => {\n      this.fetchData('cpu_summary', this.cpuToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.cpuToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('mem', this.memToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.memToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('net', this.networkToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.networkToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('io', this.storageToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.storageToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n    });\n  },\n  mounted() {\n    this.fetchData('cpu_summary', '1');\n    this.fetchData('mem', '1');\n    this.fetchData('net', '1');\n    this.fetchData('io', '1');\n  },\n  methods: {\n    toggleRange(dropdownRef, toggleRangeStr, idx, range) {\n      if (range === '1') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneHour');\n      } else if (range === '2') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneDay');\n      } else if (range === '3') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneWeek');\n      }\n      this.$refs[dropdownRef].hide();\n      this.fetchData(idx, range);\n    },\n    async fetchData(idx, range) {\n      const params = {\n        projectId: this.projectId,\n        nodeHashId: this.nodeHashId,\n        timeRange: range === '1' ? 'HOUR' : range === '2' ? 'DAY' : 'WEEK'\n      };\n\n      // 设置图表数据的方法名\n      let hookFuncName;\n      if (idx === 'cpu_summary') {\n        hookFuncName = 'setCpuData';\n        this.cpuChartLoading = true;\n      } else if (idx === 'mem') {\n        hookFuncName = 'setMemData';\n        this.memChartLoading = true;\n      } else if (idx === 'io') {\n        hookFuncName = 'setStorageData';\n        this.ioChartLoading = true;\n      } else if (idx === 'net') {\n        hookFuncName = 'setNetworkData';\n        this.netChartLoading = true;\n      }\n      if (hookFuncName) {\n        this[hookFuncName](params);\n      }\n    },\n    async setCpuData(params) {\n      const chartData = [];\n      const emptyData = [];\n      try {\n        const res = await this.$store.dispatch('environment/getNodeCpuMetrics', {\n          params\n        });\n        console.log(res);\n        if (res.usage_user.length) {\n          this.isEmptyCpu = false;\n          res.usage_user.forEach(item => {\n            chartData.push({\n              value: [item.time, item.usage_user && item.usage_user.toFixed(2)]\n            });\n            emptyData.push(0);\n          });\n          this.$nextTick(() => {\n            this.cpuLine.series[0].data.splice(0, this.cpuLine.series[0].data.length, ...chartData);\n            this.cpuChartLoading = false;\n          });\n        } else {\n          this.isEmptyCpu = true;\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setMemData(params) {\n      const chartData = [];\n      const emptyData = [];\n      try {\n        const res = await this.$store.dispatch('environment/getNodeMemoryMetrics', {\n          params\n        });\n        if (res.used_percent.length) {\n          this.isEmptyMemory = false;\n          res.used_percent.forEach(item => {\n            chartData.push({\n              value: [item.time, item.used_percent && item.used_percent.toFixed(2)]\n            });\n            emptyData.push(0);\n          });\n          this.$nextTick(() => {\n            this.memoryLine.series[0].data.splice(0, this.memoryLine.series[0].data.length, ...chartData);\n            this.memChartLoading = false;\n          });\n        } else {\n          this.isEmptyMemory = true;\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setNetworkData(params) {\n      try {\n        const res = await this.$store.dispatch('environment/getNodeNetworkMetrics', {\n          params\n        });\n        if (JSON.stringify(res) === '{}') {\n          this.isEmptyNetwork = true;\n        } else {\n          const readChartData = [];\n          this.isEmptyNetwork = false;\n          Object.keys(res).forEach(item => {\n            const data = [];\n            res[item].forEach(val => {\n              data.push({\n                value: [val.time, val[item] && val[item].toFixed(2)]\n              });\n            });\n            readChartData.push({\n              type: 'line',\n              name: item,\n              showSymbol: false,\n              data: data,\n              itemStyle: {\n                normal: {\n                  lineStyle: {\n                    width: 1 // 设置线条粗细\n                  }\n                }\n              }\n            });\n          });\n\n          this.$nextTick(() => {\n            this.networkLine.series.splice(0, this.networkLine.series.length, ...(readChartData || []));\n            this.netChartLoading = false;\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setStorageData(params) {\n      try {\n        const res = await this.$store.dispatch('environment/getNodeDiskioMetrics', {\n          params\n        });\n        if (JSON.stringify(res) === '{}') {\n          this.isEmptyDiskio = true;\n        } else {\n          const readChartData = [];\n          this.isEmptyDiskio = false;\n          Object.keys(res).forEach(item => {\n            const data = [];\n            res[item].forEach(val => {\n              data.push({\n                value: [val.time, val[item] && val[item].toFixed(2)]\n              });\n            });\n            readChartData.push({\n              type: 'line',\n              name: item,\n              showSymbol: false,\n              data: data,\n              itemStyle: {\n                normal: {\n                  lineStyle: {\n                    width: 1 // 设置线条粗细\n                  }\n                }\n              }\n            });\n          });\n\n          this.$nextTick(() => {\n            this.storageLine.series.splice(0, this.storageLine.series.length, ...(readChartData || []));\n            this.ioChartLoading = false;\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue?vue&type=script&lang=js&\n /* harmony default export */ const devops_node_overview_chartvue_type_script_lang_js_ = (node_overview_chartvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_overview_chart_component = (0,componentNormalizer/* default */.Z)(\n  devops_node_overview_chartvue_type_script_lang_js_,\n  node_overview_chartvue_type_template_id_f6b4c89a_render,\n  node_overview_chartvue_type_template_id_f6b4c89a_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var node_overview_chart_api; }\nnode_overview_chart_component.options.__file = \"src/components/devops/node-overview-chart.vue\"\n/* harmony default export */ const node_overview_chart = (node_overview_chart_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/node_detail.vue?vue&type=script&lang=js&\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ const node_detailvue_type_script_lang_js_ = ({\n  components: {\n    nodeDetailTab: node_detail_tab,\n    nodeOverviewChart: node_overview_chart\n  },\n  data() {\n    return {\n      showContent: false,\n      editable: false,\n      basePrototypeList: [{\n        id: 'hostname',\n        name: this.$t('environment.nodeInfo.cpuName'),\n        value: ''\n      }, {\n        id: 'ip',\n        name: 'IP',\n        value: ''\n      }, {\n        id: 'ncpus',\n        name: 'CPU',\n        value: ''\n      }, {\n        id: 'memTotal',\n        name: this.$t('environment.nodeInfo.ram'),\n        value: ''\n      }, {\n        id: 'createdUser',\n        name: this.$t('environment.nodeInfo.owner'),\n        value: ''\n      }, {\n        id: 'osName',\n        name: this.$t('environment.nodeInfo.cpuName'),\n        value: ''\n      }],\n      loading: {\n        isLoading: false,\n        title: this.$t('environment.loadingTitle')\n      }\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    agentLink() {\n      return this.nodeDetails.os === 'WINDOWS' ? this.nodeDetails.agentUrl : this.nodeDetails.agentScript;\n    }\n  },\n  watch: {\n    projectId: async function (val) {\n      this.$router.push({\n        name: 'envList'\n      });\n    },\n    nodeDetails(val) {\n      this.basePrototypeList.forEach(item => {\n        item.value = val[item.id];\n      });\n    }\n  },\n  async mounted() {\n    this.requestNodeDetail();\n  },\n  methods: {\n    toNodeList() {\n      this.$router.push({\n        name: 'nodeList'\n      });\n    },\n    async requestNodeDetail() {\n      this.loading.isLoading = true;\n      try {\n        const res = await this.$store.dispatch('environment/requestNodeDetail', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.$store.commit('environment/updateNodeDetail', {\n          res\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        this.loading.isLoading = false;\n        this.showContent = true;\n      }\n    },\n    copyHandle() {\n      if ((0,util/* copyText */.zp)(this.agentLink)) {\n        this.$bkMessage({\n          theme: 'success',\n          message: this.$t('environment.successfullyCopyed')\n        });\n      }\n    },\n    downloadHandle() {\n      window.location.href = this.nodeDetails.agentUrl;\n    },\n    async saveName() {\n      if (!this.nodeDetails.displayName) {\n        this.$bkMessage({\n          theme: 'error',\n          message: this.$t('environment.nodeInfo.enterDisplayName')\n        });\n      } else {\n        const params = {\n          displayName: this.nodeDetails.displayName.trim()\n        };\n        try {\n          await this.$store.dispatch('environment/updateDisplayName', {\n            projectId: this.projectId,\n            nodeHashId: this.nodeHashId,\n            params\n          });\n          this.editable = false;\n        } catch (err) {\n          this.$bkMessage({\n            theme: 'error',\n            message: err.message ? err.message : err\n          });\n        }\n      }\n    },\n    editNodeName() {\n      this.editable = true;\n      this.$nextTick(() => {\n        this.$refs.nodeName.focus();\n      });\n    },\n    refresh() {\n      this.requestNodeDetail();\n      bus.$emit('refreshEnv');\n      bus.$emit('refreshBuild');\n      bus.$emit('refreshAction');\n      bus.$emit('refreshCharts');\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/node_detail.vue?vue&type=script&lang=js&\n /* harmony default export */ const views_node_detailvue_type_script_lang_js_ = (node_detailvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/views/node_detail.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_detail_component = (0,componentNormalizer/* default */.Z)(\n  views_node_detailvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var node_detail_api; }\nnode_detail_component.options.__file = \"src/views/node_detail.vue\"\n/* harmony default export */ const node_detail = (node_detail_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4236\n");

/***/ })

}]);
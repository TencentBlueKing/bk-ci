"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_environment"] = globalThis["webpackChunkdevops_environment"] || []).push([[68],{

/***/ 9203:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U: () => (/* binding */ ENV_RESOURCE_TYPE),\n/* harmony export */   ZD: () => (/* binding */ NODE_RESOURCE_TYPE),\n/* harmony export */   c5: () => (/* binding */ ENV_RESOURCE_ACTION),\n/* harmony export */   hs: () => (/* binding */ NODE_RESOURCE_ACTION)\n/* harmony export */ });\n// 环境权限动作\nconst ENV_RESOURCE_ACTION = {\n  CREATE: 'environment_create',\n  VIEW: 'environment_view',\n  EDIT: 'environment_edit',\n  DELETE: 'environment_delete',\n  USE: 'environment_use'\n};\nconst ENV_RESOURCE_TYPE = 'environment';\n\n// 节点权限动作\nconst NODE_RESOURCE_ACTION = {\n  CREATE: 'env_node_create',\n  VIEW: 'env_node_view',\n  EDIT: 'env_node_edit',\n  DELETE: 'env_node_delete',\n  USE: 'env_node_use'\n};\nconst NODE_RESOURCE_TYPE = 'env_node';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIwMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL3V0aWxzL3Blcm1pc3Npb24uanM/ZTM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDnjq/looPmnYPpmZDliqjkvZxcclxuZXhwb3J0IGNvbnN0IEVOVl9SRVNPVVJDRV9BQ1RJT04gPSB7XHJcbiAgICBDUkVBVEU6ICdlbnZpcm9ubWVudF9jcmVhdGUnLFxyXG4gICAgVklFVzogJ2Vudmlyb25tZW50X3ZpZXcnLFxyXG4gICAgRURJVDogJ2Vudmlyb25tZW50X2VkaXQnLFxyXG4gICAgREVMRVRFOiAnZW52aXJvbm1lbnRfZGVsZXRlJyxcclxuICAgIFVTRTogJ2Vudmlyb25tZW50X3VzZSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEVOVl9SRVNPVVJDRV9UWVBFID0gJ2Vudmlyb25tZW50J1xyXG5cclxuLy8g6IqC54K55p2D6ZmQ5Yqo5L2cXHJcbmV4cG9ydCBjb25zdCBOT0RFX1JFU09VUkNFX0FDVElPTiA9IHtcclxuICAgIENSRUFURTogJ2Vudl9ub2RlX2NyZWF0ZScsXHJcbiAgICBWSUVXOiAnZW52X25vZGVfdmlldycsXHJcbiAgICBFRElUOiAnZW52X25vZGVfZWRpdCcsXHJcbiAgICBERUxFVEU6ICdlbnZfbm9kZV9kZWxldGUnLFxyXG4gICAgVVNFOiAnZW52X25vZGVfdXNlJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgTk9ERV9SRVNPVVJDRV9UWVBFID0gJ2Vudl9ub2RlJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9203\n");

/***/ }),

/***/ 7716:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dk: () => (/* binding */ copyText),\n/* harmony export */   eA: () => (/* binding */ getQueryString),\n/* harmony export */   nF: () => (/* binding */ throttle),\n/* harmony export */   t: () => (/* binding */ convertTime)\n/* harmony export */ });\n/* unused harmony exports isVNode, isInArray, isInlineElment, getActualTop, getActualLeft, addClass, removeClass, localizeConfig, findValByKeyValue, deepClone, converStrToNum, converStrToArr, convertStrToNumArr, convertMStoString, convertFileSize, isObject, mergeModules, getOuterHeight, getOuterWidth, getInnerWidth, deepCopy, hashID, getServiceLogoByPath, getAtomPath, getCookies */\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7309);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3188);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9297);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nfunction isVNode(node) {\n  return typeof node === 'object' && Object.prototype.hasOwnProperty.call(node, 'componentOptions');\n}\nfunction isInArray(ele, array) {\n  for (const item of array) {\n    if (item === ele) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction throttle(func) {\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  let lastFunc;\n  let lastRan;\n  return function () {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function () {\n        if (Date.now() - lastRan >= interval) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, interval - (Date.now() - lastRan));\n    }\n  };\n}\nfunction isInlineElment(node) {\n  const inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'cite', 'code', 'dfn', 'em', 'font', 'i', 'img', 'input', 'kbd', 'label', 'q', 's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup', 'textarea', 'tt', 'u', 'var'];\n  const tag = node.tagName.toLowerCase();\n  const display = getComputedStyle(node).display;\n  if (isInArray(tag, inlineElements) && display === 'index' || display === 'inline') {\n    console.warn('Binding node is displayed as inline element. To avoid some unexpected rendering error, please set binding node displayed as block element.');\n    return true;\n  }\n  return false;\n}\n\n/**\r\n *  获取元素相对于页面的高度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualTop(node) {\n  let actualTop = node.offsetTop;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent;\n  }\n  return actualTop;\n}\n\n/**\r\n *  获取元素相对于页面左侧的宽度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualLeft(node) {\n  let actualLeft = node.offsetLeft;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualLeft += current.offsetLeft;\n    current = current.offsetParent;\n  }\n  return actualLeft;\n}\n\n/**\r\n *  对元素添加样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction addClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    if (!node.className && classNames.length === 1) {\n      node.className = className;\n    } else {\n      let setClass = ' ' + node.className + ' ';\n      classNames.forEach(cl => {\n        if (setClass.indexOf(' ' + cl + ' ') < 0) {\n          setClass += cl + ' ';\n        }\n      });\n      const rtrim = /^\\s+|\\s+$/;\n      node.className = setClass.replace(rtrim, '');\n    }\n  }\n}\n\n/**\r\n *  对元素删除样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction removeClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    let setClass = ' ' + node.className + ' ';\n    classNames.forEach(cl => {\n      setClass = setClass.replace(' ' + cl + ' ', ' ');\n    });\n    const rtrim = /^\\s+|\\s+$/;\n    node.className = setClass.replace(rtrim, '');\n  }\n}\n\n/**\r\n *  将传入的配置项转成本地的对象\r\n *  @param config {Object} 传入的对象\r\n *  @return obj {Object} 本地化之后的对象\r\n */\nfunction localizeConfig(config) {\n  const obj = {};\n  for (const key in config) {\n    obj[key] = config[key];\n  }\n  return obj;\n}\n\n/**\r\n *  在一个元素为对象的数组中，根据oldKey: oldValue找到指定的数组元素，并返回该数组元素中指定key的value\r\n *  @param arr - 元素为对象的数组\r\n *  @param oldKey - 查找的key\r\n *  @param oldValue - 查找的value\r\n *  @param key - 需要返回的value的指定的key\r\n *  @return result - 找到的value值，未找到返回undefined\r\n */\nfunction findValByKeyValue(arr, oldKey, oldValue, key) {\n  let result;\n  for (const obj of arr) {\n    for (const _key in obj) {\n      if (_key === oldKey && obj[_key] === oldValue) {\n        result = obj[key];\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction deepClone(obj) {\n  const _obj = {};\n  for (const key in obj) {\n    if (obj[key].toString().toLowerCase() === '[object object]') {\n      _obj[key] = deepClone(obj[key]);\n    } else {\n      _obj[key] = key === 'text' ? '' : obj[key];\n    }\n  }\n  return _obj;\n}\n\n/**\r\n *  将字符串去掉指定内容之后转成数字\r\n *  @param {String} str - 需要转换的字符串\r\n *  @param {String} indicator - 需要被去掉的内容\r\n */\nfunction converStrToNum(str, indicator) {\n  const reg = new RegExp(indicator, 'g');\n  const $str = str.replace(reg, '');\n  return ~~$str;\n}\n\n/**\r\n *  将字符串根据indicator转成数组\r\n */\nfunction converStrToArr(str, indicator) {\n  return str.length ? str.split(indicator) : [];\n}\n\n/**\r\n * 将字符串根据indicator转成数组并将内容都转成Number类型（仅限数组内容均为数字的字符串）\r\n */\nfunction convertStrToNumArr(str, indicator) {\n  return converStrToArr(str, indicator).map(item => {\n    return ~~item;\n  });\n}\n\n/**\r\n *  将毫秒值转换成x时x分x秒的形式\r\n *  @param {Number} time - 时间的毫秒形式\r\n *  @return {String} str - 转换后的字符串\r\n */\nfunction convertMStoString(time) {\n  function getSeconds(sec) {\n    return `${sec}秒`;\n  }\n  function getMinutes(sec) {\n    if (sec / 60 >= 1) {\n      return `${Math.floor(sec / 60)}分${getSeconds(sec % 60)}`;\n    } else {\n      return getSeconds(sec);\n    }\n  }\n  function getHours(sec) {\n    if (sec / 3600 >= 1) {\n      return `${Math.floor(sec / 3600)}小时${getMinutes(sec % 3600)}`;\n    } else {\n      return getMinutes(sec);\n    }\n  }\n  function getDays(sec) {\n    if (sec / 86400 >= 1) {\n      return `${Math.floor(sec / 86400)}天${getHours(sec % 86400)}`;\n    } else {\n      return getHours(sec);\n    }\n  }\n  return time ? getDays(Math.floor(time / 1000)) : '0秒';\n}\nfunction prezero(num) {\n  num = Number(num);\n  if (num < 10) {\n    return '0' + num;\n  }\n  return num;\n}\nfunction convertTime(ms) {\n  const time = new Date(ms);\n  return `${time.getFullYear()}-${prezero(time.getMonth() + 1)}-${prezero(time.getDate())} ${prezero(time.getHours())}:${prezero(time.getMinutes())}:${prezero(time.getSeconds())}`;\n}\n\n/**\r\n *  转换文件大小\r\n */\nfunction convertFileSize(size, unit) {\n  const arr = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const calcSize = size / 1024;\n  let index;\n  arr.some((item, _index) => {\n    if (unit === item) {\n      index = _index;\n      return true;\n    }\n    return false;\n  });\n  const next = arr[index + 1];\n  if (calcSize > 1024) {\n    if (!next) {\n      return `${calcSize.toFixed(2)}${unit}`;\n    } else {\n      return convertFileSize(calcSize, next);\n    }\n  } else {\n    return `${calcSize.toFixed(2)}${next || unit}`;\n  }\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction mergeModules(target) {\n  for (var _len = arguments.length, modules = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    modules[_key2 - 1] = arguments[_key2];\n  }\n  return modules.reduce((merged, mod) => {\n    Object.keys(mod).forEach(key => {\n      if (isObject(merged[key]) && isObject(mod[key])) {\n        merged[key] = {\n          ...merged[key],\n          ...mod[key]\n        };\n      }\n    });\n    return merged;\n  }, target);\n}\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterHeight = (selector, parent) => {\n  const {\n    marginTop,\n    height,\n    marginBottom\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginTop) + parseFloat(height) + parseFloat(marginBottom);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterWidth = (selector, parent) => {\n  const {\n    marginLeft,\n    width,\n    marginRight\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginLeft) + parseFloat(width) + parseFloat(marginRight);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getInnerWidth = (selector, parent) => {\n  const {\n    width\n  } = getDOMRect(selector, parent);\n  return parseFloat(width);\n};\nconst getDOMRect = (selector, parent) => {\n  const target = isDOMElement(selector) ? selector : parent ? parent.querySelector(selector) : document.querySelector(selector);\n  if (!target) {\n    return {};\n  }\n  const style = window.getComputedStyle(target);\n  return {\n    width: style.width,\n    height: style.height,\n    marginTop: style.marginTop,\n    marginBottom: style.marginBottom,\n    marginLeft: style.marginLeft,\n    marginRight: style.marginRight\n  };\n};\nconst isDOMElement = obj => {\n  return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n};\nconst deepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\nconst hashID = function () {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let pos = 0;\n  let result = '';\n  while (pos < length) {\n    const n = Math.round(Math.random() * 126) + 33;\n    result += String.fromCharCode(n);\n    pos++;\n  }\n  return result;\n};\nfunction getServiceLogoByPath(link) {\n  return link.replace(/\\/?(devops\\/)?(\\w+)\\S*$/, '$2');\n}\nfunction getAtomPath() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return args.join('-');\n}\n\n/**\r\n *  获取url参数值\r\n */\nfunction getQueryString(name) {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\n  const r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n\n/**\r\n *  复制文本\r\n */\nconst copyText = text => {\n  const textarea = document.createElement('textarea');\n  document.body.appendChild(textarea);\n  textarea.value = text;\n  textarea.select();\n  if (document.execCommand('copy')) {\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    return true;\n  } else {\n    console.warn(window.devops.$i18n.t('environment.browserNotSupport'));\n  }\n  return false;\n};\n\n// 获取 cookie object\nfunction getCookies() {\n  let strCookie = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.cookie;\n  if (!strCookie) {\n    return {};\n  }\n  const arrCookie = strCookie.split('; '); // 分割\n  const cookiesObj = {};\n  arrCookie.forEach(cookieStr => {\n    const arr = cookieStr.split('=');\n    const [key, value] = arr;\n    if (key) {\n      cookiesObj[key] = value;\n    }\n  });\n  return cookiesObj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7716\n");

/***/ }),

/***/ 7620:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937562223\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYyMC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvdmlld3MvZW1wdHlfbm9kZS52dWU/YzVlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYyMjIzXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7620\n");

/***/ }),

/***/ 463:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937561818\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rldm9wcy1lbnZpcm9ubWVudC8uL3NyYy92aWV3cy9lbnZfbGlzdC52dWU/ODg3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYxODE4XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///463\n");

/***/ }),

/***/ 4694:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ env_list)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/env_list.vue?vue&type=template&id=734523e5\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"environment-list-wrapper\"\n  }, [_c(\"content-header\", {\n    staticClass: \"env-header\"\n  }, [_c(\"div\", {\n    attrs: {\n      slot: \"left\"\n    },\n    slot: \"left\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.environment\")))]), _vm._v(\" \"), _vm.showContent && _vm.envList.length ? _c(\"div\", {\n    attrs: {\n      slot: \"right\"\n    },\n    slot: \"right\"\n  }, [_c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.ENV_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.ENV_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                    permissionData: {\\n                        projectId: projectId,\\n                        resourceType: ENV_RESOURCE_TYPE,\\n                        resourceCode: projectId,\\n                        action: ENV_RESOURCE_ACTION.CREATE\\n                    }\\n                }\"\n    }],\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.toCreateEnv\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.new\")))])], 1) : _vm._e()]), _vm._v(\" \"), _c(\"section\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{\\n            isLoading: loading.isLoading,\\n            title: loading.title\\n        }\"\n    }],\n    staticClass: \"sub-view-port\"\n  }, [_vm.showContent && _vm.envList.length ? _c(\"bk-table\", {\n    attrs: {\n      size: \"small\",\n      data: _vm.envList,\n      \"row-class-name\": \"env-item-row\"\n    },\n    on: {\n      \"row-click\": _vm.toEnvDetail\n    }\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.envInfo.name\"),\n      prop: \"name\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.envInfo.type\"),\n      prop: \"envType\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [props.row.envType === \"DEV\" ? _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.envInfo.devEnvType\")))]) : _vm._e(), _vm._v(\" \"), props.row.envType === \"PROD\" ? _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.envInfo.testEnvType\")))]) : _vm._e(), _vm._v(\" \"), props.row.envType === \"BUILD\" ? _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.envInfo.buildEnvType\")))]) : _vm._e()];\n      }\n    }], null, false, 3029908748)\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.envInfo.nodeCount\"),\n      prop: \"nodeCount\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_vm._v(\"\\n                    \" + _vm._s(props.row.nodeCount) + \"\\n                \")];\n      }\n    }], null, false, 314723358)\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.envInfo.creationTime\"),\n      prop: \"createdTime\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_vm._v(\"\\n                    \" + _vm._s(_vm.localConvertTime(props.row.createdTime)) + \"\\n                \")];\n      }\n    }], null, false, 4250252198)\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.operation\"),\n      width: \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [props.row.canUse ? [_c(\"span\", {\n          directives: [{\n            name: \"perm\",\n            rawName: \"v-perm\",\n            value: {\n              hasPermission: props.row.canDelete,\n              disablePermissionApi: true,\n              permissionData: {\n                projectId: _vm.projectId,\n                resourceType: _vm.ENV_RESOURCE_TYPE,\n                resourceCode: props.row.envHashId,\n                action: _vm.ENV_RESOURCE_ACTION.DELETE\n              }\n            },\n            expression: \"{\\n                                hasPermission: props.row.canDelete,\\n                                disablePermissionApi: true,\\n                                permissionData: {\\n                                    projectId: projectId,\\n                                    resourceType: ENV_RESOURCE_TYPE,\\n                                    resourceCode: props.row.envHashId,\\n                                    action: ENV_RESOURCE_ACTION.DELETE\\n                                }\\n                            }\"\n          }],\n          class: {\n            \"handler-text\": props.row.canDelete\n          },\n          on: {\n            click: function ($event) {\n              $event.stopPropagation();\n              return _vm.confirmDelete(props.row);\n            }\n          }\n        }, [_vm._v(\"\\n                            \" + _vm._s(_vm.$t(\"environment.delete\")) + \"\\n                        \")])] : [_c(\"bk-button\", {\n          attrs: {\n            theme: \"primary\",\n            outline: \"\"\n          },\n          on: {\n            click: function ($event) {\n              return _vm.handleApplyPermission(props.row);\n            }\n          }\n        }, [_vm._v(\"\\n                            \" + _vm._s(_vm.$t(\"environment.applyPermission\")) + \"\\n                        \")])]];\n      }\n    }], null, false, 2323262698)\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.showContent && !_vm.envList.length ? _c(\"empty-node\", {\n    attrs: {\n      \"is-env\": true,\n      \"to-create-node\": _vm.toCreateEnv,\n      \"empty-info\": _vm.emptyInfo\n    }\n  }) : _vm._e()], 1)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/env_list.vue?vue&type=template&id=734523e5\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/empty_node.vue?vue&type=template&id=2c2e16d9&scoped=true\nvar empty_nodevue_type_template_id_2c2e16d9_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"empty-node-wrapper\"\n  }, [_c(\"p\", {\n    staticClass: \"title\"\n  }, [_vm._v(_vm._s(_vm.emptyInfo.title))]), _vm._v(\" \"), _c(\"p\", {\n    staticClass: \"intro-prompt\"\n  }, [_vm._v(_vm._s(_vm.emptyInfo.desc))]), _vm._v(\" \"), _vm.isEnv ? _c(\"div\", {\n    staticClass: \"create-node-row\"\n  }, [_c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.ENV_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.ENV_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                permissionData: {\\n                    projectId: projectId,\\n                    resourceType: ENV_RESOURCE_TYPE,\\n                    resourceCode: projectId,\\n                    action: ENV_RESOURCE_ACTION.CREATE\\n                }\\n            }\"\n    }],\n    staticClass: \"create-env-btn\",\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.toCreateNode\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.newPool\")))])], 1) : _c(\"div\", {\n    staticClass: \"create-node-row\"\n  }, [_vm.isExtendTx ? [_c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.NODE_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.NODE_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                    permissionData: {\\n                        projectId: projectId,\\n                        resourceType: NODE_RESOURCE_TYPE,\\n                        resourceCode: projectId,\\n                        action: NODE_RESOURCE_ACTION.CREATE\\n                    }\\n                }\"\n    }],\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.toImportNode(\"cmdb\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.idcTestMachine\")))]), _vm._v(\" \"), _c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.NODE_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.NODE_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                    permissionData: {\\n                        projectId: projectId,\\n                        resourceType: NODE_RESOURCE_TYPE,\\n                        resourceCode: projectId,\\n                        action: NODE_RESOURCE_ACTION.CREATE\\n                    }\\n                }\"\n    }],\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.toImportNode(\"construct\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.thirdPartyBuildMachine\")))])] : _c(\"bk-button\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.NODE_RESOURCE_TYPE,\n          resourceCode: _vm.projectId,\n          action: _vm.NODE_RESOURCE_ACTION.CREATE\n        }\n      },\n      expression: \"{\\n                permissionData: {\\n                    projectId: projectId,\\n                    resourceType: NODE_RESOURCE_TYPE,\\n                    resourceCode: projectId,\\n                    action: NODE_RESOURCE_ACTION.CREATE\\n                }\\n            }\"\n    }],\n    staticClass: \"import-node-btn\",\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.toImportNode(\"construct\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.importNode\")))])], 2)]);\n};\nvar empty_nodevue_type_template_id_2c2e16d9_scoped_true_staticRenderFns = [];\nempty_nodevue_type_template_id_2c2e16d9_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/empty_node.vue?vue&type=template&id=2c2e16d9&scoped=true\n\n// EXTERNAL MODULE: ./src/utils/permission.js\nvar permission = __webpack_require__(9203);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/empty_node.vue?vue&type=script&lang=js\n\n/* harmony default export */ const empty_nodevue_type_script_lang_js = ({\n  props: {\n    isEnv: {\n      type: Boolean,\n      default: false\n    },\n    emptyInfo: Object,\n    toCreateNode: Function,\n    toImportNode: Function\n  },\n  data() {\n    return {\n      NODE_RESOURCE_ACTION: permission/* NODE_RESOURCE_ACTION */.hs,\n      NODE_RESOURCE_TYPE: permission/* NODE_RESOURCE_TYPE */.ZD,\n      ENV_RESOURCE_ACTION: permission/* ENV_RESOURCE_ACTION */.c5,\n      ENV_RESOURCE_TYPE: permission/* ENV_RESOURCE_TYPE */.U\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/empty_node.vue?vue&type=script&lang=js\n /* harmony default export */ const views_empty_nodevue_type_script_lang_js = (empty_nodevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/empty_node.vue?vue&type=style&index=0&id=2c2e16d9&prod&lang=scss&scoped=true\nvar empty_nodevue_type_style_index_0_id_2c2e16d9_prod_lang_scss_scoped_true = __webpack_require__(7620);\n;// CONCATENATED MODULE: ./src/views/empty_node.vue?vue&type=style&index=0&id=2c2e16d9&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/views/empty_node.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  views_empty_nodevue_type_script_lang_js,\n  empty_nodevue_type_template_id_2c2e16d9_scoped_true_render,\n  empty_nodevue_type_template_id_2c2e16d9_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"2c2e16d9\",\n  null\n  \n)\n\n/* harmony default export */ const empty_node = (component.exports);\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(7716);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/env_list.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const env_listvue_type_script_lang_js = ({\n  components: {\n    emptyNode: empty_node\n  },\n  data() {\n    return {\n      ENV_RESOURCE_TYPE: permission/* ENV_RESOURCE_TYPE */.U,\n      ENV_RESOURCE_ACTION: permission/* ENV_RESOURCE_ACTION */.c5,\n      showContent: false,\n      // 显示内容\n      envList: [],\n      // 换环境列表\n      loading: {\n        isLoading: false,\n        title: ''\n      },\n      emptyInfo: {\n        title: this.$t('environment.envInfo.emptyEnv'),\n        desc: this.$t('environment.envInfo.emptyEnvTips')\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    }\n  },\n  watch: {\n    projectId: async function (val) {\n      await this.init();\n    }\n  },\n  async mounted() {\n    await this.init();\n  },\n  methods: {\n    async init() {\n      const {\n        loading\n      } = this;\n      loading.isLoading = true;\n      loading.title = this.$t('environment.loadingTitle');\n      try {\n        this.requestList();\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message ? err.message : err,\n          theme: 'error'\n        });\n      } finally {\n        setTimeout(() => {\n          this.loading.isLoading = false;\n        }, 1000);\n      }\n    },\n    /**\r\n     * 获取环境列表\r\n     */\n    async requestList() {\n      try {\n        const res = await this.$store.dispatch('environment/requestEnvList', {\n          projectId: this.projectId\n        });\n        this.envList.splice(0, this.envList.length);\n        res.forEach(item => {\n          this.envList.push(item);\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n      this.showContent = true;\n    },\n    toCreateEnv() {\n      this.$router.push({\n        name: 'createEnv'\n      });\n    },\n    handleApplyPermission(row) {\n      this.handleNoPermission({\n        projectId: this.projectId,\n        resourceType: permission/* ENV_RESOURCE_TYPE */.U,\n        resourceCode: row.envHashId,\n        action: permission/* ENV_RESOURCE_ACTION */.c5.USE\n      });\n    },\n    /**\r\n     * 删除环境\r\n     */\n    async confirmDelete(row) {\n      const id = row.envHashId;\n      this.$bkInfo({\n        type: 'warning',\n        theme: 'warning',\n        title: this.$t('environment.delete'),\n        subTitle: this.$t('environment.envInfo.deleteEnvTips', [row.name]),\n        confirmFn: async () => {\n          let message, theme;\n          try {\n            await this.$store.dispatch('environment/toDeleteEnv', {\n              projectId: this.projectId,\n              envHashId: id\n            });\n            message = this.$t('environment.successfullyDeleted');\n            theme = 'success';\n            this.$bkMessage({\n              message,\n              theme\n            });\n          } catch (e) {\n            this.handleError(e, {\n              projectId: this.projectId,\n              resourceType: permission/* ENV_RESOURCE_TYPE */.U,\n              resourceCode: row.envHashId,\n              action: permission/* ENV_RESOURCE_ACTION */.c5.DELETE\n            });\n          } finally {\n            this.requestList();\n          }\n        }\n      });\n    },\n    /**\r\n     * 跳转环境详情\r\n     */\n    toEnvDetail(row) {\n      if (!row.canUse) return;\n      this.$router.push({\n        name: 'envDetail',\n        params: {\n          envId: row.envHashId\n        }\n      });\n    },\n    /**\r\n     * 处理时间格式\r\n     */\n    localConvertTime(timestamp) {\n      return (0,util/* convertTime */.t)(timestamp * 1000);\n    },\n    askEnvDeletePermission(id, name) {\n      this.$showAskPermissionDialog({\n        noPermissionList: [{\n          actionId: this.$permissionActionMap.delete,\n          resourceId: this.$permissionResourceMap.environment,\n          instanceId: [{\n            id,\n            name\n          }],\n          projectId: this.projectId\n        }],\n        applyPermissionUrl: `/backend/api/perm/apply/subsystem/?client_id=environment&project_code=${this.projectId}&service_code=environment&role_creator=environment`\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/env_list.vue?vue&type=script&lang=js\n /* harmony default export */ const views_env_listvue_type_script_lang_js = (env_listvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/env_list.vue?vue&type=style&index=0&id=734523e5&prod&lang=scss\nvar env_listvue_type_style_index_0_id_734523e5_prod_lang_scss = __webpack_require__(463);\n;// CONCATENATED MODULE: ./src/views/env_list.vue?vue&type=style&index=0&id=734523e5&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/env_list.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar env_list_component = (0,componentNormalizer/* default */.A)(\n  views_env_listvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const env_list = (env_list_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4694\n");

/***/ })

}]);
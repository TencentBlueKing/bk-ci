"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_environment"] = globalThis["webpackChunkdevops_environment"] || []).push([[452],{

/***/ 9203:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U: () => (/* binding */ ENV_RESOURCE_TYPE),\n/* harmony export */   ZD: () => (/* binding */ NODE_RESOURCE_TYPE),\n/* harmony export */   c5: () => (/* binding */ ENV_RESOURCE_ACTION),\n/* harmony export */   hs: () => (/* binding */ NODE_RESOURCE_ACTION)\n/* harmony export */ });\n// 环境权限动作\nconst ENV_RESOURCE_ACTION = {\n  CREATE: 'environment_create',\n  VIEW: 'environment_view',\n  EDIT: 'environment_edit',\n  DELETE: 'environment_delete',\n  USE: 'environment_use'\n};\nconst ENV_RESOURCE_TYPE = 'environment';\n\n// 节点权限动作\nconst NODE_RESOURCE_ACTION = {\n  CREATE: 'env_node_create',\n  VIEW: 'env_node_view',\n  EDIT: 'env_node_edit',\n  DELETE: 'env_node_delete',\n  USE: 'env_node_use'\n};\nconst NODE_RESOURCE_TYPE = 'env_node';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIwMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL3V0aWxzL3Blcm1pc3Npb24uanM/ZTM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDnjq/looPmnYPpmZDliqjkvZxcclxuZXhwb3J0IGNvbnN0IEVOVl9SRVNPVVJDRV9BQ1RJT04gPSB7XHJcbiAgICBDUkVBVEU6ICdlbnZpcm9ubWVudF9jcmVhdGUnLFxyXG4gICAgVklFVzogJ2Vudmlyb25tZW50X3ZpZXcnLFxyXG4gICAgRURJVDogJ2Vudmlyb25tZW50X2VkaXQnLFxyXG4gICAgREVMRVRFOiAnZW52aXJvbm1lbnRfZGVsZXRlJyxcclxuICAgIFVTRTogJ2Vudmlyb25tZW50X3VzZSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEVOVl9SRVNPVVJDRV9UWVBFID0gJ2Vudmlyb25tZW50J1xyXG5cclxuLy8g6IqC54K55p2D6ZmQ5Yqo5L2cXHJcbmV4cG9ydCBjb25zdCBOT0RFX1JFU09VUkNFX0FDVElPTiA9IHtcclxuICAgIENSRUFURTogJ2Vudl9ub2RlX2NyZWF0ZScsXHJcbiAgICBWSUVXOiAnZW52X25vZGVfdmlldycsXHJcbiAgICBFRElUOiAnZW52X25vZGVfZWRpdCcsXHJcbiAgICBERUxFVEU6ICdlbnZfbm9kZV9kZWxldGUnLFxyXG4gICAgVVNFOiAnZW52X25vZGVfdXNlJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgTk9ERV9SRVNPVVJDRV9UWVBFID0gJ2Vudl9ub2RlJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9203\n");

/***/ }),

/***/ 7716:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dk: () => (/* binding */ copyText),\n/* harmony export */   eA: () => (/* binding */ getQueryString),\n/* harmony export */   nF: () => (/* binding */ throttle),\n/* harmony export */   t: () => (/* binding */ convertTime)\n/* harmony export */ });\n/* unused harmony exports isVNode, isInArray, isInlineElment, getActualTop, getActualLeft, addClass, removeClass, localizeConfig, findValByKeyValue, deepClone, converStrToNum, converStrToArr, convertStrToNumArr, convertMStoString, convertFileSize, isObject, mergeModules, getOuterHeight, getOuterWidth, getInnerWidth, deepCopy, hashID, getServiceLogoByPath, getAtomPath, getCookies */\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7309);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3188);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9297);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nfunction isVNode(node) {\n  return typeof node === 'object' && Object.prototype.hasOwnProperty.call(node, 'componentOptions');\n}\nfunction isInArray(ele, array) {\n  for (const item of array) {\n    if (item === ele) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction throttle(func) {\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  let lastFunc;\n  let lastRan;\n  return function () {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function () {\n        if (Date.now() - lastRan >= interval) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, interval - (Date.now() - lastRan));\n    }\n  };\n}\nfunction isInlineElment(node) {\n  const inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'cite', 'code', 'dfn', 'em', 'font', 'i', 'img', 'input', 'kbd', 'label', 'q', 's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup', 'textarea', 'tt', 'u', 'var'];\n  const tag = node.tagName.toLowerCase();\n  const display = getComputedStyle(node).display;\n  if (isInArray(tag, inlineElements) && display === 'index' || display === 'inline') {\n    console.warn('Binding node is displayed as inline element. To avoid some unexpected rendering error, please set binding node displayed as block element.');\n    return true;\n  }\n  return false;\n}\n\n/**\r\n *  获取元素相对于页面的高度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualTop(node) {\n  let actualTop = node.offsetTop;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent;\n  }\n  return actualTop;\n}\n\n/**\r\n *  获取元素相对于页面左侧的宽度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualLeft(node) {\n  let actualLeft = node.offsetLeft;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualLeft += current.offsetLeft;\n    current = current.offsetParent;\n  }\n  return actualLeft;\n}\n\n/**\r\n *  对元素添加样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction addClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    if (!node.className && classNames.length === 1) {\n      node.className = className;\n    } else {\n      let setClass = ' ' + node.className + ' ';\n      classNames.forEach(cl => {\n        if (setClass.indexOf(' ' + cl + ' ') < 0) {\n          setClass += cl + ' ';\n        }\n      });\n      const rtrim = /^\\s+|\\s+$/;\n      node.className = setClass.replace(rtrim, '');\n    }\n  }\n}\n\n/**\r\n *  对元素删除样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction removeClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    let setClass = ' ' + node.className + ' ';\n    classNames.forEach(cl => {\n      setClass = setClass.replace(' ' + cl + ' ', ' ');\n    });\n    const rtrim = /^\\s+|\\s+$/;\n    node.className = setClass.replace(rtrim, '');\n  }\n}\n\n/**\r\n *  将传入的配置项转成本地的对象\r\n *  @param config {Object} 传入的对象\r\n *  @return obj {Object} 本地化之后的对象\r\n */\nfunction localizeConfig(config) {\n  const obj = {};\n  for (const key in config) {\n    obj[key] = config[key];\n  }\n  return obj;\n}\n\n/**\r\n *  在一个元素为对象的数组中，根据oldKey: oldValue找到指定的数组元素，并返回该数组元素中指定key的value\r\n *  @param arr - 元素为对象的数组\r\n *  @param oldKey - 查找的key\r\n *  @param oldValue - 查找的value\r\n *  @param key - 需要返回的value的指定的key\r\n *  @return result - 找到的value值，未找到返回undefined\r\n */\nfunction findValByKeyValue(arr, oldKey, oldValue, key) {\n  let result;\n  for (const obj of arr) {\n    for (const _key in obj) {\n      if (_key === oldKey && obj[_key] === oldValue) {\n        result = obj[key];\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction deepClone(obj) {\n  const _obj = {};\n  for (const key in obj) {\n    if (obj[key].toString().toLowerCase() === '[object object]') {\n      _obj[key] = deepClone(obj[key]);\n    } else {\n      _obj[key] = key === 'text' ? '' : obj[key];\n    }\n  }\n  return _obj;\n}\n\n/**\r\n *  将字符串去掉指定内容之后转成数字\r\n *  @param {String} str - 需要转换的字符串\r\n *  @param {String} indicator - 需要被去掉的内容\r\n */\nfunction converStrToNum(str, indicator) {\n  const reg = new RegExp(indicator, 'g');\n  const $str = str.replace(reg, '');\n  return ~~$str;\n}\n\n/**\r\n *  将字符串根据indicator转成数组\r\n */\nfunction converStrToArr(str, indicator) {\n  return str.length ? str.split(indicator) : [];\n}\n\n/**\r\n * 将字符串根据indicator转成数组并将内容都转成Number类型（仅限数组内容均为数字的字符串）\r\n */\nfunction convertStrToNumArr(str, indicator) {\n  return converStrToArr(str, indicator).map(item => {\n    return ~~item;\n  });\n}\n\n/**\r\n *  将毫秒值转换成x时x分x秒的形式\r\n *  @param {Number} time - 时间的毫秒形式\r\n *  @return {String} str - 转换后的字符串\r\n */\nfunction convertMStoString(time) {\n  function getSeconds(sec) {\n    return `${sec}秒`;\n  }\n  function getMinutes(sec) {\n    if (sec / 60 >= 1) {\n      return `${Math.floor(sec / 60)}分${getSeconds(sec % 60)}`;\n    } else {\n      return getSeconds(sec);\n    }\n  }\n  function getHours(sec) {\n    if (sec / 3600 >= 1) {\n      return `${Math.floor(sec / 3600)}小时${getMinutes(sec % 3600)}`;\n    } else {\n      return getMinutes(sec);\n    }\n  }\n  function getDays(sec) {\n    if (sec / 86400 >= 1) {\n      return `${Math.floor(sec / 86400)}天${getHours(sec % 86400)}`;\n    } else {\n      return getHours(sec);\n    }\n  }\n  return time ? getDays(Math.floor(time / 1000)) : '0秒';\n}\nfunction prezero(num) {\n  num = Number(num);\n  if (num < 10) {\n    return '0' + num;\n  }\n  return num;\n}\nfunction convertTime(ms) {\n  const time = new Date(ms);\n  return `${time.getFullYear()}-${prezero(time.getMonth() + 1)}-${prezero(time.getDate())} ${prezero(time.getHours())}:${prezero(time.getMinutes())}:${prezero(time.getSeconds())}`;\n}\n\n/**\r\n *  转换文件大小\r\n */\nfunction convertFileSize(size, unit) {\n  const arr = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const calcSize = size / 1024;\n  let index;\n  arr.some((item, _index) => {\n    if (unit === item) {\n      index = _index;\n      return true;\n    }\n    return false;\n  });\n  const next = arr[index + 1];\n  if (calcSize > 1024) {\n    if (!next) {\n      return `${calcSize.toFixed(2)}${unit}`;\n    } else {\n      return convertFileSize(calcSize, next);\n    }\n  } else {\n    return `${calcSize.toFixed(2)}${next || unit}`;\n  }\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction mergeModules(target) {\n  for (var _len = arguments.length, modules = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    modules[_key2 - 1] = arguments[_key2];\n  }\n  return modules.reduce((merged, mod) => {\n    Object.keys(mod).forEach(key => {\n      if (isObject(merged[key]) && isObject(mod[key])) {\n        merged[key] = {\n          ...merged[key],\n          ...mod[key]\n        };\n      }\n    });\n    return merged;\n  }, target);\n}\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterHeight = (selector, parent) => {\n  const {\n    marginTop,\n    height,\n    marginBottom\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginTop) + parseFloat(height) + parseFloat(marginBottom);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterWidth = (selector, parent) => {\n  const {\n    marginLeft,\n    width,\n    marginRight\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginLeft) + parseFloat(width) + parseFloat(marginRight);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getInnerWidth = (selector, parent) => {\n  const {\n    width\n  } = getDOMRect(selector, parent);\n  return parseFloat(width);\n};\nconst getDOMRect = (selector, parent) => {\n  const target = isDOMElement(selector) ? selector : parent ? parent.querySelector(selector) : document.querySelector(selector);\n  if (!target) {\n    return {};\n  }\n  const style = window.getComputedStyle(target);\n  return {\n    width: style.width,\n    height: style.height,\n    marginTop: style.marginTop,\n    marginBottom: style.marginBottom,\n    marginLeft: style.marginLeft,\n    marginRight: style.marginRight\n  };\n};\nconst isDOMElement = obj => {\n  return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n};\nconst deepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\nconst hashID = function () {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let pos = 0;\n  let result = '';\n  while (pos < length) {\n    const n = Math.round(Math.random() * 126) + 33;\n    result += String.fromCharCode(n);\n    pos++;\n  }\n  return result;\n};\nfunction getServiceLogoByPath(link) {\n  return link.replace(/\\/?(devops\\/)?(\\w+)\\S*$/, '$2');\n}\nfunction getAtomPath() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return args.join('-');\n}\n\n/**\r\n *  获取url参数值\r\n */\nfunction getQueryString(name) {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\n  const r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n\n/**\r\n *  复制文本\r\n */\nconst copyText = text => {\n  const textarea = document.createElement('textarea');\n  document.body.appendChild(textarea);\n  textarea.value = text;\n  textarea.select();\n  if (document.execCommand('copy')) {\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    return true;\n  } else {\n    console.warn(window.devops.$i18n.t('environment.browserNotSupport'));\n  }\n  return false;\n};\n\n// 获取 cookie object\nfunction getCookies() {\n  let strCookie = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.cookie;\n  if (!strCookie) {\n    return {};\n  }\n  const arrCookie = strCookie.split('; '); // 分割\n  const cookiesObj = {};\n  arrCookie.forEach(cookieStr => {\n    const arr = cookieStr.split('=');\n    const [key, value] = arr;\n    if (key) {\n      cookiesObj[key] = value;\n    }\n  });\n  return cookiesObj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7716\n");

/***/ }),

/***/ 5459:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937566729\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQ1OS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9jb21wb3NlLWZvcm0taXRlbS9zdHlsZXMuY3NzP2M2NWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU2NjcyOVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5459\n");

/***/ }),

/***/ 3371:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937570713\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM3MS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvZW52aXJvbm1lbnQvYmFzaWMtaW5mb3JtYXRpb24udnVlPzcxMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU3MDcxM1xuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3371\n");

/***/ }),

/***/ 3969:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937570708\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk2OS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvZW52aXJvbm1lbnQvZW52LXZhcmlhYmxlLnZ1ZT85ZGY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1NzA3MDhcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3969\n");

/***/ }),

/***/ 2468:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937570962\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ2OC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvZW52aXJvbm1lbnQvbWFjaGluZS1yZWNvcmQudnVlPzhkYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU3MDk2MlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2468\n");

/***/ }),

/***/ 2497:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937570701\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ5Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvZW52aXJvbm1lbnQvcGlwZWxpbmUtbGlzdC52dWU/MzkyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTcwNzAxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2497\n");

/***/ }),

/***/ 1644:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937562607\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY0NC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvbm9kZS1kZXRhaWwtdGFiLnZ1ZT8xNzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1NjI2MDdcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1644\n");

/***/ }),

/***/ 5037:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937562314\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAzNy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9kZXZvcHMvbm9kZS1vdmVydmlldy1jaGFydC52dWU/YjEyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYyMzE0XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5037\n");

/***/ }),

/***/ 8738:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937562250\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODczOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9lbXB0eS10YWJsZS1zdGF0dXMudnVlP2ZkYzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU2MjI1MFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8738\n");

/***/ }),

/***/ 4796:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571325\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDc5Ni5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9leGVjdXRpb25JbmZvL2ZpbGUtbG9nL2luZGV4LnZ1ZT85MThmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1NzEzMjVcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4796\n");

/***/ }),

/***/ 8161:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937580668\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODE2MS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9leGVjdXRpb25JbmZvL2ZpbGUtbG9nL2xvZy1pdGVtLnZ1ZT8zMTI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1ODA2NjhcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8161\n");

/***/ }),

/***/ 1466:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937566685\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ2Ni5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9leGVjdXRpb25JbmZvL2luZGV4LnZ1ZT81ODJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1NjY2ODVcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1466\n");

/***/ }),

/***/ 7719:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571331\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcxOS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9leGVjdXRpb25JbmZvL3NjcmlwdC1sb2cvaW5kZXgudnVlP2ZmN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU3MTMzMVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7719\n");

/***/ }),

/***/ 5698:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937566678\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY5OC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9pcExpc3QvaW5kZXgudnVlPzc3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU2NjY3OFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5698\n");

/***/ }),

/***/ 6571:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937562259\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU3MS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9zdGF0dXMtaWNvbi52dWU/OTJhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYyMjU5XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6571\n");

/***/ }),

/***/ 7948:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937581086\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk0OC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL2FjZS1lZGl0b3IvaW5kZXgudnVlPzRjYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU4MTA4NlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7948\n");

/***/ }),

/***/ 7023:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937582648\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAyMy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL2NvbGxhcHNlLWl0ZW0vaW5kZXgudnVlP2I3NTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU4MjY0OFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7023\n");

/***/ }),

/***/ 8922:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571392\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkyMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL2RldGFpbC1sYXlvdXQvaW5kZXgudnVlPzU5NDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU3MTM5MlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8922\n");

/***/ }),

/***/ 2130:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571338\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEzMC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL2RldGFpbC1sYXlvdXQvaXRlbS52dWU/ODc4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTcxMzM4XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2130\n");

/***/ }),

/***/ 5770:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937582564\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTc3MC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL3JlbmRlci1maWxlLXBhdGgudnVlPzVhMmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU4MjU2NFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5770\n");

/***/ }),

/***/ 7887:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937582572\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzg4Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL3JlbmRlci1maWxlLXNlcnZlci52dWU/N2ZmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTgyNTcyXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7887\n");

/***/ }),

/***/ 5611:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937581074\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYxMS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9jb21wb25lbnRzL3JlbmRlci1zb3VyY2UtZmlsZS52dWU/NDMzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTgxMDc0XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5611\n");

/***/ }),

/***/ 8490:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571190\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQ5MC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9kaXN0cm8tZmlsZS52dWU/MjEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTcxMTkwXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8490\n");

/***/ }),

/***/ 6549:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937571196\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU0OS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9leGVjLXNjcmlwdC52dWU/ZWQ0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTcxMTk2XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6549\n");

/***/ }),

/***/ 8912:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937567612\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkxMi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy90YXNrLXN0ZXAtdmlldy9pbmRleC52dWU/ZThlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTY3NjEyXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8912\n");

/***/ }),

/***/ 4761:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937561871\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDc2MS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvdmlld3MvZXhlY3V0aW9uLWRldGFpbC9pbmRleC52dWU/NTQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYxODcxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4761\n");

/***/ }),

/***/ 7538:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937561813\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUzOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvdmlld3MvZXh0UGFnZUNvbnRhaW5lci52dWU/YTliYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYxODEzXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7538\n");

/***/ }),

/***/ 820:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937561846\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rldm9wcy1lbnZpcm9ubWVudC8uL3NyYy92aWV3cy9ub2RlX2RldGFpbC52dWU/YmJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTYxODQ2XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///820\n");

/***/ }),

/***/ 2528:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ empty_table_status)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/empty-table-status.vue?vue&type=template&id=31ccfc54\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-exception\", {\n    attrs: {\n      type: _vm.type,\n      scene: \"part\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      \"font-size\": \"14px\"\n    }\n  }, [_vm._v(_vm._s(_vm.typeMap[_vm.type]))]), _vm._v(\" \"), _vm.type === \"search-empty\" ? [_c(\"i18n\", {\n    staticClass: \"empty-tips\",\n    attrs: {\n      tag: \"div\",\n      path: \"environment.可以尝试 调整关键词 或 清空筛选条件\"\n    }\n  }, [_c(\"bk-button\", {\n    attrs: {\n      text: \"\"\n    },\n    on: {\n      click: _vm.handleClear\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.清空筛选条件\")))])], 1)] : _vm._e()], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/empty-table-status.vue?vue&type=template&id=31ccfc54\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/empty-table-status.vue?vue&type=script&lang=js\n/* harmony default export */ const empty_table_statusvue_type_script_lang_js = ({\n  name: 'EmptyTableStatus',\n  props: {\n    type: {\n      type: String,\n      default: 'empty'\n    }\n  },\n  data() {\n    return {\n      typeMap: {\n        empty: this.$t('environment.暂无数据'),\n        'search-empty': this.$t('environment.搜索结果为空')\n      }\n    };\n  },\n  methods: {\n    handleClear() {\n      this.$emit('clear');\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/empty-table-status.vue?vue&type=script&lang=js\n /* harmony default export */ const components_empty_table_statusvue_type_script_lang_js = (empty_table_statusvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/empty-table-status.vue?vue&type=style&index=0&id=31ccfc54&prod&lang=scss\nvar empty_table_statusvue_type_style_index_0_id_31ccfc54_prod_lang_scss = __webpack_require__(8738);\n;// CONCATENATED MODULE: ./src/components/empty-table-status.vue?vue&type=style&index=0&id=31ccfc54&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/empty-table-status.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_empty_table_statusvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const empty_table_status = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUyOC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVdBO0FBQ0E7QUFDQTs7Ozs7QUV2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcENBOzs7Ozs7OztBRUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9lbXB0eS10YWJsZS1zdGF0dXMudnVlPzY2NDIiLCJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL2NvbXBvbmVudHMvZW1wdHktdGFibGUtc3RhdHVzLnZ1ZT9mZmNhIiwid2VicGFjazovL2Rldm9wcy1lbnZpcm9ubWVudC9zcmMvY29tcG9uZW50cy9lbXB0eS10YWJsZS1zdGF0dXMudnVlP2Q5ZDMiLCJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL2NvbXBvbmVudHMvZW1wdHktdGFibGUtc3RhdHVzLnZ1ZT85ZDllIiwid2VicGFjazovL2Rldm9wcy1lbnZpcm9ubWVudC8uL3NyYy9jb21wb25lbnRzL2VtcHR5LXRhYmxlLXN0YXR1cy52dWU/YjVjNyIsIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9lbXB0eS10YWJsZS1zdGF0dXMudnVlPzFmYzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgdmFyIF92bSA9IHRoaXMsXG4gICAgX2MgPSBfdm0uX3NlbGYuX2NcbiAgcmV0dXJuIF9jKFxuICAgIFwiYmstZXhjZXB0aW9uXCIsXG4gICAgeyBhdHRyczogeyB0eXBlOiBfdm0udHlwZSwgc2NlbmU6IFwicGFydFwiIH0gfSxcbiAgICBbXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY1N0eWxlOiB7IFwiZm9udC1zaXplXCI6IFwiMTRweFwiIH0gfSwgW1xuICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS50eXBlTWFwW192bS50eXBlXSkpLFxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX3ZtLnR5cGUgPT09IFwic2VhcmNoLWVtcHR5XCJcbiAgICAgICAgPyBbXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJpMThuXCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbXB0eS10aXBzXCIsXG4gICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgIHRhZzogXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgIHBhdGg6IFwiZW52aXJvbm1lbnQu5Y+v5Lul5bCd6K+VIOiwg+aVtOWFs+mUruivjSDmiJYg5riF56m6562b6YCJ5p2h5Lu2XCIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgXCJiay1idXR0b25cIixcbiAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdGV4dDogXCJcIiB9LCBvbjogeyBjbGljazogX3ZtLmhhbmRsZUNsZWFyIH0gfSxcbiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS4kdChcImVudmlyb25tZW50Lua4heepuuetm+mAieadoeS7tlwiKSkpXVxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICksXG4gICAgICAgICAgXVxuICAgICAgICA6IF92bS5fZSgpLFxuICAgIF0sXG4gICAgMlxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3J1bGVTZXRbMV0ucnVsZXNbM10hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lbXB0eS10YWJsZS1zdGF0dXMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTMxY2NmYzU0XCIiLCI8dGVtcGxhdGU+XHJcbiAgICA8YmstZXhjZXB0aW9uIDp0eXBlPVwidHlwZVwiIHNjZW5lPVwicGFydFwiPlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJmb250LXNpemU6IDE0cHg7XCI+e3sgdHlwZU1hcFt0eXBlXSB9fTwvZGl2PlxyXG4gICAgICAgIDx0ZW1wbGF0ZSB2LWlmPVwidHlwZSA9PT0gJ3NlYXJjaC1lbXB0eSdcIj5cclxuICAgICAgICAgICAgPGkxOG5cclxuICAgICAgICAgICAgICAgIHRhZz1cImRpdlwiXHJcbiAgICAgICAgICAgICAgICBwYXRoPVwiZW52aXJvbm1lbnQu5Y+v5Lul5bCd6K+VIOiwg+aVtOWFs+mUruivjSDmiJYg5riF56m6562b6YCJ5p2h5Lu2XCJcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZW1wdHktdGlwc1wiPlxyXG4gICAgICAgICAgICAgICAgPGJrLWJ1dHRvbiB0ZXh0IEBjbGljaz1cImhhbmRsZUNsZWFyXCI+e3skdCgnZW52aXJvbm1lbnQu5riF56m6562b6YCJ5p2h5Lu2Jyl9fTwvYmstYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2kxOG4+XHJcbiAgICAgICAgPC90ZW1wbGF0ZT5cclxuICAgIDwvYmstZXhjZXB0aW9uPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuICAgIGV4cG9ydCBkZWZhdWx0IHtcclxuICAgICAgICBuYW1lOiAnRW1wdHlUYWJsZVN0YXR1cycsXHJcbiAgICAgICAgcHJvcHM6IHtcclxuICAgICAgICAgICAgdHlwZToge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogJ2VtcHR5J1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkYXRhICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHR5cGVNYXA6IHtcclxuICAgICAgICAgICAgICAgICAgICBlbXB0eTogdGhpcy4kdCgnZW52aXJvbm1lbnQu5pqC5peg5pWw5o2uJyksXHJcbiAgICAgICAgICAgICAgICAgICAgJ3NlYXJjaC1lbXB0eSc6IHRoaXMuJHQoJ2Vudmlyb25tZW50LuaQnOe0oue7k+aenOS4uuepuicpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG1ldGhvZHM6IHtcclxuICAgICAgICAgICAgaGFuZGxlQ2xlYXIgKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2xlYXInKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic2Nzc1wiPlxyXG4gICAgLmVtcHR5LXRpcHMge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgY29sb3I6ICM5NzlCQTU7XHJcbiAgICB9XHJcbjwvc3R5bGU+XHJcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lbXB0eS10YWJsZS1zdGF0dXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lbXB0eS10YWJsZS1zdGF0dXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P2Nsb25lZFJ1bGVTZXQtMy51c2VbMF0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2VtcHR5LXRhYmxlLXN0YXR1cy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0zMWNjZmM1NCZwcm9kJmxhbmc9c2Nzc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9lbXB0eS10YWJsZS1zdGF0dXMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTMxY2NmYzU0XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZW1wdHktdGFibGUtc3RhdHVzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9lbXB0eS10YWJsZS1zdGF0dXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZW1wdHktdGFibGUtc3RhdHVzLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTMxY2NmYzU0JnByb2QmbGFuZz1zY3NzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2528\n");

/***/ }),

/***/ 8729:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ status_icon)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/status-icon.vue?vue&type=template&id=149952da&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"span\", {\n    class: _vm.statusClass\n  }, [_c(\"i\")]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/status-icon.vue?vue&type=template&id=149952da&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/status-icon.vue?vue&type=script&lang=js\n/* harmony default export */ const status_iconvue_type_script_lang_js = ({\n  props: {\n    status: {\n      type: String,\n      default: ''\n    },\n    statusColorMap: {\n      type: Object,\n      default: () => ({\n        success: 'green',\n        error: 'red',\n        normal: 'gray',\n        succeed: 'green',\n        failed: 'red'\n      })\n    }\n  },\n  computed: {\n    statusClass() {\n      return `status-icon status-${this.statusColorMap[this.status.toLowerCase()]}`;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/status-icon.vue?vue&type=script&lang=js\n /* harmony default export */ const components_status_iconvue_type_script_lang_js = (status_iconvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/status-icon.vue?vue&type=style&index=0&id=149952da&prod&lang=scss&scoped=true\nvar status_iconvue_type_style_index_0_id_149952da_prod_lang_scss_scoped_true = __webpack_require__(6571);\n;// CONCATENATED MODULE: ./src/components/status-icon.vue?vue&type=style&index=0&id=149952da&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/status-icon.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_status_iconvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"149952da\",\n  null\n  \n)\n\n/* harmony default export */ const status_icon = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcyOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7OztBRUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN0JBOzs7Ozs7OztBRUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9zdGF0dXMtaWNvbi52dWU/YTQzZSIsIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvLi9zcmMvY29tcG9uZW50cy9zdGF0dXMtaWNvbi52dWU/ZWQzYiIsIndlYnBhY2s6Ly9kZXZvcHMtZW52aXJvbm1lbnQvc3JjL2NvbXBvbmVudHMvc3RhdHVzLWljb24udnVlPzc1MzIiLCJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL2NvbXBvbmVudHMvc3RhdHVzLWljb24udnVlP2FiNTciLCJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL2NvbXBvbmVudHMvc3RhdHVzLWljb24udnVlP2Y0ZjgiLCJ3ZWJwYWNrOi8vZGV2b3BzLWVudmlyb25tZW50Ly4vc3JjL2NvbXBvbmVudHMvc3RhdHVzLWljb24udnVlPzNiZjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgdmFyIF92bSA9IHRoaXMsXG4gICAgX2MgPSBfdm0uX3NlbGYuX2NcbiAgcmV0dXJuIF9jKFwic3BhblwiLCB7IGNsYXNzOiBfdm0uc3RhdHVzQ2xhc3MgfSwgW19jKFwiaVwiKV0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3J1bGVTZXRbMV0ucnVsZXNbM10hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zdGF0dXMtaWNvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTQ5OTUyZGEmc2NvcGVkPXRydWVcIiIsIjx0ZW1wbGF0ZT5cclxuICAgIDxzcGFuIDpjbGFzcz1cInN0YXR1c0NsYXNzXCI+XHJcbiAgICAgICAgPGkgLz5cclxuICAgIDwvc3Bhbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICAgICAgcHJvcHM6IHtcclxuICAgICAgICAgICAgc3RhdHVzOiB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiAnJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzdGF0dXNDb2xvck1hcDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogT2JqZWN0LFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gKHtcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiAnZ3JlZW4nLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiAncmVkJyxcclxuICAgICAgICAgICAgICAgICAgICBub3JtYWw6ICdncmF5JyxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZWVkOiAnZ3JlZW4nLFxyXG4gICAgICAgICAgICAgICAgICAgIGZhaWxlZDogJ3JlZCdcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbXB1dGVkOiB7XHJcbiAgICAgICAgICAgIHN0YXR1c0NsYXNzICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBgc3RhdHVzLWljb24gc3RhdHVzLSR7dGhpcy5zdGF0dXNDb2xvck1hcFt0aGlzLnN0YXR1cy50b0xvd2VyQ2FzZSgpXX1gXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxyXG4uc3RhdHVzLWljb24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAxcHg7XHJcbiAgICB3aWR0aDogMTNweDtcclxuICAgIGhlaWdodDogMTNweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgaSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzk3OWJhNTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgaGVpZ2h0OiA3cHg7XHJcbiAgICAgICAgbGVmdDogM3B4O1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDNweDtcclxuICAgICAgICB3aWR0aDogN3B4O1xyXG4gICAgfVxyXG59XHJcbi5zdGF0dXMtcmVkIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjM0LCA1NCwgNTQsIDAuMTYpO1xyXG4gICAgaSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiKDIzNCwgNTQsIDU0KTtcclxuICAgIH1cclxufVxyXG4uc3RhdHVzLWdyZWVuIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoNDUsIDIwMywgODYsIDAuMTYpO1xyXG4gICAgaSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiKDQ1LCAyMDMsIDg2KTtcclxuICAgIH1cclxufVxyXG4uc3RhdHVzLWJsdWUge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgxMDUsIDE1NywgMjQ0LCAwLjE2KTtcclxuICAgIGkge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHJnYigxMDUsIDE1NywgMjQ0KTtcclxuICAgIH1cclxufVxyXG4uc3RhdHVzLWdyYXkge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgxNTEsIDE1NSwgMTY1LCAwLjE2KTtcclxuICAgIGkge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHJnYigxNTEsIDE1NSwgMTY1KTtcclxuICAgIH1cclxufVxyXG48L3N0eWxlPlxyXG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc3RhdHVzLWljb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zdGF0dXMtaWNvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/Y2xvbmVkUnVsZVNldC0zLnVzZVswXSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc3RhdHVzLWljb24udnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MTQ5OTUyZGEmcHJvZCZsYW5nPXNjc3Mmc2NvcGVkPXRydWVcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vc3RhdHVzLWljb24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE0OTk1MmRhJnNjb3BlZD10cnVlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vc3RhdHVzLWljb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL3N0YXR1cy1pY29uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3N0YXR1cy1pY29uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTE0OTk1MmRhJnByb2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjE0OTk1MmRhXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8729\n");

/***/ }),

/***/ 857:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ execution_detail)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/execution-detail/index.vue?vue&type=template&id=c5d0af4e\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    staticClass: \"execution-detail\"\n  }, [_c(\"header\", {\n    staticClass: \"header-wrapper\"\n  }, [_c(\"bk-breadcrumb\", {\n    attrs: {\n      separator: \">\"\n    }\n  }, [_c(\"bk-breadcrumb-item\", {\n    attrs: {\n      to: {\n        path: \"/console/environment\"\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.environmentManage\")))]), _vm._v(\" \"), _c(\"bk-breadcrumb-item\", {\n    directives: [{\n      name: \"bk-overflow-tips\",\n      rawName: \"v-bk-overflow-tips\"\n    }]\n  }, [_vm._v(_vm._s(_vm.stepInstanceData.name))])], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"status-box\",\n    class: _vm.statusStyleMap[_vm.checkStatus(_vm.stepInstanceData.status)]\n  }, [_c(\"div\", {\n    staticClass: \"status\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.状态\")) + \"：\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"status-text\"\n  }, [_vm._v(_vm._s(_vm.stepStatusMap[_vm.stepInstanceData.status]))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"time\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.总耗时\")) + \"：\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"value\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.stepInstanceData.totalTime / 1000) + \"s\\n                \")])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"action\"\n  }, [_vm._t(\"default\")], 2)])], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"task-step-detail\"\n  }, [_c(\"div\", {\n    staticClass: \"step-info-header\"\n  }, [_c(\"div\", {\n    staticClass: \"step-info-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"step-type-text\"\n  }, [_vm._v(_vm._s(_vm.stepTypeText))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"step-name-box\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bk-overflow-tips\",\n      rawName: \"v-bk-overflow-tips\"\n    }],\n    staticClass: \"step-name-text\"\n  }, [_vm._v(\"\\n                        \" + _vm._s(_vm.stepInstanceData.name) + \"\\n                    \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"step-action-box\"\n  }, [_c(\"div\", {\n    staticClass: \"log-search-box\"\n  }, [_c(\"compose-form-item\", [_c(\"bk-select\", {\n    staticStyle: {\n      width: \"100px\"\n    },\n    attrs: {\n      clearable: false\n    },\n    model: {\n      value: _vm.searchModel,\n      callback: function ($$v) {\n        _vm.searchModel = $$v;\n      },\n      expression: \"searchModel\"\n    }\n  }, [_c(\"bk-option\", {\n    attrs: {\n      id: \"log\",\n      name: _vm.$t(\"environment.搜索日志\")\n    }\n  }), _vm._v(\" \"), _c(\"bk-option\", {\n    attrs: {\n      id: \"ip\",\n      name: _vm.$t(\"environment.搜索 IP\")\n    }\n  })], 1), _vm._v(\" \"), _vm.searchModel === \"log\" ? _c(\"bk-input\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: {\n        content: _vm.isFile ? _vm.$t(\"environment.分发文件步骤不支持日志搜索\") : \"\",\n        disabled: !_vm.isFile\n      },\n      expression: \"{\\n                                        content: isFile ? $t('environment.分发文件步骤不支持日志搜索') : '',\\n                                        disabled: !isFile\\n                                    }\"\n    }],\n    key: \"log\",\n    staticStyle: {\n      width: \"292px\"\n    },\n    attrs: {\n      disabled: _vm.isFile,\n      \"right-icon\": \"bk-icon icon-search\",\n      value: _vm.keyword\n    },\n    on: {\n      \"right-icon-click\": _vm.handleLogSearch,\n      keyup: _vm.handleLogSearch\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm.searchModel === \"ip\" ? _c(\"bk-input\", {\n    key: \"ip\",\n    staticStyle: {\n      width: \"292px\"\n    },\n    attrs: {\n      \"right-icon\": \"bk-icon icon-search\",\n      value: _vm.searchIp\n    },\n    on: {\n      \"right-icon-click\": _vm.handleIPSearch,\n      keyup: _vm.handleIPSearch\n    }\n  }) : _vm._e()], 1)], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"task-instance-action\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips.bottom\",\n      value: _vm.$t(\"environment.步骤内容\"),\n      expression: \"$t('environment.步骤内容')\",\n      modifiers: {\n        bottom: true\n      }\n    }],\n    staticClass: \"action-btn detail-btn\",\n    on: {\n      click: _vm.handleShowDetail\n    }\n  }, [_c(\"icon\", {\n    attrs: {\n      name: \"detail-line\",\n      size: \"14\"\n    }\n  })], 1)])])])])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"step-execute-host-group\"\n  }, [_c(\"div\", {\n    staticClass: \"group-tab\"\n  }, _vm._l(_vm.stepResultGroupList, function (item, index) {\n    return _c(\"div\", {\n      key: index,\n      class: {\n        \"tab-item\": true,\n        active: _vm.activeGroupIndex === index\n      },\n      on: {\n        click: function ($event) {\n          return _vm.handleChangeGroup(index);\n        }\n      }\n    }, [_c(\"div\", {\n      directives: [{\n        name: \"bk-overflow-tips\",\n        rawName: \"v-bk-overflow-tips\"\n      }],\n      staticClass: \"group-name\"\n    }, [_vm._v(_vm._s(`${item.resultTypeDesc}`) + \" \" + _vm._s(item.tag ? `(${item.tag})` : \"\"))]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"group-nums\"\n    }, [_vm._v(_vm._s(item.hostSize))])]);\n  }), 0)])]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"detailContainer\",\n    staticClass: \"detail-container\",\n    style: _vm.defailContainerStyles\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isHostLoading\n      },\n      expression: \"{ isLoading: isHostLoading }\"\n    }],\n    staticClass: \"container-left\"\n  }, [_c(\"ip-list\", {\n    attrs: {\n      list: _vm.ipList,\n      ip: _vm.activeIp,\n      \"is-search\": _vm.isSearch,\n      \"host-id\": _vm.activeHostId,\n      \"ip-status\": _vm.activeIpStatus,\n      \"bk-cloud-id\": _vm.activeBkCloudId,\n      \"active-group-index\": _vm.activeGroupIndex,\n      \"pagination-change-loading\": _vm.paginationChangeLoading\n    },\n    on: {\n      \"update:ip\": function ($event) {\n        _vm.activeIp = $event;\n      },\n      \"update:hostId\": function ($event) {\n        _vm.activeHostId = $event;\n      },\n      \"update:host-id\": function ($event) {\n        _vm.activeHostId = $event;\n      },\n      \"update:ipStatus\": function ($event) {\n        _vm.activeIpStatus = $event;\n      },\n      \"update:ip-status\": function ($event) {\n        _vm.activeIpStatus = $event;\n      },\n      \"update:bkCloudId\": function ($event) {\n        _vm.activeBkCloudId = $event;\n      },\n      \"update:bk-cloud-id\": function ($event) {\n        _vm.activeBkCloudId = $event;\n      },\n      \"on-pagination-change\": _vm.handleIpListPageChange,\n      \"on-clear-filter\": _vm.handleClearFilter\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"container-right\"\n  }, [_c(\"execution-info\", {\n    attrs: {\n      finished: _vm.jobInstanceFinished,\n      ip: _vm.activeIp,\n      \"host-id\": _vm.activeHostId,\n      \"bk-cloud-id\": _vm.activeBkCloudId,\n      \"ip-status\": _vm.activeIpStatus\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"bk-sideslider\", {\n    attrs: {\n      \"is-show\": _vm.isShowDetail,\n      \"quick-close\": \"\",\n      \"ext-cls\": \"step-detail-sideslider\",\n      \"show-footer\": false,\n      title: _vm.$t(\"environment.查看步骤内容\"),\n      width: 960\n    },\n    on: {\n      \"update:isShow\": function ($event) {\n        _vm.isShowDetail = $event;\n      },\n      \"update:is-show\": function ($event) {\n        _vm.isShowDetail = $event;\n      }\n    }\n  }, [_c(\"div\", {\n    attrs: {\n      slot: \"content\"\n    },\n    slot: \"content\"\n  }, [_c(\"step-detail-view\", {\n    attrs: {\n      \"step-instance-id\": _vm.stepInstanceId,\n      \"job-instance-id\": _vm.jobInstanceId\n    }\n  })], 1)])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/execution-detail/index.vue?vue&type=template&id=c5d0af4e\n\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/ipList/index.vue?vue&type=template&id=13228546\nvar ipListvue_type_template_id_13228546_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-table\", {\n    key: Object.keys(_vm.allRenderColumnMap).length,\n    staticClass: \"ip-table\",\n    attrs: {\n      data: _vm.list,\n      size: _vm.tableSize,\n      height: \"100%\",\n      \"scroll-loading\": {\n        isLoading: _vm.paginationChangeLoading\n      },\n      \"row-class-name\": _vm.rowClassName\n    },\n    on: {\n      \"scroll-end\": _vm.handleScrollEnd,\n      \"row-click\": _vm.handleRowClick\n    },\n    scopedSlots: _vm._u([{\n      key: \"empty\",\n      fn: function () {\n        return [_c(\"EmptyTableStatus\", {\n          attrs: {\n            type: _vm.isSearch ? \"search-empty\" : \"empty\"\n          },\n          on: {\n            clear: _vm.clearFilter\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: \"IP\",\n      prop: \"ip\",\n      \"min-width\": 150,\n      \"show-overflow-tooltip\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref) {\n        let {\n          row\n        } = _ref;\n        return [_c(\"div\", {\n          staticClass: \"ip-box\",\n          class: row.result\n        }, [_vm._v(\"\\n                \" + _vm._s(row.ip) + \"\\n            \")])];\n      }\n    }])\n  }), _vm._v(\" \"), _vm.allRenderColumnMap.ipv6 ? _c(\"bk-table-column\", {\n    attrs: {\n      label: \"IPv6\",\n      prop: \"ipv6\",\n      width: \"150\",\n      \"show-overflow-tooltip\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref2) {\n        let {\n          row\n        } = _ref2;\n        return [_vm._v(\"\\n            \" + _vm._s(row.ipv6 || \"--\") + \"\\n        \")];\n      }\n    }], null, false, 3458030822)\n  }) : _vm._e(), _vm._v(\" \"), _vm.allRenderColumnMap.totalTime ? _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.耗时(s)\"),\n      prop: \"totalTime\",\n      sortable: \"\",\n      width: \"100\",\n      \"show-overflow-tooltip\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref3) {\n        let {\n          row\n        } = _ref3;\n        return [_vm._v(\"\\n            \" + _vm._s(row.totalTime / 1000) + \"\\n        \")];\n      }\n    }], null, false, 4064575718)\n  }) : _vm._e(), _vm._v(\" \"), _vm.allRenderColumnMap.bkCloudId ? _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.管控区域\"),\n      prop: \"bkCloudId\",\n      sortable: \"\",\n      width: \"100\",\n      \"show-overflow-tooltip\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref4) {\n        let {\n          row\n        } = _ref4;\n        return [_vm._v(\"\\n            \" + _vm._s(row.bkCloudName || row.bkCloudId || \"--\") + \"\\n        \")];\n      }\n    }], null, false, 2308707409)\n  }) : _vm._e(), _vm._v(\" \"), _vm.allRenderColumnMap.exitCode ? _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.返回码\"),\n      prop: \"exitCode\",\n      width: \"100\",\n      sortable: \"\",\n      \"show-overflow-tooltip\": \"\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm.allRenderColumnMap.bkAgentId ? _c(\"bk-table-column\", {\n    attrs: {\n      label: \"Agent ID\",\n      prop: \"bkAgentId\",\n      width: \"100\",\n      \"show-overflow-tooltip\": \"\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm.allRenderColumnMap.bkHostId ? _c(\"bk-table-column\", {\n    attrs: {\n      label: \"Host ID\",\n      prop: \"bkHostId\",\n      sortable: \"\",\n      width: \"100\",\n      \"show-overflow-tooltip\": \"\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      type: \"setting\",\n      width: \"40\"\n    }\n  }, [_c(\"bk-table-setting-content\", {\n    attrs: {\n      fields: _vm.tableColumn,\n      selected: _vm.selectedTableColumn,\n      size: _vm.tableSize\n    },\n    on: {\n      \"setting-change\": _vm.handleSettingChange\n    }\n  })], 1)], 1);\n};\nvar ipListvue_type_template_id_13228546_staticRenderFns = [];\nipListvue_type_template_id_13228546_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/ipList/index.vue?vue&type=template&id=13228546\n\n// EXTERNAL MODULE: ./src/components/empty-table-status.vue + 5 modules\nvar empty_table_status = __webpack_require__(2528);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/ipList/index.vue?vue&type=script&lang=js\n\nconst TABLE_COLUMN_CACHE = 'env_ip_list_columns';\n/* harmony default export */ const ipListvue_type_script_lang_js = ({\n  components: {\n    EmptyTableStatus: empty_table_status/* default */.A\n  },\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    },\n    isSearch: Boolean,\n    ip: String,\n    bkCloudId: Number,\n    hostId: Number,\n    activeGroupIndex: Number,\n    paginationChangeLoading: Boolean\n  },\n  data() {\n    return {\n      tableColumn: [],\n      selectedTableColumn: [],\n      tableSize: 'small',\n      page: 1,\n      pageSize: 20\n    };\n  },\n  computed: {\n    allRenderColumnMap() {\n      return this.selectedTableColumn.reduce((result, item) => {\n        result[item.id] = true;\n        return result;\n      }, {});\n    }\n  },\n  watch: {\n    // 切换group时重置翻页\n    activeGroupIndex() {\n      this.page = 1;\n    }\n  },\n  created() {\n    this.tableColumn = [{\n      id: 'ip',\n      label: 'IP',\n      disabled: true\n    }, {\n      id: 'ipv6',\n      label: 'IPv6'\n    }, {\n      id: 'totalTime',\n      label: this.$t('environment.耗时(s)')\n    }, {\n      id: 'bkCloudId',\n      label: this.$t('environment.管控区域')\n    }, {\n      id: 'exitCode',\n      label: this.$t('environment.返回码')\n    }, {\n      id: 'bkAgentId',\n      label: 'Agent ID'\n    }, {\n      id: 'bkHostId',\n      label: 'Host ID'\n    }];\n    const columnsCache = JSON.parse(localStorage.getItem(TABLE_COLUMN_CACHE));\n    if (columnsCache) {\n      this.selectedTableColumn = Object.freeze(columnsCache.columns);\n      this.tableSize = columnsCache.size;\n    } else {\n      this.selectedTableColumn = Object.freeze([{\n        id: 'ip'\n      }, {\n        id: 'ipv6'\n      }, {\n        id: 'totalTime'\n      }, {\n        id: 'bkCloudId'\n      }, {\n        id: 'exitCode'\n      }, {\n        id: 'bkAgentId'\n      }, {\n        id: 'bkHostId'\n      }]);\n    }\n  },\n  methods: {\n    handleSettingChange(_ref) {\n      let {\n        fields,\n        size\n      } = _ref;\n      this.selectedTableColumn = Object.freeze(fields);\n      this.tableSize = size;\n      localStorage.setItem(TABLE_COLUMN_CACHE, JSON.stringify({\n        columns: fields,\n        size\n      }));\n    },\n    handleRowClick(row) {\n      this.$emit('update:hostId', row.bkHostId);\n      this.$emit('update:ip', row.ip);\n      this.$emit('update:bkCloudId', row.bkCloudId);\n      this.$emit('update:ipStatus', row.result);\n    },\n    rowClassName(_ref2) {\n      let {\n        row\n      } = _ref2;\n      return row && row.bkHostId === this.hostId ? 'active' : '';\n    },\n    handleScrollEnd() {\n      this.page += 1;\n      this.$emit('on-pagination-change', this.page * this.pageSize);\n    },\n    clearFilter() {\n      this.page = 1;\n      this.$emit('on-clear-filter');\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/ipList/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_ipListvue_type_script_lang_js = (ipListvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/ipList/index.vue?vue&type=style&index=0&id=13228546&prod&lang=scss\nvar ipListvue_type_style_index_0_id_13228546_prod_lang_scss = __webpack_require__(5698);\n;// CONCATENATED MODULE: ./src/components/ipList/index.vue?vue&type=style&index=0&id=13228546&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/ipList/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_ipListvue_type_script_lang_js,\n  ipListvue_type_template_id_13228546_render,\n  ipListvue_type_template_id_13228546_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ipList = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/execution-detail/step-detail-view.vue?vue&type=template&id=49793538\nvar step_detail_viewvue_type_template_id_49793538_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    staticClass: \"history-step-detail-view\"\n  }, [_c(\"task-step-view\", {\n    attrs: {\n      data: _vm.stepInfo\n    }\n  })], 1);\n};\nvar step_detail_viewvue_type_template_id_49793538_staticRenderFns = [];\nstep_detail_viewvue_type_template_id_49793538_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/execution-detail/step-detail-view.vue?vue&type=template&id=49793538\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/index.vue?vue&type=template&id=4a3ee93c&scoped=true\nvar task_step_viewvue_type_template_id_4a3ee93c_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"detail-layout\", {\n    staticClass: \"detail-layout-wrapper\",\n    attrs: {\n      mode: \"see\"\n    }\n  }, [_c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.步骤类型：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepTypeText) + \"\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.步骤名称：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.data.name) + \"\\n    \")]), _vm._v(\" \"), _c(_vm.stepCom, {\n    ref: \"stepCom\",\n    tag: \"component\",\n    attrs: {\n      data: _vm.data\n    }\n  }, [_vm._t(\"default\")], 2)], 1);\n};\nvar task_step_viewvue_type_template_id_4a3ee93c_scoped_true_staticRenderFns = [];\ntask_step_viewvue_type_template_id_4a3ee93c_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/index.vue?vue&type=template&id=4a3ee93c&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/index.vue?vue&type=template&id=2bf5183e\nvar detail_layoutvue_type_template_id_2bf5183e_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    ref: \"detailLayout\",\n    staticClass: \"bkci-detail-layout\",\n    class: [_vm.mode, _vm.layout]\n  }, [_vm._t(\"default\")], 2);\n};\nvar detail_layoutvue_type_template_id_2bf5183e_staticRenderFns = [];\ndetail_layoutvue_type_template_id_2bf5183e_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/index.vue?vue&type=template&id=2bf5183e\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/index.vue?vue&type=script&lang=js\n/* harmony default export */ const detail_layoutvue_type_script_lang_js = ({\n  name: 'BkciDetailLayout',\n  props: {\n    mode: {\n      type: String,\n      default: 'normal' // normal, see\n    },\n    layout: {\n      type: String,\n      default: 'horizontal' // horizontal, vertical\n    },\n    isWarp: {\n      type: Boolean\n    }\n  },\n  created() {\n    this.childrenNum = this.$slots.default;\n  },\n  updated() {\n    const childrenNum = this.$slots.default;\n    if (this.childrenNum !== childrenNum) {\n      this.init();\n      this.childrenNum = childrenNum;\n    }\n  },\n  mounted() {\n    const isShowLayout = this.$refs.detailLayout.getBoundingClientRect().width > 0;\n    if (isShowLayout) {\n      this.init();\n    }\n  },\n  methods: {\n    init() {\n      if (this.layout === 'vertical') {\n        return;\n      }\n      const $layoutEle = this.$refs.detailLayout;\n      const $layoutDetailList = $layoutEle.querySelectorAll('.detail-label');\n      let max = 0;\n      $layoutDetailList.forEach(item => {\n        const {\n          width\n        } = item.getBoundingClientRect();\n        max = Math.max(max, width);\n      });\n      $layoutDetailList.forEach(item => {\n        item.style.width = `${max}px`;\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_detail_layoutvue_type_script_lang_js = (detail_layoutvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/index.vue?vue&type=style&index=0&id=2bf5183e&prod&lang=scss\nvar detail_layoutvue_type_style_index_0_id_2bf5183e_prod_lang_scss = __webpack_require__(8922);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/index.vue?vue&type=style&index=0&id=2bf5183e&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar detail_layout_component = (0,componentNormalizer/* default */.A)(\n  components_detail_layoutvue_type_script_lang_js,\n  detail_layoutvue_type_template_id_2bf5183e_render,\n  detail_layoutvue_type_template_id_2bf5183e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const detail_layout = (detail_layout_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/item.vue?vue&type=template&id=5fe4bf1c&scoped=true\nvar itemvue_type_template_id_5fe4bf1c_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"detail-item\",\n    class: `design-layout-${_vm.layout}`\n  }, [_c(\"div\", {\n    staticClass: \"detail-label\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.label))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-content\"\n  }, [_vm._t(\"default\")], 2)]);\n};\nvar itemvue_type_template_id_5fe4bf1c_scoped_true_staticRenderFns = [];\nitemvue_type_template_id_5fe4bf1c_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/item.vue?vue&type=template&id=5fe4bf1c&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/item.vue?vue&type=script&lang=js\n/* harmony default export */ const itemvue_type_script_lang_js = ({\n  name: 'BkciDetailLayoutItem',\n  props: {\n    label: {\n      type: String,\n      default: ''\n    },\n    layout: {\n      type: String,\n      default: '' // horizontal, vertical\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/item.vue?vue&type=script&lang=js\n /* harmony default export */ const detail_layout_itemvue_type_script_lang_js = (itemvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/detail-layout/item.vue?vue&type=style&index=0&id=5fe4bf1c&prod&lang=scss&scoped=true\nvar itemvue_type_style_index_0_id_5fe4bf1c_prod_lang_scss_scoped_true = __webpack_require__(2130);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/item.vue?vue&type=style&index=0&id=5fe4bf1c&prod&lang=scss&scoped=true\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/detail-layout/item.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar item_component = (0,componentNormalizer/* default */.A)(\n  detail_layout_itemvue_type_script_lang_js,\n  itemvue_type_template_id_5fe4bf1c_scoped_true_render,\n  itemvue_type_template_id_5fe4bf1c_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"5fe4bf1c\",\n  null\n  \n)\n\n/* harmony default export */ const item = (item_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/distro-file.vue?vue&type=template&id=b2dbe558&scoped=true\nvar distro_filevue_type_template_id_b2dbe558_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"distro-file-view\",\n    class: {\n      loading: _vm.isLoading\n    }\n  }, [_c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.超时时长：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepInfo.timeout) + \" (s)\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.上传限速：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepInfo.sourceSpeedLimit ? `${_vm.stepInfo.sourceSpeedLimit} (MB/s)` : _vm.$t(\"environment.否\")) + \"\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.下载限速：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepInfo.destinationSpeedLimit ? `${_vm.stepInfo.destinationSpeedLimit} (MB/s)` : _vm.$t(\"environment.否\")) + \"\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.文件来源：\"),\n      layout: \"vertical\"\n    }\n  }, [_c(\"render-source-file\", {\n    attrs: {\n      data: _vm.stepInfo.fileSourceList,\n      variable: _vm.variable\n    }\n  })], 1), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.目标路径：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepInfo.fileDestination.path) + \"\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.传输模式：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.transferModeMap[_vm.stepInfo.transferMode]) + \"\\n    \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.执行账号：\")\n    }\n  }, [_vm._v(\"\\n        \" + _vm._s(_vm.stepInfo.fileDestination.account.name || \"--\") + \"\\n    \")]), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar distro_filevue_type_template_id_b2dbe558_scoped_true_staticRenderFns = [];\ndistro_filevue_type_template_id_b2dbe558_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/distro-file.vue?vue&type=template&id=b2dbe558&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-source-file.vue?vue&type=template&id=f2318f8a\nvar render_source_filevue_type_template_id_f2318f8a_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"render-server-file\"\n  }, [_vm.isShowServerFile ? _c(\"bk-collapse\", {\n    staticClass: \"host-detail\",\n    model: {\n      value: _vm.activeResult,\n      callback: function ($$v) {\n        _vm.activeResult = $$v;\n      },\n      expression: \"activeResult\"\n    }\n  }, [_vm.isShowServerFile ? _c(\"collapse-item\", {\n    attrs: {\n      active: _vm.activeResult,\n      name: \"server\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"content\",\n      fn: function () {\n        return [_c(\"table\", [_c(\"thead\", [_c(\"th\", {\n          staticStyle: {\n            width: \"40%\"\n          }\n        }, [_vm._v(\"\\n                            \" + _vm._s(_vm.$t(\"environment.文件路径\")) + \"\\n                        \")]), _vm._v(\" \"), _c(\"th\", {\n          staticStyle: {\n            width: \"15%\"\n          }\n        }, [_vm._v(\"\\n                            \" + _vm._s(_vm.$t(\"environment.服务器列表\")) + \"\\n                        \")]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"environment.Agent 状态\")))]), _vm._v(\" \"), _c(\"th\", {\n          staticStyle: {\n            width: \"20%\"\n          }\n        }, [_vm._v(\"\\n                            \" + _vm._s(_vm.$t(\"environment.服务器账号\")) + \"\\n                        \")])]), _vm._v(\" \"), _c(\"tbody\", _vm._l(_vm.serverFileList, function (row, index) {\n          return _c(\"tr\", {\n            key: index\n          }, [_c(\"td\", [_c(\"render-file-path\", {\n            attrs: {\n              data: row.fileList\n            }\n          })], 1), _vm._v(\" \"), _c(\"td\", [_c(\"render-file-server\", {\n            attrs: {\n              type: \"server\",\n              data: row\n            }\n          })], 1), _vm._v(\" \"), _c(\"td\", [_c(\"render-file-server\", {\n            attrs: {\n              type: \"agent\",\n              data: row\n            }\n          })], 1), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(row.account.name))])]);\n        }), 0)])];\n      },\n      proxy: true\n    }], null, false, 270935502)\n  }, [_c(\"span\", {\n    staticClass: \"collapse-title\"\n  }, [_vm._v(\"\\n                \" + _vm._s(_vm.$t(\"environment.已选择\")) + \"\\n                \"), _c(\"span\", {\n    staticClass: \"number strong\"\n  }, [_vm._v(_vm._s(_vm.serverFileList.length))]), _vm._v(\"\\n                \" + _vm._s(_vm.$t(\"environment.个服务器文件\")) + \"\\n            \")])]) : _vm._e()], 1) : _vm._e()], 1);\n};\nvar render_source_filevue_type_template_id_f2318f8a_staticRenderFns = [];\nrender_source_filevue_type_template_id_f2318f8a_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-source-file.vue?vue&type=template&id=f2318f8a\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/collapse-item/index.vue?vue&type=template&id=2aae192e\nvar collapse_itemvue_type_template_id_2aae192e_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"bkci-collapse-item\"\n  }, [_c(\"bk-collapse-item\", _vm._g(_vm._b({\n    ref: \"collapseItem\",\n    attrs: {\n      \"hide-arrow\": \"\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function () {\n        return [_c(\"icon\", {\n          attrs: {\n            name: _vm.iconType,\n            size: \"14\"\n          }\n        }), _vm._v(\" \"), _c(\"span\", {\n          staticStyle: {\n            display: \"none\"\n          }\n        }, [_vm._v(_vm._s(_vm.iconType))]), _vm._v(\" \"), _vm._t(\"default\")];\n      },\n      proxy: true\n    }, {\n      key: \"content\",\n      fn: function () {\n        return [_vm._t(\"content\")];\n      },\n      proxy: true\n    }], null, true)\n  }, \"bk-collapse-item\", _vm.$attrs, false), _vm.$listeners))], 1);\n};\nvar collapse_itemvue_type_template_id_2aae192e_staticRenderFns = [];\ncollapse_itemvue_type_template_id_2aae192e_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/collapse-item/index.vue?vue&type=template&id=2aae192e\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/collapse-item/index.vue?vue&type=script&lang=js\n/* harmony default export */ const collapse_itemvue_type_script_lang_js = ({\n  inject: ['collapse'],\n  data() {\n    return {\n      iconType: 'arrow-full-right'\n    };\n  },\n  mounted() {\n    const unwatch = this.$watch(() => this.$refs.collapseItem.isActive, newValue => {\n      this.iconType = newValue ? 'arrow-full-down' : 'arrow-full-right';\n    }, {\n      immediate: true\n    });\n    this.$once('hook:beforeDestroy', () => {\n      unwatch();\n    });\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/collapse-item/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_collapse_itemvue_type_script_lang_js = (collapse_itemvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/collapse-item/index.vue?vue&type=style&index=0&id=2aae192e&prod&lang=scss\nvar collapse_itemvue_type_style_index_0_id_2aae192e_prod_lang_scss = __webpack_require__(7023);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/collapse-item/index.vue?vue&type=style&index=0&id=2aae192e&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/collapse-item/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar collapse_item_component = (0,componentNormalizer/* default */.A)(\n  components_collapse_itemvue_type_script_lang_js,\n  collapse_itemvue_type_template_id_2aae192e_render,\n  collapse_itemvue_type_template_id_2aae192e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const collapse_item = (collapse_item_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-path.vue?vue&type=template&id=5abb5b8c\nvar render_file_pathvue_type_template_id_5abb5b8c_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"render-file-path-box\"\n  }, [_c(\"bk-popover\", {\n    attrs: {\n      placement: \"left\"\n    }\n  }, [_vm._l(_vm.renderData, function (item, fileIndex) {\n    return _c(\"div\", {\n      key: fileIndex,\n      staticClass: \"path-text-row\"\n    }, [_vm._v(\"\\n            \" + _vm._s(item) + \"\\n        \")]);\n  }), _vm._v(\" \"), _vm.hasMore ? _c(\"div\", [_vm._v(\"\\n            ...\\n        \")]) : _vm._e(), _vm._v(\" \"), _c(\"ul\", {\n    staticClass: \"source-file-tips-box\",\n    attrs: {\n      slot: \"content\"\n    },\n    slot: \"content\"\n  }, _vm._l(_vm.data, function (item, fileIndex) {\n    return _c(\"li\", {\n      key: fileIndex,\n      staticClass: \"row\"\n    }, [_c(\"span\", {\n      staticClass: \"dot\"\n    }), _vm._v(\"\\n                \" + _vm._s(item) + \"\\n            \")]);\n  }), 0)], 2)], 1);\n};\nvar render_file_pathvue_type_template_id_5abb5b8c_staticRenderFns = [];\nrender_file_pathvue_type_template_id_5abb5b8c_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-path.vue?vue&type=template&id=5abb5b8c\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-path.vue?vue&type=script&lang=js\nconst DISPLAY_ROW_NUMS = 3;\n/* harmony default export */ const render_file_pathvue_type_script_lang_js = ({\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  computed: {\n    renderData() {\n      return this.data.slice(0, DISPLAY_ROW_NUMS);\n    },\n    hasMore() {\n      return this.data.length > DISPLAY_ROW_NUMS;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-path.vue?vue&type=script&lang=js\n /* harmony default export */ const components_render_file_pathvue_type_script_lang_js = (render_file_pathvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-path.vue?vue&type=style&index=0&id=5abb5b8c&prod&lang=scss\nvar render_file_pathvue_type_style_index_0_id_5abb5b8c_prod_lang_scss = __webpack_require__(5770);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-path.vue?vue&type=style&index=0&id=5abb5b8c&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-path.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar render_file_path_component = (0,componentNormalizer/* default */.A)(\n  components_render_file_pathvue_type_script_lang_js,\n  render_file_pathvue_type_template_id_5abb5b8c_render,\n  render_file_pathvue_type_template_id_5abb5b8c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const render_file_path = (render_file_path_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-server.vue?vue&type=template&id=84052530\nvar render_file_servervue_type_template_id_84052530_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    class: _vm.isServer ? \"execute-history-file-server\" : \"execute-history-agent-status\"\n  }, [_c(\"div\", {\n    staticClass: \"server-agent-text\",\n    on: {\n      click: _vm.handlerView\n    }\n  }, [_vm.isServer ? [_c(\"span\", {\n    staticClass: \"strong\"\n  }, [_vm._v(_vm._s(_vm.hostList.length))]), _vm._v(_vm._s(_vm.$t(\"environment.台主机\")) + \"\\n        \")] : [_c(\"div\", {\n    staticClass: \"agent-text\"\n  }, [_vm.normalHostList.length ? _c(\"div\", [_vm._v(\"\\n                    \" + _vm._s(_vm.$t(\"environment.正常\")) + \":\\n                    \"), _c(\"span\", {\n    staticClass: \"success number\"\n  }, [_vm._v(_vm._s(_vm.normalHostList.length))])]) : _vm._e(), _vm._v(\" \"), _vm.abnormalHostList.length ? _c(\"div\", [_vm._v(\"\\n                    \" + _vm._s(_vm.$t(\"environment.异常\")) + \":\\n                    \"), _c(\"span\", {\n    staticClass: \"error number\"\n  }, [_vm._v(_vm._s(_vm.abnormalHostList.length))])]) : _vm._e()])]], 2), _vm._v(\" \"), _c(\"bk-dialog\", {\n    staticClass: \"execute-history-step-view-server-detail-dialog\",\n    attrs: {\n      \"ok-text\": _vm.$t(\"environment.关闭\"),\n      width: 1020\n    },\n    scopedSlots: _vm._u([{\n      key: \"header\",\n      fn: function () {\n        return [_c(\"div\", {\n          staticClass: \"title\"\n        }, [_c(\"span\", [_vm._v(_vm._s(_vm.$t(\"environment.服务器文件-服务器列表\")))]), _vm._v(\" \"), _c(\"i\", {\n          staticClass: \"dialog-close-btn bk-icon icon-close\",\n          on: {\n            click: _vm.handlerClose\n          }\n        })])];\n      },\n      proxy: true\n    }, {\n      key: \"footer\",\n      fn: function () {\n        return [_c(\"bk-button\", {\n          on: {\n            click: _vm.handlerClose\n          }\n        }, [_vm._v(\"\\n                \" + _vm._s(_vm.$t(\"关闭\")) + \"\\n            \")])];\n      },\n      proxy: true\n    }]),\n    model: {\n      value: _vm.isShowDetail,\n      callback: function ($$v) {\n        _vm.isShowDetail = $$v;\n      },\n      expression: \"isShowDetail\"\n    }\n  }, [_vm._v(\" \"), _c(\"div\", {\n    staticClass: \"content-wraper\"\n  }, [_c(\"bk-table\", {\n    attrs: {\n      data: _vm.hostList,\n      \"outer-border\": false,\n      \"header-border\": false,\n      \"max-height\": 500\n    }\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.主机ID\"),\n      prop: \"bkHostId\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"Agent ID\",\n      prop: \"bkAgentId\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"IPv4\",\n      prop: \"ip\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref) {\n        let {\n          row\n        } = _ref;\n        return [_vm._v(\"\\n                        \" + _vm._s(row.ip || \"--\") + \"\\n                    \")];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"IPv6\",\n      prop: \"ipv6\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref2) {\n        let {\n          row\n        } = _ref2;\n        return [_vm._v(\"\\n                        \" + _vm._s(row.ipv6 || \"--\") + \"\\n                    \")];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.管控区域\"),\n      prop: \"bkCloudName\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.Agent 状态\"),\n      prop: \"alive\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (_ref3) {\n        let {\n          row\n        } = _ref3;\n        return [_c(\"StatusIcon\", {\n          attrs: {\n            status: row.alive ? \"success\" : \"error\"\n          }\n        }), _vm._v(\"\\n                        \" + _vm._s(row.alive ? _vm.$t(\"environment.正常\") : _vm.$t(\"environment.异常\")) + \"\\n                    \")];\n      }\n    }])\n  })], 1)], 1)])], 1);\n};\nvar render_file_servervue_type_template_id_84052530_staticRenderFns = [];\nrender_file_servervue_type_template_id_84052530_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-server.vue?vue&type=template&id=84052530\n\n// EXTERNAL MODULE: ./src/components/status-icon.vue + 5 modules\nvar status_icon = __webpack_require__(8729);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-server.vue?vue&type=script&lang=js\n\n/* harmony default export */ const render_file_servervue_type_script_lang_js = ({\n  components: {\n    StatusIcon: status_icon/* default */.A\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isShowDetail: false,\n      hostNodeInfo: {}\n    };\n  },\n  computed: {\n    isServer() {\n      return this.type === 'server';\n    },\n    hostList() {\n      return this.data.server.hostList || [];\n    },\n    normalHostList() {\n      return this.hostList.filter(i => i.alive);\n    },\n    abnormalHostList() {\n      return this.hostList.filter(i => !i.alive);\n    }\n  },\n  methods: {\n    handlerView() {\n      this.hostNodeInfo = this.data.server.hostList;\n      this.isShowDetail = true;\n    },\n    handlerClose() {\n      this.isShowDetail = false;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-server.vue?vue&type=script&lang=js\n /* harmony default export */ const components_render_file_servervue_type_script_lang_js = (render_file_servervue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-file-server.vue?vue&type=style&index=0&id=84052530&prod&lang=scss\nvar render_file_servervue_type_style_index_0_id_84052530_prod_lang_scss = __webpack_require__(7887);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-server.vue?vue&type=style&index=0&id=84052530&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-file-server.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar render_file_server_component = (0,componentNormalizer/* default */.A)(\n  components_render_file_servervue_type_script_lang_js,\n  render_file_servervue_type_template_id_84052530_render,\n  render_file_servervue_type_template_id_84052530_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const render_file_server = (render_file_server_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-source-file.vue?vue&type=script&lang=js\n\n\n\n// 文件类型\nconst FILE_TYPE_SERVER = 1;\n// const FILE_TYPE_LOCAL = 2\n// const FILE_TYPE_SOURCE = 3\n/* harmony default export */ const render_source_filevue_type_script_lang_js = ({\n  components: {\n    CollapseItem: collapse_item,\n    RenderFilePath: render_file_path,\n    RenderFileServer: render_file_server\n  },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    account: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      activeResult: [],\n      serverFileList: []\n    };\n  },\n  computed: {\n    isShowServerFile() {\n      return this.serverFileList.length > 0;\n    }\n  },\n  watch: {\n    data: {\n      handler(val) {\n        val.forEach(fileItem => {\n          if (fileItem.fileType === FILE_TYPE_SERVER) {\n            this.serverFileList.push(fileItem);\n          }\n        });\n        if (this.serverFileList.length > 0) {\n          this.activeResult = ['server'];\n        }\n      },\n      immediate: true\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-source-file.vue?vue&type=script&lang=js\n /* harmony default export */ const components_render_source_filevue_type_script_lang_js = (render_source_filevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/render-source-file.vue?vue&type=style&index=0&id=f2318f8a&prod&lang=scss\nvar render_source_filevue_type_style_index_0_id_f2318f8a_prod_lang_scss = __webpack_require__(5611);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-source-file.vue?vue&type=style&index=0&id=f2318f8a&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/render-source-file.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar render_source_file_component = (0,componentNormalizer/* default */.A)(\n  components_render_source_filevue_type_script_lang_js,\n  render_source_filevue_type_template_id_f2318f8a_render,\n  render_source_filevue_type_template_id_f2318f8a_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const render_source_file = (render_source_file_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/distro-file.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const distro_filevue_type_script_lang_js = ({\n  name: '',\n  components: {\n    RenderSourceFile: render_source_file,\n    DetailItem: item\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    variable: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      stepInfo: {}\n    };\n  },\n  computed: {\n    transferModeMap() {\n      return {\n        1: this.$t('environment.严谨模式'),\n        2: this.$t('environment.强制模式'),\n        3: this.$t('environment.保险模式')\n      };\n    }\n  },\n  created() {\n    this.stepInfo = Object.freeze(this.data.fileStepInfo);\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/distro-file.vue?vue&type=script&lang=js\n /* harmony default export */ const task_step_view_distro_filevue_type_script_lang_js = (distro_filevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/distro-file.vue?vue&type=style&index=0&id=b2dbe558&prod&lang=scss&scoped=true\nvar distro_filevue_type_style_index_0_id_b2dbe558_prod_lang_scss_scoped_true = __webpack_require__(8490);\n;// CONCATENATED MODULE: ./src/components/task-step-view/distro-file.vue?vue&type=style&index=0&id=b2dbe558&prod&lang=scss&scoped=true\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/distro-file.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar distro_file_component = (0,componentNormalizer/* default */.A)(\n  task_step_view_distro_filevue_type_script_lang_js,\n  distro_filevue_type_template_id_b2dbe558_scoped_true_render,\n  distro_filevue_type_template_id_b2dbe558_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"b2dbe558\",\n  null\n  \n)\n\n/* harmony default export */ const distro_file = (distro_file_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/exec-script.vue?vue&type=template&id=4f3a0df0\nvar exec_scriptvue_type_template_id_4f3a0df0_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    staticClass: \"exec-script-view\",\n    class: {\n      loading: _vm.isLoading\n    }\n  }, [_c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.脚本内容：\"),\n      layout: \"vertical\"\n    }\n  }, [_c(\"ace-editor\", {\n    attrs: {\n      lang: _vm.language,\n      options: _vm.languageOption,\n      readonly: \"\",\n      value: _vm.stepInfo.scriptContent\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", [_c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.脚本参数：\")\n    }\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.stepInfo.scriptParam || \"--\") + \"\\n        \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.超时时长：\")\n    }\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.stepInfo.scriptTimeout) + \"（s）\\n        \")]), _vm._v(\" \"), _c(\"detail-item\", {\n    attrs: {\n      label: _vm.$t(\"environment.执行账号：\")\n    }\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.stepInfo.account.name) + \"\\n        \")])], 1), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar exec_scriptvue_type_template_id_4f3a0df0_staticRenderFns = [];\nexec_scriptvue_type_template_id_4f3a0df0_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/exec-script.vue?vue&type=template&id=4f3a0df0\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/ace-editor/index.vue?vue&type=template&id=52c76fa5\nvar ace_editorvue_type_template_id_52c76fa5_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    ref: \"aceEditor\",\n    staticClass: \"bkci-ace-editor\",\n    style: {\n      height: `${_vm.height}px`\n    }\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading,\n        opacity: 0.2\n      },\n      expression: \"{ isLoading: isLoading, opacity: 0.2 }\"\n    }],\n    ref: \"contentWrapper\",\n    staticClass: \"bkci-ace-content\",\n    class: {\n      readonly: _vm.readonly\n    },\n    style: _vm.boxStyle\n  }, [_c(\"div\", {\n    staticClass: \"bkci-ace-title\",\n    style: {\n      height: `${_vm.tabHeight}px`\n    }\n  }, _vm._l(_vm.tabList, function (val, key) {\n    return _c(\"div\", {\n      key: val,\n      staticClass: \"bkci-ace-mode-item\",\n      class: {\n        active: _vm.currentLang === key\n      }\n    }, [_vm._v(\"\\n                \" + _vm._s(key) + \"\\n            \")]);\n  }), 0), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bkci-ace-main\"\n  }, [_c(\"div\", {\n    staticClass: \"ace-edit-content\"\n  }, [_c(\"div\", {\n    style: _vm.editorStyle,\n    attrs: {\n      id: _vm.selfId\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"right-side-panel\"\n  }, [_vm._t(\"side\")], 2)])])]);\n};\nvar ace_editorvue_type_template_id_52c76fa5_staticRenderFns = [];\nace_editorvue_type_template_id_52c76fa5_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/ace-editor/index.vue?vue&type=template&id=52c76fa5\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ace.js\nvar ace = __webpack_require__(7516);\nvar ace_default = /*#__PURE__*/__webpack_require__.n(ace);\n// EXTERNAL MODULE: ../node_modules/js-base64/base64.mjs\nvar base64 = __webpack_require__(9975);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-sh.js\nvar mode_sh = __webpack_require__(4149);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/sh.js\nvar sh = __webpack_require__(3803);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-batchfile.js\nvar mode_batchfile = __webpack_require__(679);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/batchfile.js\nvar batchfile = __webpack_require__(6364);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-perl.js\nvar mode_perl = __webpack_require__(6092);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/perl.js\nvar perl = __webpack_require__(2673);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-python.js\nvar mode_python = __webpack_require__(7147);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/python.js\nvar python = __webpack_require__(7085);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-powershell.js\nvar mode_powershell = __webpack_require__(8988);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/powershell.js\nvar powershell = __webpack_require__(6645);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-sql.js\nvar mode_sql = __webpack_require__(8129);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/snippets/sql.js\nvar sql = __webpack_require__(3442);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/theme-monokai.js\nvar theme_monokai = __webpack_require__(8973);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ext-error_marker.js\nvar ext_error_marker = __webpack_require__(9248);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ext-language_tools.js\nvar ext_language_tools = __webpack_require__(9123);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ext-keybinding_menu.js\nvar ext_keybinding_menu = __webpack_require__(5379);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ext-elastic_tabstops_lite.js\nvar ext_elastic_tabstops_lite = __webpack_require__(9740);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/ace-editor/index.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst TAB_HEIGHT = 40;\nconst LANG_MAP = {\n  Shell: 'sh',\n  Bat: 'batchfile',\n  Perl: 'perl',\n  Python: 'python',\n  Powershell: 'powershell',\n  SQL: 'sql'\n};\nconst HTMLEncode = value => {\n  const temp = document.createElement('textarea');\n  temp.value = value;\n  return temp.value;\n};\n/* harmony default export */ const ace_editorvue_type_script_lang_js = ({\n  name: 'AceEditor',\n  inheritAttrs: false,\n  props: {\n    // 脚本内容\n    value: {\n      type: String\n    },\n    height: {\n      type: Number,\n      default: 480\n    },\n    // 只读模式\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    readonlyTips: {\n      type: String,\n      default: ''\n    },\n    // 当前的脚本语言\n    lang: {\n      type: String,\n      required: true\n    },\n    // 可支持切换的脚本类型（array：显示tab; string: 不显示tab）\n    options: {\n      type: [String, Array],\n      default: () => Object.keys(LANG_MAP)\n    }\n  },\n  data() {\n    return {\n      isLoading: false,\n      content: '',\n      currentLang: this.lang,\n      isFullScreen: false,\n      isShowHistoryPanel: false,\n      tabHeight: TAB_HEIGHT,\n      currentUser: {}\n    };\n  },\n  computed: {\n    /**\r\n     * @desc 脚本编辑器块的样式\r\n     * @returns {Object}\r\n     */\n    boxStyle() {\n      const style = {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      };\n      if (this.isFullScreen) {\n        style.position = 'fixed';\n        style.zIndex = 1000; // eslint-disable-line no-underscore-dangle\n        style.height = '100vh';\n      }\n      return style;\n    },\n    /**\r\n     * @desc 脚本输入区的样式\r\n     * @returns {Object}\r\n     */\n    editorStyle() {\n      return {\n        height: this.isFullScreen ? `calc(100vh - ${TAB_HEIGHT}px)` : `${this.height - TAB_HEIGHT}px`\n      };\n    },\n    /**\r\n     * @desc 显示类型显示列表\r\n     * @returns {Object}\r\n     */\n    tabList() {\n      return this.options.reduce((res, item) => {\n        if (Object.prototype.hasOwnProperty.call(LANG_MAP, item)) {\n          res[item] = LANG_MAP[item];\n        }\n        return res;\n      }, {});\n    },\n    /**\r\n     * @desc 脚本编辑器语言模式\r\n     * @returns {String}\r\n     */\n    mode() {\n      return `ace/mode/${LANG_MAP[this.currentLang]}`;\n    }\n  },\n  watch: {\n    lang(newLang) {\n      if (this.currentLang !== newLang) {\n        this.currentLang = newLang;\n        setTimeout(() => {\n          this.editor.getSession().setMode(this.mode);\n        });\n      }\n    },\n    readonly(readonly) {\n      this.editor.setReadOnly(readonly);\n    }\n  },\n  created() {\n    this.selfId = `ace_editor_${Math.floor(Math.random() * 1000)}_${Date.now()}`;\n    this.valueMemo = {};\n  },\n  beforeDestroy() {\n    this.handleExitFullScreen();\n    this.$store.commit('setScriptCheckError', null);\n  },\n  mounted() {\n    this.initEditor();\n    document.body.addEventListener('keyup', this.handleExitByESC);\n    this.$once('hook:beforeDestroy', () => {\n      document.body.removeEventListener('keyup', this.handleExitByESC);\n    });\n  },\n  methods: {\n    /**\r\n     * @desc 初始化脚本编辑器\r\n     */\n    initEditor() {\n      const editor = ace_default().edit(this.selfId);\n      editor.getSession().setMode(this.mode);\n      editor.setOptions({\n        fontSize: 13,\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true,\n        wrapBehavioursEnabled: true,\n        autoScrollEditorIntoView: true,\n        copyWithEmptySelection: true,\n        useElasticTabstops: true,\n        printMarginColumn: true,\n        printMargin: 80,\n        scrollPastEnd: 0.2\n      });\n      editor.setTheme('ace/theme/monokai');\n      editor.setShowPrintMargin(false);\n      editor.$blockScrolling = Infinity;\n      editor.setReadOnly(this.readonly);\n      editor.on('change', () => {\n        this.content = editor.getValue();\n        const content = base64/* Base64 */.o4.encode(this.content);\n        this.editor.getSession().setAnnotations([]);\n        this.$emit('input', content);\n        this.$emit('change', content);\n      });\n      editor.on('paste', event => {\n        event.text = HTMLEncode(event.text);\n      });\n      // 先保存 editor 在设置 value\n      this.editor = editor;\n      if (this.value) {\n        this.editor.getSession().setAnnotations([]);\n        // 只读模式没有默认值，直接使用输入值\n        if (this.readonly) {\n          this.editor.setValue(this.value);\n          this.editor.clearSelection();\n        }\n      }\n      this.$once('hook:beforeDestroy', () => {\n        editor.destroy();\n        editor.container.remove();\n      });\n      const $handler = document.querySelector(`#${this.selfId}`);\n      $handler.addEventListener('keydown', this.handleReadonlyWarning);\n      this.$once('hook:beforeDestroy', () => {\n        $handler.removeEventListener('keydown', this.handleReadonlyWarning);\n      });\n    },\n    /**\r\n     * @desc 外部调用\r\n     */\n    resize() {\n      this.$nextTick(() => {\n        this.editor.resize();\n      });\n    },\n    /**\r\n     * @desc 外部调用-设置脚本编辑器内容\r\n     * @param {String} 经过 base64 编码的脚本内容\r\n     */\n    setValue(value) {\n      this.editor.setValue(base64/* Base64 */.o4.decode(value));\n      this.editor.clearSelection();\n      this.editor.scrollToLine(Infinity);\n    },\n    /**\r\n     * @desc 外部调用-重置脚本编辑内容使用默认脚本\r\n     */\n    resetValue() {\n      this.editor.setValue(this.defaultScriptMap[this.lang]);\n      this.editor.clearSelection();\n      this.editor.scrollToLine(Infinity);\n    },\n    /**\r\n     * @desc readonly模式下键盘操作提示\r\n     * @param {Object} event keydown事件\r\n     */\n    handleReadonlyWarning(event) {\n      if (!this.readonly) {\n        return;\n      }\n      const {\n        target\n      } = event;\n      // 脚本编辑器获得焦点的状态\n      if (target.type !== 'textarea') {\n        return;\n      }\n      if (['Escape', 'Meta', 'ShiftLeft', 'ShiftRight', 'ControlLeft', 'ControlRight', 'AltLeft', 'AltRight'].includes(event.code)) {\n        return;\n      }\n      if ((event.metaKey || event.ctrlKey) && !['KeyV', 'KeyX'].includes(event.code)) {\n        return;\n      }\n      this.$bkMessage({\n        theme: 'warning',\n        message: this.$t('environment.只读模式不支持编辑')\n      });\n    },\n    /**\r\n     * @desc 切换编辑的全屏状态\r\n     *\r\n     * 全屏时需要把dom移动到body下面\r\n     */\n    handleFullScreen() {\n      this.isFullScreen = true;\n      this.messageInfo(this.$t('按 Esc 即可退出全屏模式'));\n      document.body.appendChild(this.$refs.contentWrapper);\n      this.$nextTick(() => {\n        this.editor.resize();\n      });\n    },\n    /**\r\n     * @desc 退出编辑的全屏状态\r\n     *\r\n     * 退出全屏时需要要把dom还原到原有位置\r\n     */\n    handleExitFullScreen() {\n      this.isFullScreen = false;\n      this.$refs.aceEditor.appendChild(this.$refs.contentWrapper);\n      this.$nextTick(() => {\n        this.editor.resize();\n      });\n    },\n    /**\r\n     * @desc esc快捷键退出编辑的全屏状态\r\n     */\n    handleExitByESC(event) {\n      if (event.code !== 'Escape' || !this.isFullScreen) {\n        return;\n      }\n      this.handleExitFullScreen();\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/ace-editor/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_ace_editorvue_type_script_lang_js = (ace_editorvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/components/ace-editor/index.vue?vue&type=style&index=0&id=52c76fa5&prod&lang=scss\nvar ace_editorvue_type_style_index_0_id_52c76fa5_prod_lang_scss = __webpack_require__(7948);\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/ace-editor/index.vue?vue&type=style&index=0&id=52c76fa5&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/components/ace-editor/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar ace_editor_component = (0,componentNormalizer/* default */.A)(\n  components_ace_editorvue_type_script_lang_js,\n  ace_editorvue_type_template_id_52c76fa5_render,\n  ace_editorvue_type_template_id_52c76fa5_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ace_editor = (ace_editor_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/exec-script.vue?vue&type=script&lang=js\n\n\nconst formatScriptTypeValue = value => {\n  const key = String(value).toLowerCase();\n  const typeMap = {\n    shell: 1,\n    bat: 2,\n    perl: 3,\n    python: 4,\n    powershell: 5,\n    sql: 6,\n    1: 'Shell',\n    2: 'Bat',\n    3: 'Perl',\n    4: 'Python',\n    5: 'Powershell',\n    6: 'SQL'\n  };\n  return typeMap[key] || key;\n};\n/* harmony default export */ const exec_scriptvue_type_script_lang_js = ({\n  name: '',\n  components: {\n    AceEditor: ace_editor,\n    DetailItem: item\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      stepInfo: {},\n      executeAccountText: '',\n      language: '',\n      scriptName: '',\n      scriptInfo: {},\n      isShowScriptSource: false,\n      requestQueue: [],\n      isShowDiff: false\n    };\n  },\n  computed: {\n    isLoading() {\n      return this.requestQueue.length > 0;\n    }\n  },\n  created() {\n    this.stepInfo = Object.freeze(this.data.scriptStepInfo);\n    this.language = formatScriptTypeValue(this.stepInfo.scriptLanguage);\n    this.languageOption = [this.language];\n    if (this.stepInfo.scriptVersionId) {\n      this.fetchScriptDetail();\n    }\n  },\n  methods: {\n    /**\r\n     * @desc 更新脚本版本获取版本详情\r\n     */\n    fetchScriptDetail() {},\n    /**\r\n     * @desc 脚本版本对比\r\n     */\n    handleShowScriptVersionDiff() {\n      this.isShowDiff = true;\n    },\n    handleDiffClose() {\n      this.isShowDiff = false;\n    },\n    /**\r\n     * @desc 编辑作业模板，更新步骤引用的脚本版本\r\n     */\n    handleUpdateScript() {\n      this.$router.push({\n        name: 'templateEdit',\n        params: {\n          id: this.$route.params.id,\n          stepId: this.data.id\n        },\n        query: {\n          from: 'templateDetail'\n        }\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/exec-script.vue?vue&type=script&lang=js\n /* harmony default export */ const task_step_view_exec_scriptvue_type_script_lang_js = (exec_scriptvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/exec-script.vue?vue&type=style&index=0&id=4f3a0df0&prod&lang=scss\nvar exec_scriptvue_type_style_index_0_id_4f3a0df0_prod_lang_scss = __webpack_require__(6549);\n;// CONCATENATED MODULE: ./src/components/task-step-view/exec-script.vue?vue&type=style&index=0&id=4f3a0df0&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/exec-script.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar exec_script_component = (0,componentNormalizer/* default */.A)(\n  task_step_view_exec_scriptvue_type_script_lang_js,\n  exec_scriptvue_type_template_id_4f3a0df0_render,\n  exec_scriptvue_type_template_id_4f3a0df0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const exec_script = (exec_script_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/index.vue?vue&type=script&lang=js\n\n\n\n\n/* harmony default export */ const task_step_viewvue_type_script_lang_js = ({\n  components: {\n    StepDistroFile: distro_file,\n    StepExecScript: exec_script,\n    DetailLayout: detail_layout,\n    DetailItem: item\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  computed: {\n    stepTypeText() {\n      const typeMap = {\n        1: this.$t('environment.执行脚本'),\n        2: this.$t('environment.分发文件')\n      };\n      return typeMap[this.data.type] || '';\n    },\n    stepCom() {\n      const taskStepMap = {\n        1: exec_script,\n        2: distro_file\n      };\n      if (!Object.prototype.hasOwnProperty.call(taskStepMap, this.data.type)) {\n        return 'div';\n      }\n      return taskStepMap[this.data.type];\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/task-step-view/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_task_step_viewvue_type_script_lang_js = (task_step_viewvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/task-step-view/index.vue?vue&type=style&index=0&id=4a3ee93c&prod&lang=scss&scoped=true\nvar task_step_viewvue_type_style_index_0_id_4a3ee93c_prod_lang_scss_scoped_true = __webpack_require__(8912);\n;// CONCATENATED MODULE: ./src/components/task-step-view/index.vue?vue&type=style&index=0&id=4a3ee93c&prod&lang=scss&scoped=true\n\n;// CONCATENATED MODULE: ./src/components/task-step-view/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar task_step_view_component = (0,componentNormalizer/* default */.A)(\n  components_task_step_viewvue_type_script_lang_js,\n  task_step_viewvue_type_template_id_4a3ee93c_scoped_true_render,\n  task_step_viewvue_type_template_id_4a3ee93c_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"4a3ee93c\",\n  null\n  \n)\n\n/* harmony default export */ const task_step_view = (task_step_view_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/execution-detail/step-detail-view.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const step_detail_viewvue_type_script_lang_js = ({\n  name: '',\n  components: {\n    TaskStepView: task_step_view\n  },\n  props: {\n    stepInstanceId: {\n      type: Number\n    },\n    jobInstanceId: {\n      type: Number\n    },\n    taskId: {\n      type: Number,\n      required: true\n    },\n    id: {\n      type: [Number, String]\n    }\n  },\n  data() {\n    return {\n      isLoading: true,\n      stepInfo: {}\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    }\n  },\n  created() {\n    this.fetchStep();\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('environment', ['getStepInstanceDetail']),\n    //  步骤详情\n    async fetchStep() {\n      this.isLoading = true;\n      try {\n        this.stepInfo = await this.getStepInstanceDetail({\n          projectId: this.projectId,\n          stepInstanceId: this.stepInstanceId,\n          jobInstanceId: this.jobInstanceId\n        });\n      } catch (err) {\n        console.error(err);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/execution-detail/step-detail-view.vue?vue&type=script&lang=js\n /* harmony default export */ const execution_detail_step_detail_viewvue_type_script_lang_js = (step_detail_viewvue_type_script_lang_js); \n;// CONCATENATED MODULE: ./src/views/execution-detail/step-detail-view.vue\n\n\n\n\n\n/* normalize component */\n;\nvar step_detail_view_component = (0,componentNormalizer/* default */.A)(\n  execution_detail_step_detail_viewvue_type_script_lang_js,\n  step_detail_viewvue_type_template_id_49793538_render,\n  step_detail_viewvue_type_template_id_49793538_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const step_detail_view = (step_detail_view_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/index.vue?vue&type=template&id=90092396\nvar executionInfovue_type_template_id_90092396_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    ref: \"infoBox\",\n    staticClass: \"step-execution-info-box\",\n    style: _vm.boxStyles\n  }, [_c(\"div\", {\n    staticClass: \"tab-container\"\n  }, [_c(\"div\", {\n    class: [\"tab-title\", _vm.ipStatus]\n  }, [_vm.ip ? _c(\"span\", {\n    staticClass: \"host-ip\"\n  }, [_vm._v(_vm._s(_vm.bkCloudId) + \":\" + _vm._s(_vm.ip))]) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"split-line\"\n  }), _vm._v(\" \"), !_vm.isFile ? _c(\"div\", {\n    staticClass: \"tab-item\",\n    class: {\n      active: _vm.activePanel === \"scriptLog\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleTogglePanel(\"scriptLog\");\n      }\n    }\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.$t(\"environment.执行日志\")) + \"\\n        \")]) : _vm._e(), _vm._v(\" \"), _vm.isFile ? [_c(\"div\", {\n    staticClass: \"tab-item\",\n    class: {\n      active: _vm.activePanel === \"download\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleTogglePanel(\"download\");\n      }\n    }\n  }, [_vm._v(\"\\n                \" + _vm._s(_vm.$t(\"environment.下载信息\")) + \"\\n            \")])] : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"extend-box\"\n  }, [_vm.activePanel === \"scriptLog\" ? _c(\"div\", {\n    staticClass: \"extend-item\",\n    on: {\n      mouseenter: _vm.handleShowSetFont,\n      mouseleave: _vm.handleHideSetFont\n    }\n  }, [_vm._v(\"Aa\")]) : _vm._e(), _vm._v(\" \"), !_vm.isFullscreen ? _c(\"div\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.$t(\"environment.全屏\"),\n      expression: \"$t('environment.全屏')\"\n    }],\n    staticClass: \"extend-item\",\n    on: {\n      click: _vm.handleFullscreen\n    }\n  }, [_c(\"icon\", {\n    attrs: {\n      name: \"full-screen\",\n      size: \"16\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.isFullscreen ? _c(\"div\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.$t(\"environment.还原\"),\n      expression: \"$t('environment.还原')\"\n    }],\n    staticClass: \"extend-item\",\n    on: {\n      click: _vm.handleExitFullscreen\n    }\n  }, [_c(\"icon\", {\n    attrs: {\n      name: \"un-full-screen\",\n      size: \"16\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.activePanel === \"scriptLog\" ? _c(\"div\", {\n    staticClass: \"extend-item\",\n    staticStyle: {\n      \"padding-left\": \"16px\",\n      \"border-left\": \"1px solid #262626\"\n    }\n  }, [_c(\"bk-switcher\", {\n    attrs: {\n      value: _vm.isScriptLogLineFeed,\n      theme: \"primary\",\n      size: \"small\"\n    },\n    on: {\n      change: _vm.handleScriptLogLineFeedChange\n    }\n  }), _vm._v(\" \"), _c(\"span\", {\n    staticStyle: {\n      \"padding-left\": \"7px\",\n      \"font-size\": \"12px\",\n      color: \"#979ba5\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.自动换行\")))])], 1) : _vm._e()])], 2), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"tab-content-wrapper\",\n    style: _vm.contentStyles\n  }, [_c(_vm.renderCom, _vm._g(_vm._b({\n    key: _vm.activePanel,\n    ref: \"view\",\n    tag: \"component\",\n    attrs: {\n      ip: _vm.ip,\n      \"step-instance-id\": _vm.stepInstanceId,\n      \"font-size\": _vm.fontSize,\n      mode: _vm.activePanel,\n      \"host-id\": _vm.hostId,\n      finished: _vm.finished,\n      \"line-feed\": _vm.isScriptLogLineFeed\n    }\n  }, \"component\", _vm.$attrs, false), _vm.$listeners))], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"font-setting\",\n    class: {\n      active: _vm.isFontSet\n    },\n    on: {\n      mouseenter: _vm.handleShowSetFont,\n      mouseleave: _vm.handleHideSetFont\n    }\n  }, [_c(\"div\", {\n    staticClass: \"font-setting-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"font-item\",\n    class: {\n      active: _vm.fontSize === 12\n    },\n    staticStyle: {\n      \"font-size\": \"12px\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleFontChange(12);\n      }\n    }\n  }, [_vm._v(\"Aa\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"line\"\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"font-item\",\n    class: {\n      active: _vm.fontSize === 13\n    },\n    staticStyle: {\n      \"font-size\": \"13px\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleFontChange(13);\n      }\n    }\n  }, [_vm._v(\"Aa\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"line\"\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"font-item\",\n    class: {\n      active: _vm.fontSize === 14\n    },\n    staticStyle: {\n      \"font-size\": \"14px\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleFontChange(14);\n      }\n    }\n  }, [_vm._v(\"Aa\")])])])]);\n};\nvar executionInfovue_type_template_id_90092396_staticRenderFns = [];\nexecutionInfovue_type_template_id_90092396_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/index.vue?vue&type=template&id=90092396\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/script-log/index.vue?vue&type=template&id=0bb1ff54\nvar script_logvue_type_template_id_0bb1ff54_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading,\n        opacity: 0.1\n      },\n      expression: \"{\\n        isLoading,\\n        opacity: .1\\n    }\"\n    }],\n    staticClass: \"step-execute-script-log\"\n  }, [_c(\"div\", {\n    staticClass: \"log-wraper\"\n  }, [_vm._m(0)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"log-action-box\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.backTopTips,\n      expression: \"backTopTips\"\n    }],\n    staticClass: \"action-item\",\n    on: {\n      click: _vm.handleScrollTop\n    }\n  }, [_c(\"icon\", {\n    attrs: {\n      name: \"up-to-top\",\n      size: \"20\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.backBottomTips,\n      expression: \"backBottomTips\"\n    }],\n    staticClass: \"action-item action-bottom\",\n    on: {\n      click: _vm.handleScrollBottom\n    }\n  }, [_c(\"icon\", {\n    attrs: {\n      name: \"up-to-top\",\n      size: \"20\"\n    }\n  })], 1)])]);\n};\nvar script_logvue_type_template_id_0bb1ff54_staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticStyle: {\n      height: \"100%\"\n    },\n    attrs: {\n      id: \"executeScriptLog\"\n    }\n  });\n}];\nscript_logvue_type_template_id_0bb1ff54_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/script-log/index.vue?vue&type=template&id=0bb1ff54\n\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/mode-text.js\nvar mode_text = __webpack_require__(1922);\n// EXTERNAL MODULE: ../node_modules/ace-builds/src-noconflict/ext-searchbox.js\nvar ext_searchbox = __webpack_require__(7340);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/script-log/index.vue?vue&type=script&lang=js\n\n\n\n\n\n/* harmony default export */ const script_logvue_type_script_lang_js = ({\n  // mixins: [\n  //     mixins\n  // ],\n  props: {\n    name: String,\n    hostId: Number,\n    finished: Boolean,\n    ip: {\n      type: String\n    },\n    logFilter: {\n      type: String,\n      default: ''\n    },\n    fontSize: {\n      type: Number,\n      default: 12\n    },\n    lineFeed: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      // 日志loading，切换主机的时候才显示\n      isLoading: false,\n      // 自动动滚动到底部\n      isWillAutoScroll: true\n    };\n  },\n  computed: {\n    jobInstanceId() {\n      return this.$route.query.jobInstanceId;\n    },\n    stepInstanceId() {\n      return this.$route.query.stepInstanceId;\n    },\n    projectId() {\n      return this.$route.params.projectId;\n    }\n  },\n  watch: {\n    /**\r\n     * @desc 字体大小改变时虚拟滚动重新计算\r\n     */\n    fontSize: {\n      handler(fontSize) {\n        this.editor.setFontSize(fontSize);\n      }\n    },\n    lineFeed: {\n      handler(lineFeed) {\n        setTimeout(() => {\n          this.editor && this.editor.setOptions({\n            wrap: lineFeed ? 'free' : 'none'\n          });\n        });\n      },\n      immediate: true\n    },\n    /**\r\n     * @desc 查看的日志目标改变，重新获取日志\r\n     *\r\n     * 日志目标改变，重置页面操作的数据\r\n     */\n    hostId: {\n      handler(val) {\n        if (val) {\n          this.autoScrollTimeout();\n          this.fetchLogContent();\n        } else {\n          this.editor && this.editor.setValue('');\n          this.editor && this.editor.clearSelection();\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.backTopTips = {\n      content: this.$t('environment.回到顶部'),\n      placements: ['top'],\n      theme: 'light'\n    };\n    this.backBottomTips = {\n      content: this.$t('environment.前往底部'),\n      placements: ['top'],\n      theme: 'light'\n    };\n  },\n  mounted() {\n    this.initEditor();\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('environment', ['getJobInstanceLogs']),\n    /**\r\n     * @desc 获取脚本日志\r\n     */\n    fetchLogContent() {\n      if (!this.ip) {\n        this.isLoading = false;\n        if (this.editor) {\n          this.editor.setValue('');\n          this.editor.clearSelection();\n        }\n      }\n      if (this.finished) {\n        this.isLoading = true;\n      }\n      this.getJobInstanceLogs({\n        projectId: this.projectId,\n        jobInstanceId: this.jobInstanceId,\n        stepInstanceId: this.stepInstanceId,\n        hostIdList: [this.hostId]\n      }).then(res => {\n        const logContent = res.scriptTaskLogs[0].logContent || '';\n        this.editor.getSession().setValue(logContent);\n        this.editor.scrollToLine(Infinity);\n        if (!this.finished) {\n          setTimeout(() => {\n            this.fetchLogContent();\n          }, 5000);\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    initEditor() {\n      const editor = ace_default().edit('executeScriptLog');\n      // editor.getSession().setMode('ace/mode/text')\n      editor.setTheme('ace/theme/monokai');\n      editor.setOptions({\n        fontSize: this.fontSize,\n        wrapBehavioursEnabled: true,\n        copyWithEmptySelection: true,\n        useElasticTabstops: true,\n        printMarginColumn: false,\n        printMargin: 80,\n        showPrintMargin: false,\n        scrollPastEnd: 0.05,\n        fixedWidthGutter: true\n      });\n      editor.$blockScrolling = Infinity;\n      editor.setReadOnly(true);\n      const editorSession = editor.getSession();\n      // 自动换行时不添加缩进\n      editorSession.$indentedSoftWrap = false;\n      editorSession.setUseWrapMode(true);\n      editorSession.on('changeScrollTop', scrollTop => {\n        const {\n          height,\n          maxHeight\n        } = editor.renderer.layerConfig;\n        this.isWillAutoScroll = height + scrollTop + 30 >= maxHeight;\n      });\n      this.editor = editor;\n      this.$once('hook:beforeDestroy', () => {\n        editor.destroy();\n        editor.container.remove();\n      });\n    },\n    /**\r\n     * @desc 外部调用\r\n     */\n    resize() {\n      this.$nextTick(() => {\n        this.editor.resize();\n      });\n    },\n    /**\r\n     * @desc 日志滚动定时器\r\n     */\n    autoScrollTimeout() {\n      if (this.isWillAutoScroll && !this.isLoading) {\n        this.handleScrollBottom();\n      }\n      setTimeout(() => {\n        this.autoScrollTimer = this.autoScrollTimeout();\n      }, 1000);\n    },\n    /**\r\n     * @desc 回到日志顶部\r\n     */\n    handleScrollTop() {\n      this.editor.scrollToLine(0);\n    },\n    /**\r\n     * @desc 回到日志底部\r\n     */\n    handleScrollBottom() {\n      this.isWillAutoScroll = true;\n      this.editor.scrollToLine(Infinity);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/executionInfo/script-log/index.vue?vue&type=script&lang=js\n /* harmony default export */ const executionInfo_script_logvue_type_script_lang_js = (script_logvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/script-log/index.vue?vue&type=style&index=0&id=0bb1ff54&prod&lang=scss\nvar script_logvue_type_style_index_0_id_0bb1ff54_prod_lang_scss = __webpack_require__(7719);\n;// CONCATENATED MODULE: ./src/components/executionInfo/script-log/index.vue?vue&type=style&index=0&id=0bb1ff54&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/script-log/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar script_log_component = (0,componentNormalizer/* default */.A)(\n  executionInfo_script_logvue_type_script_lang_js,\n  script_logvue_type_template_id_0bb1ff54_render,\n  script_logvue_type_template_id_0bb1ff54_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const script_log = (script_log_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/file-log/index.vue?vue&type=template&id=0240fb3e\nvar file_logvue_type_template_id_0240fb3e_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading,\n        opacity: 0.1\n      },\n      expression: \"{ isLoading, opacity: .1 }\"\n    }],\n    ref: \"contentBox\",\n    staticClass: \"file-download-log\",\n    on: {\n      scroll: _vm.handleScroll\n    }\n  }, [_c(\"div\", _vm._l(_vm.renderList, function (item, index) {\n    return _c(\"file-item\", {\n      key: index,\n      attrs: {\n        index: index,\n        \"open-memo\": _vm.openMemo,\n        data: item,\n        \"render-content-map\": _vm.renderContentMap\n      },\n      on: {\n        \"on-toggle\": _vm.handleToggle\n      }\n    });\n  }), 1)]);\n};\nvar file_logvue_type_template_id_0240fb3e_staticRenderFns = [];\nfile_logvue_type_template_id_0240fb3e_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/index.vue?vue&type=template&id=0240fb3e\n\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(7716);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/file-log/log-item.vue?vue&type=script&lang=js\nconst statusMap = {\n  1: 'waiting',\n  2: 'uploading',\n  3: 'downloading',\n  4: 'finished',\n  5: 'failed'\n};\n/* harmony default export */ const log_itemvue_type_script_lang_js = ({\n  functional: true,\n  render(h, context) {\n    const {\n      props,\n      listeners,\n      parent\n    } = context;\n    const {\n      data,\n      index,\n      openMemo,\n      renderContentMap,\n      isContentLoading\n    } = props;\n    const isContentOpen = Boolean(openMemo[index]);\n    const classes = {\n      'step-detail-file-log-block': true,\n      [statusMap[data.status]]: true,\n      toggle: isContentOpen\n    };\n    // 异步获取日志的loading状态\n    const logContent = renderContentMap[index] || data.logContent;\n    if (isContentLoading && !logContent) {\n      classes['content-loading'] = true;\n    }\n    const renderProgress = () => {\n      const wholeProgress = '*******************************************************************************************';\n      const process = parseInt(data.progress, 10) / 100;\n      return wholeProgress.slice(0, Math.floor(process * wholeProgress.length) || 1);\n    };\n    const handleToggle = () => {\n      listeners['on-toggle'](index, !isContentOpen);\n    };\n    const statusDescMap = status => {\n      const descMap = {\n        1: parent.$t('environment.等待开始'),\n        2: parent.$t('environment.上传中'),\n        3: parent.$t('environment.下载中'),\n        4: parent.$t('environment.成功'),\n        5: parent.$t('environment.失败')\n      };\n      return descMap[status];\n    };\n    return h(\"div\", {\n      \"class\": classes\n    }, [h(\"div\", {\n      \"class\": \"log-header\",\n      on: {\n        \"click\": handleToggle\n      }\n    }, [h(\"icon\", {\n      attrs: {\n        name: \"down-shape\",\n        size: \"14\"\n      },\n      \"class\": \"log-toggle\"\n    }), h(\"span\", [parent.$t('environment.文件名'), \"\\uFF1A\", data.srcPath]), h(\"span\", [parent.$t('environment.文件大小'), \"\\uFF1A\", data.size]), h(\"span\", [parent.$t('environment.状态'), \"\\uFF1A\", h(\"span\", {\n      \"class\": \"status\"\n    }, [statusDescMap(data.status)])]), h(\"span\", [parent.$t('environment.源服务器 IP'), \"\\uFF1A\", data.srcHost.ip]), h(\"span\", [parent.$t('environment.速率'), \"\\uFF1A\", data.speed]), h(\"span\", [parent.$t('environment.进度'), \"\\uFF1A\", data.process])]), isContentOpen && h(\"div\", {\n      \"class\": \"log-body\"\n    }, [h(\"div\", {\n      \"class\": \"log-content\"\n    }, [logContent]), h(\"div\", {\n      \"class\": \"log-process\"\n    }, [renderProgress()])])]);\n  }\n});\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/log-item.vue?vue&type=script&lang=js\n /* harmony default export */ const file_log_log_itemvue_type_script_lang_js = (log_itemvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/file-log/log-item.vue?vue&type=style&index=0&id=950f7b7a&prod&lang=scss\nvar log_itemvue_type_style_index_0_id_950f7b7a_prod_lang_scss = __webpack_require__(8161);\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/log-item.vue?vue&type=style&index=0&id=950f7b7a&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/log-item.vue\nvar log_item_render, log_item_staticRenderFns\n;\n\n;\n\n\n/* normalize component */\n\nvar log_item_component = (0,componentNormalizer/* default */.A)(\n  file_log_log_itemvue_type_script_lang_js,\n  log_item_render,\n  log_item_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const log_item = (log_item_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/file-log/index.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const file_logvue_type_script_lang_js = ({\n  name: '',\n  components: {\n    FileItem: log_item\n  },\n  // mixins: [\n  //     mixins\n  // ],\n  props: {\n    name: String,\n    hostId: Number,\n    finished: Boolean,\n    ip: {\n      type: String\n    },\n    mode: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      // 基础信息loading\n      isLoading: false,\n      // 异步获取日志内容loading\n      // 文件基础信息列表\n      fileTaskLogs: [],\n      // 前端分页页码\n      page: 0,\n      pageSize: 10,\n      // 被展开的日志记录\n      openMemo: {},\n      // 被展开的文件具体日志内容\n      renderContentMap: {},\n      isMemoChange: false\n    };\n  },\n  computed: {\n    renderList() {\n      let uploadLogs = [];\n      // let downloadLogs = []\n      this.fileTaskLogs.forEach(log => {\n        uploadLogs = log.fileLogList;\n        // const mode = log.fileLogList[0].mode\n        // if (mode === 0) {\n        //     uploadLogs = log.fileLogList\n        // } else if (mode === 1) {\n        //     downloadLogs = log.fileLogList\n        // }\n      });\n      // return this.mode === 'upload' ? uploadLogs : downloadLogs\n      return uploadLogs;\n    },\n    jobInstanceId() {\n      return this.$route.query.jobInstanceId;\n    },\n    stepInstanceId() {\n      return this.$route.query.stepInstanceId;\n    },\n    projectId() {\n      return this.$route.params.projectId;\n    }\n  },\n  watch: {\n    /**\r\n     * @desc 查看的日志目标改变，重新获取日志\r\n     * 展开第一个文件的日志,其他收起\r\n     */\n    hostId: {\n      handler(val) {\n        if (!val) {\n          this.fileTaskLogs = [];\n          return;\n        }\n        this.isLoading = true;\n        this.page = 0;\n        this.openMemo = {\n          0: true\n        };\n        this.fetchData();\n        if (this.$refs.contentBox) {\n          this.$refs.contentBox.scrollTop = 0;\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    // 前端分页加载器，控制触发频率\n    this.timer = null;\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleScroll);\n    this.$once('hook:beforeDestroy', () => {\n      window.removeEventListener('resize', this.handleScroll);\n    });\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('environment', ['getJobInstanceLogs']),\n    /**\r\n     * @desc 获取文件日志\r\n     *\r\n     * 默认展开第一个文件的日志\r\n     * 如果文件信息里面不包含日志内容，需要异步获取文件内容\r\n     */\n    fetchData() {\n      if (!this.hostId) {\n        this.isLoading = false;\n        this.fileTaskLogs = [];\n      }\n      this.getJobInstanceLogs({\n        projectId: this.projectId,\n        jobInstanceId: this.jobInstanceId,\n        stepInstanceId: this.stepInstanceId,\n        hostIdList: [this.hostId]\n      }).then(res => {\n        this.fileTaskLogs = res.fileTaskLogs || [];\n        if (this.fileTaskLogs.length > 0 && !this.isMemoChange) {\n          this.openMemo = {\n            0: true\n          };\n          this.isMemoChange = true;\n        }\n        if (!this.finished) {\n          setTimeout(() => {\n            this.fetchData();\n          }, 5000);\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    /**\r\n     * @desc 外部调用\r\n     */\n    resize() {\n      this.handleScroll();\n    },\n    /**\r\n     * @desc 滚动分页加载\r\n     */\n    handleScroll: (0,util/* throttle */.nF)(function () {\n      if (!this.$refs.load) {\n        return;\n      }\n      const windowHeight = window.innerHeight;\n      const {\n        top\n      } = this.$refs.load.getBoundingClientRect();\n      if (windowHeight + 50 > top && !this.timer) {\n        // 本地日志加载器\n        this.timer = setTimeout(() => {\n          this.page += 1;\n          this.timer = 0;\n        }, 350);\n      }\n    }, 80),\n    /**\r\n     * @desc 文件日志展开收起\r\n     */\n    handleToggle(index, toggle) {\n      const openMemo = {\n        ...this.openMemo\n      };\n      openMemo[index] = toggle;\n      this.openMemo = Object.freeze(openMemo);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/index.vue?vue&type=script&lang=js\n /* harmony default export */ const executionInfo_file_logvue_type_script_lang_js = (file_logvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/file-log/index.vue?vue&type=style&index=0&id=0240fb3e&prod&lang=scss\nvar file_logvue_type_style_index_0_id_0240fb3e_prod_lang_scss = __webpack_require__(4796);\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/index.vue?vue&type=style&index=0&id=0240fb3e&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/file-log/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar file_log_component = (0,componentNormalizer/* default */.A)(\n  executionInfo_file_logvue_type_script_lang_js,\n  file_logvue_type_template_id_0240fb3e_render,\n  file_logvue_type_template_id_0240fb3e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const file_log = (file_log_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/index.vue?vue&type=script&lang=js\n\n\nconst STEP_FONT_SIZE_KEY = 'step_execution_font_size';\nconst SCRIPT_LOG_AUTO_LINE_FEED = 'script_log_line_feed';\n/* harmony default export */ const executionInfovue_type_script_lang_js = ({\n  name: '',\n  inheritAttrs: false,\n  props: {\n    ip: String,\n    bkCloudId: Number,\n    hostId: Number,\n    ipStatus: String,\n    finished: Boolean\n  },\n  data() {\n    let fontSize = parseInt(localStorage.getItem(STEP_FONT_SIZE_KEY), 10);\n    if (!fontSize || fontSize < 12) {\n      fontSize = 12;\n    } else if (fontSize > 14) {\n      fontSize = 14;\n    }\n    return {\n      activePanel: '',\n      isFullscreen: false,\n      isFontSet: false,\n      fontSize,\n      isScriptLogLineFeed: Boolean(localStorage.getItem(SCRIPT_LOG_AUTO_LINE_FEED))\n    };\n  },\n  computed: {\n    jobInstanceType() {\n      // 脚本执行 - SCRIPT\n      // 文件分发 - FILE\n      return this.$route.query.jobInstanceType;\n    },\n    isFile() {\n      return this.jobInstanceType === 'FILE';\n    },\n    renderCom() {\n      const comMap = {\n        scriptLog: script_log,\n        download: file_log,\n        upload: file_log\n      };\n      return comMap[this.activePanel];\n    },\n    boxStyles() {\n      if (this.isFullscreen) {\n        return {\n          position: 'fixed',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          zIndex: window.__bk_zIndex_manager.nextZIndex() // eslint-disable-line no-underscore-dangle\n        };\n      }\n      return {};\n    },\n    contentStyles() {\n      const lineHeightMap = {\n        12: 20,\n        13: 21,\n        14: 22\n      };\n      return {\n        fontSize: `${this.fontSize}px`,\n        lineHeight: `${lineHeightMap[this.fontSize]}px`\n      };\n    }\n  },\n  watch: {\n    isFile: {\n      handler(isFile) {\n        this.activePanel = isFile ? 'download' : 'scriptLog';\n      },\n      immediate: true\n    }\n  },\n  beforeDestroy() {\n    this.handleExitFullscreen();\n  },\n  mounted() {\n    window.addEventListener('keyup', this.handleExitByESC);\n    this.$once('hook:beforeDestroy', () => {\n      window.removeEventListener('keyup', this.handleExitByESC);\n    });\n  },\n  methods: {\n    /**\r\n     * @desc 切换面板\r\n     * @param {String} panel 选中的面板\r\n     */\n    handleTogglePanel(panel) {\n      this.activePanel = panel;\n    },\n    /**\r\n     * @desc 下载主机日志\r\n     */\n    handleDownload() {\n      // TaskExecuteService.fetchStepExecutionLogFile({\n      //     id: this.stepInstanceId,\n      //     ip: this.host.ip\n      // }).then(() => {\n      //     this.$bkMessage({\n      //         theme: 'success',\n      //         message: this.$t('environment.导出日志操作成功')\n      //     })\n      // })\n    },\n    /**\r\n     * @desc 显示字体大小设置面板\r\n     */\n    handleShowSetFont() {\n      this.isFontSet = true;\n    },\n    /**\r\n     * @desc 隐藏字体大小设置面板\r\n     */\n    handleHideSetFont() {\n      this.isFontSet = false;\n    },\n    /**\r\n     * @desc 更新日志字体大小\r\n     */\n    handleFontChange(fontSize) {\n      this.fontSize = fontSize;\n      localStorage.setItem(STEP_FONT_SIZE_KEY, fontSize);\n    },\n    /**\r\n     * @desc 日志全屏\r\n     */\n    handleFullscreen() {\n      this.isFullscreen = true;\n      this.$bkMessage({\n        theme: 'primary',\n        message: this.$t('environment.按 Esc 即可退出全屏模式')\n      });\n      this.infoBoxParentNode = this.$refs.infoBox.parentNode;\n      document.body.appendChild(this.$refs.infoBox);\n      this.$refs.view && this.$refs.view.resize();\n    },\n    /**\r\n     * @desc 退出日志全屏\r\n     */\n    handleExitFullscreen(event) {\n      this.isFullscreen = false;\n      if (this.infoBoxParentNode) {\n        this.infoBoxParentNode.appendChild(this.$refs.infoBox);\n        this.infoBoxParentNode = null;\n      }\n      setTimeout(() => {\n        this.$refs.view && this.$refs.view.resize();\n      });\n    },\n    /**\r\n     * @desc esc键退出日志全屏\r\n     */\n    handleExitByESC(event) {\n      if (event.keyCode === 27) {\n        this.handleExitFullscreen();\n      }\n    },\n    /**\r\n     * @desc 脚本日志自动换行\r\n     * @param {Boolean} lineFeed\r\n     */\n    handleScriptLogLineFeedChange(lineFeed) {\n      this.isScriptLogLineFeed = lineFeed;\n      if (lineFeed) {\n        localStorage.setItem(SCRIPT_LOG_AUTO_LINE_FEED, true);\n      } else {\n        localStorage.removeItem(SCRIPT_LOG_AUTO_LINE_FEED);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/executionInfo/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_executionInfovue_type_script_lang_js = (executionInfovue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/executionInfo/index.vue?vue&type=style&index=0&id=90092396&prod&lang=scss\nvar executionInfovue_type_style_index_0_id_90092396_prod_lang_scss = __webpack_require__(1466);\n;// CONCATENATED MODULE: ./src/components/executionInfo/index.vue?vue&type=style&index=0&id=90092396&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/executionInfo/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar executionInfo_component = (0,componentNormalizer/* default */.A)(\n  components_executionInfovue_type_script_lang_js,\n  executionInfovue_type_template_id_90092396_render,\n  executionInfovue_type_template_id_90092396_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const executionInfo = (executionInfo_component.exports);\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(8102);\n// EXTERNAL MODULE: ./src/components/compose-form-item/styles.css\nvar styles = __webpack_require__(5459);\n;// CONCATENATED MODULE: ./src/components/compose-form-item/index.js\n\n\n/* harmony default export */ const compose_form_item = ({\n  props: {\n    headBackgroundColor: {\n      type: String,\n      default: '#FAFBFD'\n    },\n    tailBackgroundColor: String\n  },\n  render(h) {\n    const childrenArr = this.$slots.default;\n    if (childrenArr.length > 1) {\n      const childrenLength = childrenArr.length;\n      let startIndex = 0;\n      let headChildren = null;\n      while (startIndex < childrenLength) {\n        headChildren = childrenArr[startIndex];\n        if (headChildren.tag && headChildren.componentOptions) {\n          break;\n        }\n        startIndex += 1;\n      }\n      let tailChildren = null;\n      let endIndex = childrenLength - 1;\n      while (endIndex >= 0 && endIndex) {\n        tailChildren = childrenArr[endIndex];\n        if (tailChildren.tag && tailChildren.componentOptions) {\n          break;\n        }\n        endIndex -= 1;\n      }\n      if (headChildren && tailChildren && headChildren !== tailChildren) {\n        let firstChildStaticClass = 'compose-form-item-first';\n        if (headChildren.data.staticClass) {\n          firstChildStaticClass += ` ${headChildren.data.staticClass}`;\n        }\n        if (this.headBackgroundColor) {\n          headChildren.data.style = (0,esm_extends/* default */.A)(headChildren.data.style || {}, {\n            'background-color': this.headBackgroundColor\n          });\n        }\n        headChildren.data.staticClass = firstChildStaticClass;\n        let lastChildStaticClass = 'compose-form-item-last';\n        if (tailChildren.data.staticClass) {\n          lastChildStaticClass += ` ${tailChildren.data.staticClass}`;\n        }\n        if (this.tailBackgroundColor) {\n          tailChildren.data.style = (0,esm_extends/* default */.A)(tailChildren.data.style || {}, {\n            'background-color': this.tailBackgroundColor\n          });\n        }\n        tailChildren.data.staticClass = lastChildStaticClass;\n      }\n    }\n    return h('div', {\n      staticClass: 'compose-form-item'\n    }, childrenArr);\n  }\n});\n;// CONCATENATED MODULE: ./src/utils/execution.js\n\nconst STATUS_PENDING = 1;\nconst STATUS_DOING = 2;\nconst STATUS_SUCCESS = 3;\nconst STATUS_FAIL = 4;\nconst STATUS_PASS = 5;\nconst STATUS_INGORE_ERROR = 6;\nconst STATUS_MANUAL_CONFIRM = 7;\nconst STATIS_MANUAL_END = 8;\nconst STATUS_STATE_EXCEPTION = 9;\nconst STATUS_FORCEDING = 10;\nconst STATUS_FORCED_SUCCESS = 11;\nconst AGENT_STATUS_SUCCESS = 9;\nconst AGENT_STATUS_RUNNING = 7;\nconst AGENT_STATUS_WAITING = 5;\nconst AGENT_STATUS_LAST_SUCCESS = 3;\nconst getAgentStatus = status => {\n  if ([AGENT_STATUS_SUCCESS, AGENT_STATUS_LAST_SUCCESS].includes(status)) {\n    return 'success';\n  }\n  if ([AGENT_STATUS_RUNNING].includes(status)) {\n    return 'running';\n  }\n  if ([AGENT_STATUS_WAITING].includes(status)) {\n    return 'waiting';\n  }\n  return 'fail';\n};\nconst checkStatus = status => {\n  if ([STATUS_SUCCESS, STATUS_PASS].includes(status)) {\n    return 'success';\n  }\n  if ([STATUS_INGORE_ERROR].includes(status)) {\n    return 'ingore';\n  }\n  if ([STATUS_FAIL, STATUS_STATE_EXCEPTION, STATIS_MANUAL_END].includes(status)) {\n    return 'fail';\n  }\n  if ([STATUS_FORCED_SUCCESS].includes(status)) {\n    return 'forced';\n  }\n  if ([STATUS_FORCEDING].includes(status)) {\n    return 'forceding';\n  }\n  if ([STATUS_DOING].includes(status)) {\n    return 'loading';\n  }\n  if ([STATUS_MANUAL_CONFIRM].includes(status)) {\n    return 'confirm';\n  }\n  if ([STATUS_PENDING].includes(status)) {\n    return 'disabled';\n  }\n  return 'disabled';\n};\nconst statusStyleMap = {\n  success: 'success',\n  ingore: 'ingore',\n  fail: 'fail',\n  forced: 'forced',\n  forceding: 'loading',\n  loading: 'loading',\n  confirm: 'confirm',\n  confirmForced: 'confirm-forced',\n  disabled: 'disabled',\n  evicted: 'fail'\n};\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/execution-detail/index.vue?vue&type=script&lang=js\n\n\n\n\n\n\n/* harmony default export */ const execution_detailvue_type_script_lang_js = ({\n  components: {\n    ipList: ipList,\n    ExecutionInfo: executionInfo,\n    StepDetailView: step_detail_view,\n    ComposeFormItem: compose_form_item\n  },\n  data() {\n    return {\n      // 搜索模式\n      searchModel: 'log',\n      stepInstanceData: {},\n      stepResultGroupList: [],\n      jobInstanceFinished: true,\n      stepStatusMap: {},\n      statusStyleMap: statusStyleMap,\n      checkStatus: checkStatus,\n      groupListMap: {},\n      activeGroupIndex: 0,\n      isLoading: false,\n      activeHostId: 0,\n      activeIp: '',\n      activeBkCloudId: 0,\n      activeIpStatus: '',\n      isShowDetail: false,\n      isHostLoading: true,\n      paginationChangeLoading: false,\n      hasLoadEnd: false,\n      maxHostNumPerGroup: 20,\n      keyword: '',\n      searchIp: ''\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    jobInstanceId() {\n      return this.$route.query.jobInstanceId;\n    },\n    stepInstanceId() {\n      return this.$route.query.stepInstanceId;\n    },\n    jobInstanceType() {\n      // 脚本执行 - SCRIPT\n      // 文件分发 - FILE\n      return this.$route.query.jobInstanceType;\n    },\n    isFile() {\n      return this.jobInstanceType === 'FILE';\n    },\n    stepTypeText() {\n      const typeTextMap = {\n        SCRIPT: this.$t('environment.scriptExecution'),\n        FILE: this.$t('environment.fileTransfer')\n      };\n      return typeTextMap[this.jobInstanceType];\n    },\n    ipList() {\n      if (this.stepResultGroupList.length) {\n        const activeItem = this.stepResultGroupList[this.activeGroupIndex].hostResultList[0] || {};\n        if (activeItem) {\n          this.activeHostId = activeItem.bkHostId;\n          this.activeIp = activeItem.ip;\n          this.activeBkCloudId = activeItem.bkCloudId;\n          this.activeIpStatus = getAgentStatus(activeItem.status);\n        }\n        return this.stepResultGroupList[this.activeGroupIndex].hostResultList.map(i => {\n          return {\n            ...i,\n            result: getAgentStatus(i.status)\n          };\n        });\n      } else {\n        this.activeHostId = 0;\n        this.activeIp = '';\n        this.activeBkCloudId = 0;\n        this.activeIpStatus = '';\n        return [];\n      }\n    },\n    resultType() {\n      if (this.stepResultGroupList.length) {\n        return this.stepResultGroupList[this.activeGroupIndex].resultType;\n      }\n      return '';\n    },\n    tag() {\n      if (this.stepResultGroupList.length) {\n        return this.stepResultGroupList[this.activeGroupIndex].tag;\n      }\n      return '';\n    },\n    isSearch() {\n      return !!this.keyword || !!this.searchIp;\n    }\n  },\n  created() {\n    this.stepStatusMap = {\n      1: this.$t('environment.未执行'),\n      2: this.$t('environment.正在执行'),\n      3: this.$t('environment.执行成功'),\n      4: this.$t('environment.执行失败'),\n      5: this.$t('environment.跳过'),\n      6: this.$t('environment.忽略错误'),\n      7: this.$t('environment.等待用户'),\n      8: this.$t('environment.手动结束'),\n      9: this.$t('environment.状态异常'),\n      10: this.$t('environment.步骤强制终止中'),\n      11: this.$t('environment.步骤强制终止成功')\n    };\n    this.fetchJobInstanceStatus();\n    this.fetchStepInstanceStatus();\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('environment', ['getJobInstanceStatus', 'getStepInstanceStatus']),\n    /**\r\n     * @description: 获取步骤执行结果\r\n     */\n    fetchJobInstanceStatus() {\n      if (this.jobInstanceFinished) {\n        this.isLoading = true;\n      }\n      this.getJobInstanceStatus({\n        projectId: this.projectId,\n        jobInstanceId: this.jobInstanceId\n      }).then(res => {\n        this.jobInstanceFinished = res.finished;\n        if (!this.jobInstanceFinished) {\n          setTimeout(() => {\n            this.fetchJobInstanceStatus();\n            this.fetchStepInstanceStatus();\n          }, 5000);\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    fetchStepInstanceStatus() {\n      this.getStepInstanceStatus({\n        projectId: this.projectId,\n        params: {\n          jobInstanceId: this.jobInstanceId,\n          stepInstanceId: this.stepInstanceId,\n          status: this.resultType,\n          tag: this.tag,\n          keyword: this.keyword,\n          searchIp: this.searchIp,\n          maxHostNumPerGroup: this.maxHostNumPerGroup\n        }\n      }).then(res => {\n        this.stepInstanceData = res;\n        this.stepResultGroupList = res.stepResultGroupList || [];\n        if (this.stepResultGroupList.length) {\n          this.hasLoadEnd = this.ipList.length === this.stepResultGroupList[this.activeGroupIndex].hostSize;\n        }\n      }).catch(error => {\n        this.$bkMessage({\n          theme: 'error',\n          message: error.message || error\n        });\n      }).finally(() => {\n        this.isHostLoading = false;\n        this.paginationChangeLoading = false;\n      });\n    },\n    handleShowDetail() {\n      this.isShowDetail = true;\n    },\n    handleChangeGroup(index) {\n      this.activeGroupIndex = index;\n      this.hasLoadEnd = false;\n      this.fetchStepInstanceStatus();\n    },\n    handleIpListPageChange(pageSize) {\n      if (this.hasLoadEnd || !this.stepResultGroupList.length) return;\n      this.paginationChangeLoading = true;\n      this.maxHostNumPerGroup = pageSize;\n      this.fetchStepInstanceStatus();\n    },\n    handleClearFilter() {\n      this.keyword = '';\n      this.searchIp = '';\n      this.fetchStepInstanceStatus();\n    },\n    handleLogSearch(value, event) {\n      if (event.isComposing) {\n        // 跳过输入法复合事件\n        return;\n      }\n\n      // 输入框的值被清空直接触发搜索\n      // enter键开始搜索\n      if (value === '' && value !== this.keyword || event.keyCode === 13 || event.type === 'click') {\n        this.activeHostId = 0;\n        this.activeIp = '';\n        this.activeBkCloudId = 0;\n        this.activeIpStatus = '';\n        this.isHostLoading = true;\n        this.maxHostNumPerGroup = 20;\n        this.keyword = value;\n        this.searchIp = '';\n        this.fetchStepInstanceStatus();\n      }\n    },\n    handleIPSearch(value, event) {\n      if (event.isComposing) {\n        // 跳过输入法复合事件\n        return;\n      }\n      // 输入框的值被清空直接触发搜索\n      // enter键开始搜索\n      if (value === '' && value !== this.searchIp || event.keyCode === 13 || event.type === 'click') {\n        this.activeHostId = 0;\n        this.activeIp = '';\n        this.activeBkCloudId = 0;\n        this.activeIpStatus = '';\n        this.isHostLoading = true;\n        this.maxHostNumPerGroup = 20;\n        this.keyword = '';\n        this.searchIp = value;\n        this.fetchStepInstanceStatus();\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/execution-detail/index.vue?vue&type=script&lang=js\n /* harmony default export */ const views_execution_detailvue_type_script_lang_js = (execution_detailvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/execution-detail/index.vue?vue&type=style&index=0&id=c5d0af4e&prod&lang=scss\nvar execution_detailvue_type_style_index_0_id_c5d0af4e_prod_lang_scss = __webpack_require__(4761);\n;// CONCATENATED MODULE: ./src/views/execution-detail/index.vue?vue&type=style&index=0&id=c5d0af4e&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/execution-detail/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar execution_detail_component = (0,componentNormalizer/* default */.A)(\n  views_execution_detailvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const execution_detail = (execution_detail_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///857\n");

/***/ }),

/***/ 4132:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ extPageContainer)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/extPageContainer.vue?vue&type=template&id=9ab4fe58\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"ext-page-container-wrapper\"\n  }, [_c(\"content-header\", {\n    staticClass: \"env-header\"\n  }, [_c(\"div\", {\n    attrs: {\n      slot: \"left\"\n    },\n    slot: \"left\"\n  }, [_vm._v(_vm._s(_vm.servideName))])]), _vm._v(\" \"), _c(\"section\", {\n    staticClass: \"sub-view-port\"\n  }, [_vm.service ? [_c(\"iframe\", {\n    ref: \"extensionIframe\",\n    staticClass: \"environment-view-port-iframe\",\n    attrs: {\n      src: _vm.iframeUrl\n    },\n    on: {\n      load: _vm.handlePageLoad\n    }\n  })] : _vm._e()], 2)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue?vue&type=template&id=9ab4fe58\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(3188);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(9297);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/extPageContainer.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const extPageContainervue_type_script_lang_js = ({\n  props: {\n    extensionMap: {\n      type: Object\n    }\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['extensions']),\n    serviceCode() {\n      return this.$route.params.serviceCode;\n    },\n    service() {\n      return this.extensions.find(ext => ext.serviceCode === this.serviceCode);\n    },\n    servideName() {\n      console.log(this.service, this.extensions);\n      return this.service && this.service.serviceName ? this.service.serviceName : '';\n    },\n    iframeUrl() {\n      return this.service ? this.getResUrl(this.service.props.entryResUrl, this.service.baseUrl) : '';\n    }\n  },\n  methods: {\n    isAbsoluteURL() {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return /^https?:\\/\\//i.test(url);\n    },\n    urlJoin() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return args.filter(arg => arg).join('/').replace(/([^:]\\/)\\/+/g, '$1');\n    },\n    getResUrl() {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'index.html';\n      let baseURL = arguments.length > 1 ? arguments[1] : undefined;\n      return this.isAbsoluteURL(url) ? url : this.urlJoin(baseURL, 'static', url);\n    },\n    handlePageLoad() {\n      this.syncData({\n        ...this.$route.params\n      });\n    },\n    syncData(data) {\n      try {\n        // @ts-ignore\n        this.$refs.extensionIframe.contentWindow.postMessage({\n          action: 'syncCustomData',\n          params: JSON.stringify(data)\n        }, '*');\n      } catch (e) {\n        console.warn('can not find extensionIframe');\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue?vue&type=script&lang=js\n /* harmony default export */ const views_extPageContainervue_type_script_lang_js = (extPageContainervue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/extPageContainer.vue?vue&type=style&index=0&id=9ab4fe58&prod&lang=scss\nvar extPageContainervue_type_style_index_0_id_9ab4fe58_prod_lang_scss = __webpack_require__(7538);\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue?vue&type=style&index=0&id=9ab4fe58&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/views/extPageContainer.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  views_extPageContainervue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const extPageContainer = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4132\n");

/***/ }),

/***/ 5576:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ node_detail)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/node_detail.vue?vue&type=template&id=d5c57094\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{\\n        isLoading: loading.isLoading,\\n        title: loading.title\\n    }\"\n    }],\n    staticClass: \"node-detail-wrapper\"\n  }, [_c(\"content-header\", {\n    staticClass: \"info-header\"\n  }, [_c(\"div\", {\n    attrs: {\n      slot: \"left\"\n    },\n    slot: \"left\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-arrows-left\",\n    on: {\n      click: _vm.toNodeList\n    }\n  }), _vm._v(\" \"), _vm.editable ? _c(\"input\", {\n    directives: [{\n      name: \"validate\",\n      rawName: \"v-validate\",\n      value: \"required\",\n      expression: \"'required'\"\n    }, {\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.nodeDetails.displayName,\n      expression: \"nodeDetails.displayName\"\n    }],\n    ref: \"nodeName\",\n    staticClass: \"bk-form-input display-name-input\",\n    class: {\n      \"is-danger\": _vm.errors.has(\"nodeName\")\n    },\n    attrs: {\n      type: \"text\",\n      maxlength: \"30\",\n      name: \"nodeName\"\n    },\n    domProps: {\n      value: _vm.nodeDetails.displayName\n    },\n    on: {\n      blur: _vm.saveName,\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.nodeDetails, \"displayName\", $event.target.value);\n      }\n    }\n  }) : _vm._e(), _vm._v(\" \"), !_vm.editable ? _c(\"span\", {\n    staticClass: \"header-text\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.displayName))]) : _vm._e(), _vm._v(\" \"), !_vm.editable && _vm.nodeDetails.canEdit ? _c(\"i\", {\n    staticClass: \"devops-icon icon-edit\",\n    on: {\n      click: _vm.editNodeName\n    }\n  }) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"node-handle\",\n    attrs: {\n      slot: \"right\"\n    },\n    slot: \"right\"\n  }, [_c(\"span\", {\n    staticClass: \"copy-btn\",\n    on: {\n      click: _vm.copyHandle\n    }\n  }, [_vm._v(\"\\n                \" + _vm._s(_vm.nodeDetails.os === \"WINDOWS\" ? _vm.$t(\"environment.nodeInfo.copyDownloadLink\") : _vm.$t(\"environment.nodeInfo.copyInstallCommand\")) + \"\\n            \")]), _vm._v(\" \"), _vm.nodeDetails.os === \"WINDOWS\" ? _c(\"span\", {\n    staticClass: \"download-btn\",\n    on: {\n      click: _vm.downloadHandle\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.downloadInstallationPackage\")))]) : _vm._e(), _vm._v(\" \"), _c(\"i\", {\n    staticClass: \"devops-icon icon-refresh\",\n    on: {\n      click: _vm.refresh\n    }\n  })])]), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showContent,\n      expression: \"showContent\"\n    }],\n    staticClass: \"sub-view-port\"\n  }, [_c(\"ul\", {\n    staticClass: \"base-prototype-list\"\n  }, _vm._l(_vm.basePrototypeList, function (entry, index) {\n    return _c(\"li\", {\n      key: index\n    }, [_c(\"div\", {\n      staticClass: \"info-title\"\n    }, [_vm._v(_vm._s(entry.name) + \"：\")]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"info-value\",\n      attrs: {\n        title: entry.value\n      }\n    }, [_vm._v(_vm._s(entry.value))])]);\n  }), 0), _vm._v(\" \"), _vm.isEnableDashboard ? _c(\"div\", {\n    staticClass: \"metric-monitor\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-tiaozhuan jump-icon\"\n  }), _vm._v(\" \"), _c(\"a\", {\n    attrs: {\n      href: _vm.jumpDashboardUrl,\n      target: \"_blank\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.查看更多指标监控\")))])]) : _vm._e(), _vm._v(\" \"), _c(\"node-overview-chart\"), _vm._v(\" \"), _c(\"node-detail-tab\")], 1)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/node_detail.vue?vue&type=template&id=d5c57094\n\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n// EXTERNAL MODULE: external \"Vue\"\nvar external_Vue_ = __webpack_require__(4061);\nvar external_Vue_default = /*#__PURE__*/__webpack_require__.n(external_Vue_);\n;// CONCATENATED MODULE: ./src/utils/bus.js\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\n\n\n// Use a bus for components communication,\n// see https://vuejs.org/v2/guide/components.html#Non-Parent-Child-Communication\nconst bus = new (external_Vue_default())();\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(7716);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-detail-tab.vue?vue&type=template&id=72d318f8\nvar node_detail_tabvue_type_template_id_72d318f8_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"node-details-tab\"\n  }, [_c(\"bk-tab\", {\n    staticStyle: {\n      \"margin-top\": \"20px\"\n    },\n    attrs: {\n      active: _vm.activeName,\n      type: _vm.currentType\n    },\n    on: {\n      \"update:active\": function ($event) {\n        _vm.activeName = $event;\n      }\n    }\n  }, _vm._l(_vm.menuList, function (panel, index) {\n    return _c(\"bk-tab-panel\", _vm._b({\n      key: index\n    }, \"bk-tab-panel\", panel, false), [panel.name === \"base\" ? _c(\"basic-information\") : _vm._e(), _vm._v(\" \"), panel.name === \"envVariable\" ? _c(\"env-variable\") : _vm._e(), _vm._v(\" \"), panel.name === \"pipeline\" ? _c(\"pipeline-list\") : _vm._e(), _vm._v(\" \"), panel.name === \"activity\" ? _c(\"machine-record\") : _vm._e()], 1);\n  }), 1)], 1);\n};\nvar node_detail_tabvue_type_template_id_72d318f8_staticRenderFns = [];\nnode_detail_tabvue_type_template_id_72d318f8_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue?vue&type=template&id=72d318f8\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/basic-information.vue?vue&type=template&id=f75003b8\nvar basic_informationvue_type_template_id_f75003b8_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"basic-information-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"base-item-list\"\n  }, [_c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.startUser\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.startedUser || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.installPath\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.agentInstallPath || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.agentVersion\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.agentVersion || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.workerVersion\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.slaveVersion || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.maxParallelTaskCount\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm.isEditCount ? _c(\"div\", {\n    staticClass: \"display-item\"\n  }, [_c(\"input\", {\n    directives: [{\n      name: \"validate\",\n      rawName: \"v-validate.initial\",\n      value: `required|between:0,100|decimal:0`,\n      expression: \"`required|between:0,100|decimal:0`\",\n      modifiers: {\n        initial: true\n      }\n    }, {\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.parallelTaskCount,\n      expression: \"parallelTaskCount\"\n    }],\n    ref: \"parallelTaskCount\",\n    staticClass: \"bk-form-input parallelTaskCount-input\",\n    class: {\n      \"is-danger\": _vm.errors.has(\"parallelTaskCount\")\n    },\n    attrs: {\n      type: \"number\",\n      name: \"parallelTaskCount\",\n      placeholder: _vm.$t(\"environment.nodeInfo.parallelTaskCountTips\")\n    },\n    domProps: {\n      value: _vm.parallelTaskCount\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.parallelTaskCount = $event.target.value;\n      }\n    }\n  })]) : _c(\"div\", {\n    staticClass: \"editing-item\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.parallelTaskCount || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"handle-btn\"\n  }, [_vm.isEditCount ? _c(\"div\", [_c(\"span\", {\n    on: {\n      click: function ($event) {\n        return _vm.saveHandle(\"parallelTaskCount\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.save\")))]), _vm._v(\" \"), _c(\"span\", {\n    on: {\n      click: function ($event) {\n        return _vm.editHandle(\"parallelTaskCount\", false);\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.cancel\")))])]) : _c(\"div\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        hasPermission: _vm.nodeDetails.canEdit,\n        disablePermissionApi: true,\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.NODE_RESOURCE_TYPE,\n          resourceCode: _vm.nodeHashId,\n          action: _vm.NODE_RESOURCE_ACTION.EDIT\n        }\n      },\n      expression: \"{\\n                        hasPermission: nodeDetails.canEdit,\\n                        disablePermissionApi: true,\\n                        permissionData: {\\n                            projectId: projectId,\\n                            resourceType: NODE_RESOURCE_TYPE,\\n                            resourceCode: nodeHashId,\\n                            action: NODE_RESOURCE_ACTION.EDIT\\n                        }\\n                    }\"\n    }]\n  }, [_c(\"span\", {\n    on: {\n      click: function ($event) {\n        return _vm.editHandle(\"parallelTaskCount\", true);\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.edit\")))])])])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.status\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\",\n    class: _vm.nodeDetails.status === \"NORMAL\" ? \"normal\" : \"abnormal\"\n  }, [_vm._v(\"\\n                \" + _vm._s(_vm.nodeDetails.status === \"NORMAL\" ? _vm.$t(\"environment.nodeInfo.normal\") : _vm.$t(\"environment.nodeInfo.abnormal\")) + \"\\n            \")])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.importTime\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.createdTime || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.lastActiveTime\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.lastHeartbeatTime || \"--\"))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-content\"\n  }, [_c(\"div\", {\n    staticClass: \"item-label\"\n  }, [_vm._v(_vm._s(_vm.nodeDetails.os === \"WINDOWS\" ? _vm.$t(\"environment.nodeInfo.downloadLink\") : _vm.$t(\"environment.nodeInfo.installCommand\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"item-value\",\n    attrs: {\n      title: _vm.agentLink\n    }\n  }, [_vm._v(_vm._s(_vm.agentLink))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"handle-btn\"\n  }, [_c(\"span\", {\n    staticClass: \"agent-url\",\n    on: {\n      click: _vm.copyHandle\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.copy\")))]), _vm._v(\" \"), _vm.nodeDetails.os === \"WINDOWS\" ? _c(\"span\", {\n    on: {\n      click: _vm.downloadHandle\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.download\")))]) : _vm._e()])])])]);\n};\nvar basic_informationvue_type_template_id_f75003b8_staticRenderFns = [];\nbasic_informationvue_type_template_id_f75003b8_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue?vue&type=template&id=f75003b8\n\n// EXTERNAL MODULE: ./src/utils/permission.js\nvar permission = __webpack_require__(9203);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/basic-information.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const basic_informationvue_type_script_lang_js = ({\n  data() {\n    return {\n      isEditWorkspace: false,\n      isEditCount: false,\n      isEditCreatedUser: false,\n      isEditNoticeType: false,\n      workspace: '',\n      createdUser: '',\n      parallelTaskCount: 0,\n      noticeTypeList: [{\n        name: 'work-wechat',\n        value: 'RTX',\n        isChecked: true\n      }, {\n        name: 'wechat',\n        value: 'WECHAT',\n        isChecked: false\n      }, {\n        name: 'email',\n        value: 'EMAIL',\n        isChecked: false\n      }],\n      NODE_RESOURCE_ACTION: permission/* NODE_RESOURCE_ACTION */.hs,\n      NODE_RESOURCE_TYPE: permission/* NODE_RESOURCE_TYPE */.ZD\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    agentLink() {\n      return this.nodeDetails.os === 'WINDOWS' ? this.nodeDetails.agentUrl : this.nodeDetails.agentScript;\n    }\n  },\n  mounted() {},\n  methods: {\n    editHandle(type, isOpen) {\n      if (!this.nodeDetails.canEdit) {\n        this.handleNoPermission({\n          projectId: this.projectId,\n          resourceType: permission/* NODE_RESOURCE_TYPE */.ZD,\n          resourceCode: this.nodeHashId,\n          action: permission/* NODE_RESOURCE_ACTION */.hs.EDIT\n        });\n        return;\n      }\n      switch (type) {\n        case 'workspace':\n          this.isEditWorkspace = isOpen;\n          if (isOpen) {\n            this.workspace = this.nodeDetails.workspace;\n          }\n          break;\n        case 'parallelTaskCount':\n          this.isEditCount = isOpen;\n          if (isOpen) {\n            this.parallelTaskCount = this.nodeDetails.parallelTaskCount;\n            this.$nextTick(() => {\n              this.$refs.parallelTaskCount.focus();\n            });\n          }\n          break;\n        case 'createdUser':\n          this.isEditCreatedUser = isOpen;\n          if (isOpen) {\n            this.createdUser = this.nodeDetails.createdUser;\n          }\n          break;\n        case 'noticeType':\n          this.isEditNoticeType = isOpen;\n          break;\n        default:\n          break;\n      }\n    },\n    async saveHandle() {\n      const valid = await this.$validator.validate();\n      if (valid) {\n        this.saveParallelTaskCount(this.parallelTaskCount);\n      }\n    },\n    async saveParallelTaskCount(parallelTaskCount) {\n      let message, theme;\n      try {\n        await this.$store.dispatch('environment/saveParallelTaskCount', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          parallelTaskCount\n        });\n        message = this.$t('environment.successfullySaved');\n        theme = 'success';\n        this.requestNodeDetail();\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async requestNodeDetail() {\n      try {\n        const res = await this.$store.dispatch('environment/requestNodeDetail', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.$store.commit('environment/updateNodeDetail', {\n          res\n        });\n        this.isEditCount = false;\n      } catch (e) {\n        this.handleError(e, {\n          projectId: this.projectId,\n          resourceType: permission/* NODE_RESOURCE_TYPE */.ZD,\n          resourceCode: this.nodeHashId,\n          action: permission/* NODE_RESOURCE_ACTION */.hs.DELETE\n        });\n      }\n    },\n    downloadHandle() {\n      window.location.href = this.nodeDetails.agentUrl;\n    },\n    copyHandle() {\n      if ((0,util/* copyText */.Dk)(this.agentLink)) {\n        this.$bkMessage({\n          theme: 'success',\n          message: this.$t('environment.successfullyCopyed')\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue?vue&type=script&lang=js\n /* harmony default export */ const environment_basic_informationvue_type_script_lang_js = (basic_informationvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/basic-information.vue?vue&type=style&index=0&id=f75003b8&prod&lang=scss\nvar basic_informationvue_type_style_index_0_id_f75003b8_prod_lang_scss = __webpack_require__(3371);\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue?vue&type=style&index=0&id=f75003b8&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/devops/environment/basic-information.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  environment_basic_informationvue_type_script_lang_js,\n  basic_informationvue_type_template_id_f75003b8_render,\n  basic_informationvue_type_template_id_f75003b8_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const basic_information = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/env-variable.vue?vue&type=template&id=9ed860d0\nvar env_variablevue_type_template_id_9ed860d0_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"env-variable-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"Key-value-nomal\"\n  }, [_c(\"ul\", [_vm.renderList.length ? _vm._l(_vm.renderList, function (param, index) {\n    return _c(\"li\", {\n      key: index,\n      staticClass: \"param-item\"\n    }, [_c(\"input\", {\n      directives: [{\n        name: \"validate\",\n        rawName: \"v-validate\",\n        value: \"required\",\n        expression: \"'required'\"\n      }, {\n        name: \"model\",\n        rawName: \"v-model\",\n        value: param.name,\n        expression: \"param.name\"\n      }],\n      staticClass: \"bk-form-input\",\n      class: {\n        \"is-danger\": _vm.errors.has(`param-${index}-key`)\n      },\n      attrs: {\n        name: `param-${index}-key`,\n        disabled: !_vm.editable\n      },\n      domProps: {\n        value: param.name\n      },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(param, \"name\", $event.target.value);\n        }\n      }\n    }), _vm._v(\" \"), _c(\"i\", {\n      staticClass: \"equal-sign\"\n    }, [_vm._v(\"=\")]), _vm._v(\" \"), (param.secure ? \"password\" : \"text\") === \"checkbox\" ? _c(\"input\", {\n      directives: [{\n        name: \"validate\",\n        rawName: \"v-validate\",\n        value: \"required\",\n        expression: \"'required'\"\n      }, {\n        name: \"model\",\n        rawName: \"v-model\",\n        value: param.value,\n        expression: \"param.value\"\n      }],\n      staticClass: \"bk-form-input\",\n      class: {\n        \"editable-input\": _vm.editable,\n        \"is-danger\": _vm.errors.has(`param-${index}-value`)\n      },\n      attrs: {\n        name: `param-${index}-value`,\n        disabled: !_vm.editable,\n        type: \"checkbox\"\n      },\n      domProps: {\n        checked: Array.isArray(param.value) ? _vm._i(param.value, null) > -1 : param.value\n      },\n      on: {\n        change: function ($event) {\n          var $$a = param.value,\n            $$el = $event.target,\n            $$c = $$el.checked ? true : false;\n          if (Array.isArray($$a)) {\n            var $$v = null,\n              $$i = _vm._i($$a, $$v);\n            if ($$el.checked) {\n              $$i < 0 && _vm.$set(param, \"value\", $$a.concat([$$v]));\n            } else {\n              $$i > -1 && _vm.$set(param, \"value\", $$a.slice(0, $$i).concat($$a.slice($$i + 1)));\n            }\n          } else {\n            _vm.$set(param, \"value\", $$c);\n          }\n        }\n      }\n    }) : (param.secure ? \"password\" : \"text\") === \"radio\" ? _c(\"input\", {\n      directives: [{\n        name: \"validate\",\n        rawName: \"v-validate\",\n        value: \"required\",\n        expression: \"'required'\"\n      }, {\n        name: \"model\",\n        rawName: \"v-model\",\n        value: param.value,\n        expression: \"param.value\"\n      }],\n      staticClass: \"bk-form-input\",\n      class: {\n        \"editable-input\": _vm.editable,\n        \"is-danger\": _vm.errors.has(`param-${index}-value`)\n      },\n      attrs: {\n        name: `param-${index}-value`,\n        disabled: !_vm.editable,\n        type: \"radio\"\n      },\n      domProps: {\n        checked: _vm._q(param.value, null)\n      },\n      on: {\n        change: function ($event) {\n          return _vm.$set(param, \"value\", null);\n        }\n      }\n    }) : _c(\"input\", {\n      directives: [{\n        name: \"validate\",\n        rawName: \"v-validate\",\n        value: \"required\",\n        expression: \"'required'\"\n      }, {\n        name: \"model\",\n        rawName: \"v-model\",\n        value: param.value,\n        expression: \"param.value\"\n      }],\n      staticClass: \"bk-form-input\",\n      class: {\n        \"editable-input\": _vm.editable,\n        \"is-danger\": _vm.errors.has(`param-${index}-value`)\n      },\n      attrs: {\n        name: `param-${index}-value`,\n        disabled: !_vm.editable,\n        type: param.secure ? \"password\" : \"text\"\n      },\n      domProps: {\n        value: param.value\n      },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return;\n          _vm.$set(param, \"value\", $event.target.value);\n        }\n      }\n    }), _vm._v(\" \"), _vm.editable ? _c(\"i\", {\n      staticClass: \"devops-icon text-type-icon\",\n      class: param.secure ? \"icon-eye\" : \"icon-hide\",\n      on: {\n        click: function ($event) {\n          return _vm.toggleInputType(index);\n        }\n      }\n    }) : _vm._e(), _vm._v(\" \"), _vm.editable ? _c(\"section\", [_c(\"i\", {\n      staticClass: \"devops-icon icon-minus-circle\",\n      on: {\n        click: function ($event) {\n          return _vm.reduceHandle(index, \"reduce\");\n        }\n      }\n    })]) : _vm._e()]);\n  }) : _vm._e()], 2), _vm._v(\" \"), _c(\"span\", {\n    directives: [{\n      name: \"perm\",\n      rawName: \"v-perm\",\n      value: {\n        hasPermission: _vm.nodeDetails.canEdit,\n        disablePermissionApi: true,\n        permissionData: {\n          projectId: _vm.projectId,\n          resourceType: _vm.NODE_RESOURCE_TYPE,\n          resourceCode: _vm.nodeHashId,\n          action: _vm.NODE_RESOURCE_ACTION.EDIT\n        }\n      },\n      expression: \"{\\n                hasPermission: nodeDetails.canEdit,\\n                disablePermissionApi: true,\\n                permissionData: {\\n                    projectId: projectId,\\n                    resourceType: NODE_RESOURCE_TYPE,\\n                    resourceCode: nodeHashId,\\n                    action: NODE_RESOURCE_ACTION.EDIT\\n                }\\n            }\"\n    }]\n  }, [_vm.editable || !_vm.renderList.length ? _c(\"p\", {\n    staticClass: \"add-variable\",\n    class: {\n      \"is-disabled\": !_vm.nodeDetails.canEdit\n    },\n    on: {\n      click: _vm.addHandle\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-plus-circle\"\n  }), _vm._v(_vm._s(_vm.$t(\"environment.envInfo.createVariable\")) + \"\\n            \")]) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"footer-handle\"\n  }, [!_vm.editable && _vm.renderList.length ? _c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\",\n      disabled: !_vm.nodeDetails.canEdit\n    },\n    on: {\n      click: _vm.edithandle\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.edit\")))]) : _vm._e(), _vm._v(\" \"), _vm.editable ? _c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.save\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.save\")))]) : _vm._e(), _vm._v(\" \"), _vm.editable ? _c(\"bk-button\", {\n    attrs: {\n      theme: \"defalut\"\n    },\n    on: {\n      click: function ($event) {\n        _vm.editable = false;\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.cancel\")))]) : _vm._e()], 1)])]);\n};\nvar env_variablevue_type_template_id_9ed860d0_staticRenderFns = [];\nenv_variablevue_type_template_id_9ed860d0_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue?vue&type=template&id=9ed860d0\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/env-variable.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const env_variablevue_type_script_lang_js = ({\n  data() {\n    return {\n      editable: false,\n      paramList: [],\n      editableList: [],\n      NODE_RESOURCE_ACTION: permission/* NODE_RESOURCE_ACTION */.hs,\n      NODE_RESOURCE_TYPE: permission/* NODE_RESOURCE_TYPE */.ZD\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    renderList() {\n      return this.editable ? this.editableList : this.paramList;\n    }\n  },\n  mounted() {\n    this.requestEnvs();\n  },\n  created() {\n    bus.$off('refreshEnv');\n    bus.$on('refreshEnv', () => {\n      this.requestEnvs();\n    });\n  },\n  methods: {\n    edithandle() {\n      this.editable = true;\n      this.editableList = JSON.parse(JSON.stringify(this.paramList));\n    },\n    async requestEnvs() {\n      try {\n        const res = await this.$store.dispatch('environment/requestEnvs', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.paramList.splice(0, this.paramList.length, ...(res || []));\n        this.editable = false;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    addHandle() {\n      if (!this.nodeDetails.canEdit) {\n        this.handleNoPermission({\n          projectId: this.projectId,\n          resourceType: permission/* NODE_RESOURCE_TYPE */.ZD,\n          resourceCode: this.nodeHashId,\n          action: permission/* NODE_RESOURCE_ACTION */.hs.EDIT\n        });\n      } else {\n        this.editable = true;\n        this.editableList.push({\n          name: '',\n          value: '',\n          secure: false\n        });\n      }\n    },\n    reduceHandle(index, type) {\n      this.editableList.splice(index, 1);\n    },\n    toggleInputType(key) {\n      this.editableList = this.editableList.map((item, index) => {\n        return {\n          ...item,\n          secure: index === key ? !item.secure : item.secure\n        };\n      });\n    },\n    async save() {\n      const valid = await this.$validator.validate();\n      if (valid) {\n        let message, theme;\n        const params = this.editableList;\n        try {\n          await this.$store.dispatch('environment/saveEnvs', {\n            projectId: this.projectId,\n            nodeHashId: this.nodeHashId,\n            params\n          });\n          message = this.$t('environment.successfullySaved');\n          theme = 'success';\n          this.requestEnvs();\n        } catch (err) {\n          message = err.message ? err.message : err;\n          theme = 'error';\n        } finally {\n          this.$bkMessage({\n            message,\n            theme\n          });\n        }\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue?vue&type=script&lang=js\n /* harmony default export */ const environment_env_variablevue_type_script_lang_js = (env_variablevue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/env-variable.vue?vue&type=style&index=0&id=9ed860d0&prod&lang=scss\nvar env_variablevue_type_style_index_0_id_9ed860d0_prod_lang_scss = __webpack_require__(3969);\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue?vue&type=style&index=0&id=9ed860d0&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/env-variable.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar env_variable_component = (0,componentNormalizer/* default */.A)(\n  environment_env_variablevue_type_script_lang_js,\n  env_variablevue_type_template_id_9ed860d0_render,\n  env_variablevue_type_template_id_9ed860d0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const env_variable = (env_variable_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/pipeline-list.vue?vue&type=template&id=5f1953e1\nvar pipeline_listvue_type_template_id_5f1953e1_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"pipeline-list-wrapper\"\n  }, [_c(\"bk-table\", {\n    staticClass: \"pipeline-table\",\n    attrs: {\n      size: \"small\",\n      \"outer-border\": false,\n      data: _vm.pipelineList,\n      pagination: _vm.pagination,\n      \"empty-text\": _vm.$t(\"environment.noData\")\n    },\n    on: {\n      \"page-change\": _vm.handlePageChange,\n      \"page-limit-change\": _vm.handlePageLimitChange\n    }\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.pipeline\"),\n      prop: \"pipelineName\",\n      \"min-width\": \"200\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"a\", {\n          staticClass: \"item-pipelinename\",\n          attrs: {\n            title: props.row.pipelineName,\n            target: \"_blank\",\n            href: `/console/pipeline/${props.row.projectId}/${props.row.pipelineId}/detail/${props.row.buildId}`\n          }\n        }, [_vm._v(_vm._s(props.row.pipelineName) + \"\\n                \")])];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.nodeInfo.buildNo\"),\n      prop: \"buildNumber\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"span\", [_vm._v(_vm._s(props.row.buildNumber))])];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.nodeInfo.ownJob\"),\n      prop: \"taskName\",\n      \"min-width\": \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"span\", {\n          attrs: {\n            title: props.row.taskName\n          }\n        }, [_vm._v(_vm._s(props.row.taskName))])];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.nodeInfo.buildTaskStatus\"),\n      prop: \"status\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"span\", {\n          class: {\n            \"is-success\": props.row.status === \"DONE\",\n            \"is-fail\": props.row.status === \"FAIL\"\n          }\n        }, [_vm._v(_vm._s(_vm.statusMap[props.row.status]))]), _vm._v(\" \"), props.row.agentTask && props.row.agentTask.status === \"RUNNING\" ? _c(\"span\", [_vm._v(_vm._s(`（${_vm.$t(\"environment.nodeInfo.agentTaskRunning\")}）`))]) : _vm._e()];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.envInfo.creationTime\"),\n      prop: \"createdTime\",\n      \"min-width\": \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_vm._v(\"\\n                \" + _vm._s(_vm.localConvertTime(props.row.createdTime)) + \"\\n            \")];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.updateTime\"),\n      prop: \"updatedTime\",\n      \"min-width\": \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_vm._v(\"\\n                \" + _vm._s(_vm.localConvertTime(props.row.updatedTime)) + \"\\n            \")];\n      }\n    }])\n  })], 1)], 1);\n};\nvar pipeline_listvue_type_template_id_5f1953e1_staticRenderFns = [];\npipeline_listvue_type_template_id_5f1953e1_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue?vue&type=template&id=5f1953e1\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/pipeline-list.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const pipeline_listvue_type_script_lang_js = ({\n  data() {\n    return {\n      loopTimer: '',\n      pipelineList: [],\n      pagination: {\n        current: 1,\n        count: 30,\n        limitList: [10, 20, 50, 100],\n        limit: 10\n      },\n      statusMap: {\n        QUEUE: this.$t('environment.nodeInfo.queuing'),\n        RUNNING: this.$t('environment.nodeInfo.running'),\n        DONE: this.$t('environment.nodeInfo.succeed'),\n        FAIL: this.$t('environment.nodeInfo.fail')\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    }\n  },\n  created() {\n    bus.$off('refreshBuild');\n    bus.$on('refreshBuild', () => {\n      this.requestBuildList(this.pagination.current, this.pagination.limit);\n      this.loopCheck();\n    });\n  },\n  async mounted() {\n    await this.requestBuildList(this.pagination.current, this.pagination.limit);\n    this.loopCheck();\n  },\n  beforeDestroy() {\n    clearTimeout(this.loopTimer);\n    this.loopTimer = null;\n  },\n  methods: {\n    async requestBuildList(page, pageSize) {\n      try {\n        const res = await this.$store.dispatch('environment/requestBuildList', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          page: page,\n          pageSize: pageSize\n        });\n        this.pipelineList.splice(0, this.pipelineList.length, ...(res.records || []));\n        this.pagination.count = res.count;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async handlePageLimitChange(limit) {\n      this.pagination.current = 1;\n      this.pagination.limit = limit;\n      await this.requestBuildList(1, limit);\n      this.loopCheck();\n    },\n    async handlePageChange(curPage) {\n      this.pagination.current = curPage;\n      await this.requestBuildList(curPage, this.pagination.limit);\n      this.loopCheck();\n    },\n    /**\r\n     *  轮询检查状态\r\n     */\n    loopCheck() {\n      clearTimeout(this.loopTimer);\n      const needLoop = this.pipelineList.some(item => item.status === 'RUNNING' || item.agentTask && item.agentTask.status === 'RUNNING');\n      if (needLoop) {\n        this.loopTimer = setTimeout(async () => {\n          try {\n            await this.requestBuildList(this.pagination.current, this.pagination.limit);\n            this.loopCheck();\n          } catch (err) {\n            this.$bkMessage({\n              message: err.message || err,\n              theme: 'error'\n            });\n          }\n        }, 5000);\n      }\n    },\n    /**\r\n     * 处理时间格式\r\n     */\n    localConvertTime(timestamp) {\n      return (0,util/* convertTime */.t)(timestamp * 1000);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue?vue&type=script&lang=js\n /* harmony default export */ const environment_pipeline_listvue_type_script_lang_js = (pipeline_listvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/pipeline-list.vue?vue&type=style&index=0&id=5f1953e1&prod&lang=scss\nvar pipeline_listvue_type_style_index_0_id_5f1953e1_prod_lang_scss = __webpack_require__(2497);\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue?vue&type=style&index=0&id=5f1953e1&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/pipeline-list.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar pipeline_list_component = (0,componentNormalizer/* default */.A)(\n  environment_pipeline_listvue_type_script_lang_js,\n  pipeline_listvue_type_template_id_5f1953e1_render,\n  pipeline_listvue_type_template_id_5f1953e1_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const pipeline_list = (pipeline_list_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/machine-record.vue?vue&type=template&id=d3946312\nvar machine_recordvue_type_template_id_d3946312_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"machine-record-wrapper\"\n  }, [_c(\"bk-table\", {\n    staticClass: \"record-table\",\n    attrs: {\n      size: \"small\",\n      \"outer-border\": false,\n      data: _vm.recordList,\n      pagination: _vm.pagination,\n      \"empty-text\": _vm.$t(\"environment.noData\")\n    },\n    on: {\n      \"page-change\": _vm.handlePageChange,\n      \"page-limit-change\": _vm.handlePageLimitChange\n    }\n  }, [_c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.time\"),\n      prop: \"actionTime\",\n      \"min-width\": \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_vm._v(\"\\n                \" + _vm._s(_vm.localConvertTime(props.row.actionTime)) + \"\\n            \")];\n      }\n    }])\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: _vm.$t(\"environment.nodeInfo.ownJob\"),\n      prop: \"action\",\n      \"min-width\": \"160\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"span\", {\n          class: props.row.action === \"ONLINE\" ? \"online\" : \"offline\",\n          attrs: {\n            title: props.row.action\n          }\n        }, [_vm._v(_vm._s(props.row.action === \"ONLINE\" ? _vm.$t(\"environment.nodeInfo.online\") : _vm.$t(\"environment.nodeInfo.offline\")))])];\n      }\n    }])\n  })], 1)], 1);\n};\nvar machine_recordvue_type_template_id_d3946312_staticRenderFns = [];\nmachine_recordvue_type_template_id_d3946312_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue?vue&type=template&id=d3946312\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/machine-record.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const machine_recordvue_type_script_lang_js = ({\n  data() {\n    return {\n      recordList: [],\n      pagination: {\n        count: 30,\n        current: 1,\n        limitList: [10, 20, 50, 100],\n        limit: 10\n      }\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    }\n  },\n  created() {\n    bus.$off('refreshAction');\n    bus.$on('refreshAction', () => {\n      this.requestActionList(this.pagination.current, this.pagination.limit);\n    });\n  },\n  mounted() {\n    this.requestActionList(this.pagination.current, this.pagination.limit);\n  },\n  methods: {\n    async requestActionList(page, pageSize) {\n      try {\n        const res = await this.$store.dispatch('environment/requestActionList', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId,\n          page: page || 1,\n          pageSize: pageSize || 10\n        });\n        this.recordList.splice(0, this.recordList.length, ...(res.records || []));\n        this.pagination.count = res.count;\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    handlePageLimitChange(limit) {\n      this.pagination.current = 1;\n      this.pagination.limit = limit;\n      this.requestActionList(this.pagination.current, this.pagination.limit);\n    },\n    handlePageChange(newPage) {\n      this.pagination.current = newPage;\n      this.requestActionList(newPage, this.pagination.limit);\n    },\n    /**\r\n     * 处理时间格式\r\n     */\n    localConvertTime(timestamp) {\n      return (0,util/* convertTime */.t)(timestamp * 1000);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue?vue&type=script&lang=js\n /* harmony default export */ const environment_machine_recordvue_type_script_lang_js = (machine_recordvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/environment/machine-record.vue?vue&type=style&index=0&id=d3946312&prod&lang=scss\nvar machine_recordvue_type_style_index_0_id_d3946312_prod_lang_scss = __webpack_require__(2468);\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue?vue&type=style&index=0&id=d3946312&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/environment/machine-record.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar machine_record_component = (0,componentNormalizer/* default */.A)(\n  environment_machine_recordvue_type_script_lang_js,\n  machine_recordvue_type_template_id_d3946312_render,\n  machine_recordvue_type_template_id_d3946312_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const machine_record = (machine_record_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-detail-tab.vue?vue&type=script&lang=js\n\n\n\n\n/* harmony default export */ const node_detail_tabvue_type_script_lang_js = ({\n  components: {\n    BasicInformation: basic_information,\n    EnvVariable: env_variable,\n    PipelineList: pipeline_list,\n    MachineRecord: machine_record\n  },\n  data() {\n    return {\n      active: 'mission',\n      type: ['card', 'border-card', 'unborder-card'],\n      currentType: 'card',\n      activeName: 'base',\n      menuList: [{\n        name: 'base',\n        label: this.$t('environment.basicInfo')\n      }, {\n        name: 'envVariable',\n        label: this.$t('environment.environmentVariable')\n      }, {\n        name: 'pipeline',\n        label: this.$t('environment.nodeInfo.buildTask')\n      }, {\n        name: 'activity',\n        label: this.$t('environment.nodeInfo.machineActivityRecord')\n      }]\n    };\n  },\n  mounted() {},\n  methods: {\n    tabChanged(tab) {\n      this.activeName = tab;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue?vue&type=script&lang=js\n /* harmony default export */ const devops_node_detail_tabvue_type_script_lang_js = (node_detail_tabvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-detail-tab.vue?vue&type=style&index=0&id=72d318f8&prod&lang=scss\nvar node_detail_tabvue_type_style_index_0_id_72d318f8_prod_lang_scss = __webpack_require__(1644);\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue?vue&type=style&index=0&id=72d318f8&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/node-detail-tab.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_detail_tab_component = (0,componentNormalizer/* default */.A)(\n  devops_node_detail_tabvue_type_script_lang_js,\n  node_detail_tabvue_type_template_id_72d318f8_render,\n  node_detail_tabvue_type_template_id_72d318f8_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const node_detail_tab = (node_detail_tab_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-overview-chart.vue?vue&type=template&id=b2e644f0\nvar node_overview_chartvue_type_template_id_b2e644f0_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"node-overview-chart-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"node-overview-chart\"\n  }, [_c(\"div\", {\n    staticClass: \"part top-left\"\n  }, [_c(\"div\", {\n    staticClass: \"info\"\n  }, [_c(\"div\", {\n    staticClass: \"left\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.cpuUsageRate\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"right\"\n  }, [_c(\"bk-dropdown-menu\", {\n    ref: \"cpuDropdown\",\n    attrs: {\n      align: \"right\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      cursor: \"pointer\"\n    },\n    attrs: {\n      slot: \"dropdown-trigger\"\n    },\n    slot: \"dropdown-trigger\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.cpuToggleRangeStr))]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"dropdown-button\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-angle-down\"\n  })])]), _vm._v(\" \"), _c(\"ul\", {\n    staticClass: \"bk-dropdown-list\",\n    attrs: {\n      slot: \"dropdown-content\"\n    },\n    slot: \"dropdown-content\"\n  }, [_c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"cpuDropdown\", \"cpuToggleRangeStr\", \"cpu_summary\", \"1\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneHour\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"cpuDropdown\", \"cpuToggleRangeStr\", \"cpu_summary\", \"2\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneDay\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"cpuDropdown\", \"cpuToggleRangeStr\", \"cpu_summary\", \"3\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\")))])])])])], 1)]), _vm._v(\" \"), _c(\"chart\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.isEmptyCpu,\n      expression: \"!isEmptyCpu\"\n    }],\n    ref: \"cpuLine1\",\n    attrs: {\n      option: _vm.cpuLine,\n      autoresize: \"\",\n      loading: _vm.cpuChartLoading,\n      \"loading-options\": _vm.chartLoadingOption\n    }\n  }), _vm._v(\" \"), _c(\"bk-exception\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isEmptyCpu,\n      expression: \"isEmptyCpu\"\n    }],\n    staticClass: \"exception-wrap-item exception-part\",\n    attrs: {\n      type: \"empty\",\n      scene: \"part\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"part top-right\"\n  }, [_c(\"div\", {\n    staticClass: \"info\"\n  }, [_c(\"div\", {\n    staticClass: \"left\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.ramUsageRate\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"right\"\n  }, [_c(\"bk-dropdown-menu\", {\n    ref: \"memoryDropdown\",\n    attrs: {\n      align: \"right\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      cursor: \"pointer\"\n    },\n    attrs: {\n      slot: \"dropdown-trigger\"\n    },\n    slot: \"dropdown-trigger\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.memToggleRangeStr))]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"dropdown-button\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-angle-down\"\n  })])]), _vm._v(\" \"), _c(\"ul\", {\n    staticClass: \"bk-dropdown-list\",\n    attrs: {\n      slot: \"dropdown-content\"\n    },\n    slot: \"dropdown-content\"\n  }, [_c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"memoryDropdown\", \"memToggleRangeStr\", \"mem\", \"1\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneHour\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"memoryDropdown\", \"memToggleRangeStr\", \"mem\", \"2\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneDay\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"memoryDropdown\", \"memToggleRangeStr\", \"mem\", \"3\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\")))])])])])], 1)]), _vm._v(\" \"), _c(\"chart\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.isEmptyMemory,\n      expression: \"!isEmptyMemory\"\n    }],\n    ref: \"memoryLine1\",\n    attrs: {\n      option: _vm.memoryLine,\n      loading: _vm.memChartLoading,\n      \"loading-options\": _vm.chartLoadingOption,\n      autoresize: \"\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-exception\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isEmptyMemory,\n      expression: \"isEmptyMemory\"\n    }],\n    staticClass: \"exception-wrap-item exception-part\",\n    attrs: {\n      type: \"empty\",\n      scene: \"part\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"node-overview-chart\"\n  }, [_c(\"div\", {\n    staticClass: \"part bottom-left\"\n  }, [_c(\"div\", {\n    staticClass: \"info\"\n  }, [_c(\"div\", {\n    staticClass: \"left\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.networkIo\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"right\"\n  }, [_c(\"bk-dropdown-menu\", {\n    ref: \"networkDropdown\",\n    attrs: {\n      align: \"right\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      cursor: \"pointer\"\n    },\n    attrs: {\n      slot: \"dropdown-trigger\"\n    },\n    slot: \"dropdown-trigger\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.networkToggleRangeStr))]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"dropdown-button\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-angle-down\"\n  })])]), _vm._v(\" \"), _c(\"ul\", {\n    staticClass: \"bk-dropdown-list\",\n    attrs: {\n      slot: \"dropdown-content\"\n    },\n    slot: \"dropdown-content\"\n  }, [_c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"networkDropdown\", \"networkToggleRangeStr\", \"net\", \"1\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneHour\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"networkDropdown\", \"networkToggleRangeStr\", \"net\", \"2\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneDay\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"networkDropdown\", \"networkToggleRangeStr\", \"net\", \"3\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\")))])])])])], 1)]), _vm._v(\" \"), _c(\"chart\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.isEmptyNetwork,\n      expression: \"!isEmptyNetwork\"\n    }],\n    ref: \"networkLine1\",\n    attrs: {\n      option: _vm.networkLine,\n      loading: _vm.netChartLoading,\n      \"loading-options\": _vm.chartLoadingOption,\n      autoresize: \"\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-exception\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isEmptyNetwork,\n      expression: \"isEmptyNetwork\"\n    }],\n    staticClass: \"exception-wrap-item exception-part\",\n    attrs: {\n      type: \"empty\",\n      scene: \"part\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"part\"\n  }, [_c(\"div\", {\n    staticClass: \"info\"\n  }, [_c(\"div\", {\n    staticClass: \"left\"\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.diskIo\")))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"right\"\n  }, [_c(\"bk-dropdown-menu\", {\n    ref: \"storageDropdown\",\n    attrs: {\n      align: \"right\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      cursor: \"pointer\"\n    },\n    attrs: {\n      slot: \"dropdown-trigger\"\n    },\n    slot: \"dropdown-trigger\"\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.storageToggleRangeStr))]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"dropdown-button\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-angle-down\"\n  })])]), _vm._v(\" \"), _c(\"ul\", {\n    staticClass: \"bk-dropdown-list\",\n    attrs: {\n      slot: \"dropdown-content\"\n    },\n    slot: \"dropdown-content\"\n  }, [_c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"storageDropdown\", \"storageToggleRangeStr\", \"io\", \"1\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneHour\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"storageDropdown\", \"storageToggleRangeStr\", \"io\", \"2\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneDay\")))])]), _vm._v(\" \"), _c(\"li\", [_c(\"a\", {\n    attrs: {\n      href: \"javascript:;\"\n    },\n    on: {\n      click: function ($event) {\n        $event.stopPropagation();\n        return _vm.toggleRange(\"storageDropdown\", \"storageToggleRangeStr\", \"io\", \"3\");\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"environment.nodeInfo.oneWeek\")))])])])])], 1)]), _vm._v(\" \"), _c(\"chart\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: !_vm.isEmptyDiskio,\n      expression: \"!isEmptyDiskio\"\n    }],\n    ref: \"storageLine1\",\n    attrs: {\n      option: _vm.storageLine,\n      loading: _vm.ioChartLoading,\n      \"loading-options\": _vm.chartLoadingOption,\n      autoresize: \"\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-exception\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.isEmptyDiskio,\n      expression: \"isEmptyDiskio\"\n    }],\n    staticClass: \"exception-wrap-item exception-part\",\n    attrs: {\n      type: \"empty\",\n      scene: \"part\"\n    }\n  })], 1)])]);\n};\nvar node_overview_chartvue_type_template_id_b2e644f0_staticRenderFns = [];\nnode_overview_chartvue_type_template_id_b2e644f0_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue?vue&type=template&id=b2e644f0\n\n// EXTERNAL MODULE: ../node_modules/echarts/lib/extension.js\nvar extension = __webpack_require__(4653);\n// EXTERNAL MODULE: ../node_modules/vue-echarts/dist/index.esm.min.js + 2 modules\nvar index_esm_min = __webpack_require__(4483);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/renderer/installCanvasRenderer.js + 2 modules\nvar installCanvasRenderer = __webpack_require__(9777);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/chart/line/install.js + 20 modules\nvar install = __webpack_require__(8546);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/grid/install.js + 16 modules\nvar grid_install = __webpack_require__(5495);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/tooltip/install.js + 5 modules\nvar tooltip_install = __webpack_require__(8491);\n// EXTERNAL MODULE: ../node_modules/echarts/lib/component/legend/install.js + 10 modules\nvar legend_install = __webpack_require__(6997);\n;// CONCATENATED MODULE: ./src/utils/chart-option.js\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\n\nconst localeEnvObj = window.devops.$i18n.t('environment');\nconst nodeOverview = {\n  // cpu 使用率图表\n  cpu: {\n    tooltip: {\n      trigger: 'axis',\n      confine: true,\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        if (params[0].value[1] === undefined) {\n          ret = `<div>${localeEnvObj.noDate}</div>`;\n        } else {\n          ret = `\n                        <div>${(0,util/* convertTime */.t)(Date.parse(params[0].value[0]))}</div>\n                        <div>${params[0].marker}${localeEnvObj.nodeInfo.cpuUsageRate}：${params[0].value[1]}%</div>\n                    `;\n        }\n        return ret;\n      }\n    },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n        }\n      },\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      // min: 0,\n      // max: 100,\n      // interval: 25,\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          return `${value}%`;\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      name: `${localeEnvObj.nodeInfo.cpuUsageRate}`,\n      showSymbol: false,\n      smooth: true,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#30d878' // 0% 处的颜色\n            }, {\n              offset: 1,\n              color: '#c0f3d6' // 100% 处的颜色\n            }],\n            globalCoord: false\n          }\n        }\n      },\n      itemStyle: {\n        normal: {\n          color: '#30d878'\n        }\n      },\n      data: []\n    }]\n  },\n  // 内存使用率\n  memory: {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        if (params[0].value[1] === undefined) {\n          ret = `<div>${localeEnvObj.noDate}</div>`;\n        } else {\n          ret = `\n                        <div>${(0,util/* convertTime */.t)(Date.parse(params[0].value[0]))}</div>\n                        <div>${params[0].marker}${localeEnvObj.nodeInfo.ramUsageRate}：${params[0].value[1]}%</div>\n                    `;\n        }\n        return ret;\n      }\n    },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          return `${value}%`;\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      name: 'total',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {\n          // color: {\n          //     type: 'linear',\n          //     x: 0,\n          //     y: 0,\n          //     x2: 0,\n          //     y2: 1,\n          //     colorStops: [\n          //         {\n          //             offset: 0, color: '#52a2ff' // 0% 处的颜色\n          //         },\n          //         {\n          //             offset: 1, color: '#a9d1ff' // 100% 处的颜色\n          //         }\n          //     ],\n          //     globalCoord: false\n          // }\n        }\n      },\n      // itemStyle: {\n      //     normal: {\n      //         color: '#52a2ff'\n      //     }\n      // }\n      data: []\n    }\n    // {\n    //     type: 'line',\n    //     name: 'used',\n    //     smooth: true,\n    //     showSymbol: false,\n    //     hoverAnimation: false,\n    //     areaStyle: {\n    //         normal: {\n    //             // color: {\n    //             //     type: 'linear',\n    //             //     x: 0,\n    //             //     y: 0,\n    //             //     x2: 0,\n    //             //     y2: 1,\n    //             //     colorStops: [\n    //             //         {\n    //             //             offset: 0, color: '#52a2ff' // 0% 处的颜色\n    //             //         },\n    //             //         {\n    //             //             offset: 1, color: '#a9d1ff' // 100% 处的颜色\n    //             //         }\n    //             //     ],\n    //             //     globalCoord: false\n    //             // }\n    //         }\n    //     }\n    //     // itemStyle: {\n    //     //     normal: {\n    //     //         color: 'red'\n    //     //     }\n    //     // }\n    // }\n    ]\n  },\n  // 网络使用率\n  network: {\n    tooltip: {\n      trigger: 'axis',\n      position: function (point, params, dom, rect, size) {\n        // 提示框高度\n        const boxHeight = size.contentSize[1];\n        return [point[0] + 20, point[1] - boxHeight / 2];\n      },\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        ret = `<div>${(0,util/* convertTime */.t)(Date.parse(params[0].value[0]))}</div>`;\n        params.forEach(item => {\n          let displayTime;\n          if (item.value[1] / (8 * 1024 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024 * 1024 * 1024) || 0).toFixed(2)}G`;\n          } else if (item.value[1] / (8 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024 * 1024) || 0).toFixed(2)}MB`;\n          } else if (item.value[1] / (8 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (8 * 1024) || 0).toFixed(2)}KB`;\n          } else {\n            displayTime = `${(item.value[1] / 8 || 0).toFixed(2)}B`;\n          }\n          ret += `<div>${item.marker}${item.seriesName}：${displayTime}</div>`;\n        });\n        return ret;\n      }\n    },\n    // legend: {\n    //     data: ['sent', 'recv']\n    // },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '50%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          console.log(value);\n          if (value / (8 * 1024 * 1024 * 1024) > 1) {\n            return `${(value / (8 * 1024 * 1024 * 1024)).toFixed(1)}G`;\n          } else if (value / (8 * 1024 * 1024) > 1) {\n            return `${(value / (8 * 1024 * 1024)).toFixed(1)}MB`;\n          } else if (value / (8 * 1024) > 1) {\n            return `${(value / (8 * 1024)).toFixed(1)}KB`;\n          } else {\n            return `${value / 8}B`;\n          }\n        }\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      // showSymbol: true,\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: '#ffbe21'\n        }\n      },\n      data: []\n    }, {\n      type: 'line',\n      // showSymbol: true,\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: 'red'\n        }\n      },\n      data: []\n    }]\n  },\n  // 存储使用率\n  storage: {\n    tooltip: {\n      trigger: 'axis',\n      // position: function (point, params, dom, rect, size) {\n      //     // 提示框高度\n      //     var boxHeight = size.contentSize[1]\n      //     return [point[0] + 20, point[1] - (boxHeight / 2)]\n      // },\n      axisPointer: {\n        type: 'line',\n        animation: false,\n        label: {\n          backgroundColor: '#6a7985'\n        }\n      },\n      formatter(params, ticket, callback) {\n        let ret;\n        ret = `<div>${(0,util/* convertTime */.t)(Date.parse(params[0].value[0]))}</div>`;\n        params.forEach(item => {\n          let displayTime;\n          if (item.value[1] / (1024 * 1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (1024 * 1024 * 1024) || 0).toFixed(2)}G`;\n          } else if (item.value[1] / (1024 * 1024) >= 1) {\n            displayTime = `${(item.value[1] / (1024 * 1024) || 0).toFixed(2)}MB`;\n          } else if (item.value[1] / 1024 >= 1) {\n            displayTime = `${(item.value[1] / 1024 || 0).toFixed(2)}KB`;\n          } else {\n            displayTime = `${item.value[1] || 0}B`;\n          }\n          ret += `<div>${item.marker}${item.seriesName}：${displayTime}</div>`;\n        });\n        return ret;\n      }\n    },\n    // legend: {\n    //     data: ['sent', 'recv']\n    // },\n    grid: {\n      show: false,\n      top: '4%',\n      left: '4%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 5,\n        lineStyle: {\n          color: '#ebf0f5'\n          // color: '#868b97'\n        }\n      },\n      axisLabel: {\n        color: '#868b97'\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    yAxis: [{\n      boundaryGap: [0, '2%'],\n      type: 'value',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#dde4eb'\n        }\n      },\n      axisTick: {\n        alignWithLabel: true,\n        length: 0,\n        lineStyle: {\n          color: 'red'\n        }\n      },\n      axisLabel: {\n        color: '#868b97',\n        formatter(value, index) {\n          if (value / (1024 * 1024 * 1024) > 1) {\n            return `${(value / (1024 * 1024 * 1024)).toFixed(0)}G`;\n          } else if (value / (1024 * 1024) > 1) {\n            return `${(value / (1024 * 1024)).toFixed(0)}MB`;\n          } else if (value / 1024 > 1) {\n            return `${(value / 1024).toFixed(0)}KB`;\n          } else {\n            return `${value}B`;\n          }\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: ['#ebf0f5'],\n          type: 'dashed'\n        }\n      }\n    }],\n    series: [{\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: '#ffbe21'\n        }\n      },\n      data: []\n    }, {\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      hoverAnimation: false,\n      areaStyle: {\n        normal: {}\n      },\n      itemStyle: {\n        normal: {\n          color: 'red'\n        }\n      },\n      data: []\n    }]\n  }\n};\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-overview-chart.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n(0,extension/* use */.Y)([installCanvasRenderer/* install */.a, install/* install */.a, grid_install/* install */.a, tooltip_install/* install */.a, legend_install/* install */.a]);\n/* harmony default export */ const node_overview_chartvue_type_script_lang_js = ({\n  components: {\n    chart: index_esm_min/* default */.Ay\n  },\n  data() {\n    return {\n      isEmptyCpu: false,\n      isEmptyMemory: false,\n      isEmptyNetwork: false,\n      isEmptyDiskio: false,\n      cpuToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      memToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      networkToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      storageToggleRangeStr: this.$t('environment.nodeInfo.oneHour'),\n      cpuLine: nodeOverview.cpu,\n      memoryLine: nodeOverview.memory,\n      networkLine: nodeOverview.network,\n      storageLine: nodeOverview.storage,\n      cpuChartLoading: false,\n      memChartLoading: false,\n      netChartLoading: false,\n      ioChartLoading: false\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    chartLoadingOption() {\n      return {\n        text: this.$t('environment.loading'),\n        color: '#30d878',\n        maskColor: 'rgba(255, 255, 255, 0.8)'\n      };\n    }\n  },\n  created() {\n    bus.$off('refreshCharts');\n    bus.$on('refreshCharts', () => {\n      this.fetchData('cpu_summary', this.cpuToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.cpuToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('mem', this.memToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.memToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('net', this.networkToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.networkToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n      this.fetchData('io', this.storageToggleRangeStr === this.$t('environment.nodeInfo.oneHour') ? '1' : this.storageToggleRangeStr === this.$t('environment.nodeInfo.oneDay') ? '2' : '3');\n    });\n  },\n  mounted() {\n    this.fetchData('cpu_summary', '1');\n    this.fetchData('mem', '1');\n    this.fetchData('net', '1');\n    this.fetchData('io', '1');\n  },\n  methods: {\n    toggleRange(dropdownRef, toggleRangeStr, idx, range) {\n      if (range === '1') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneHour');\n      } else if (range === '2') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneDay');\n      } else if (range === '3') {\n        this[toggleRangeStr] = this.$t('environment.nodeInfo.oneWeek');\n      }\n      this.$refs[dropdownRef].hide();\n      this.fetchData(idx, range);\n    },\n    async fetchData(idx, range) {\n      const params = {\n        projectId: this.projectId,\n        nodeHashId: this.nodeHashId,\n        timeRange: range === '1' ? 'HOUR' : range === '2' ? 'DAY' : 'WEEK'\n      };\n\n      // 设置图表数据的方法名\n      let hookFuncName;\n      if (idx === 'cpu_summary') {\n        hookFuncName = 'setCpuData';\n        this.cpuChartLoading = true;\n      } else if (idx === 'mem') {\n        hookFuncName = 'setMemData';\n        this.memChartLoading = true;\n      } else if (idx === 'io') {\n        hookFuncName = 'setStorageData';\n        this.ioChartLoading = true;\n      } else if (idx === 'net') {\n        hookFuncName = 'setNetworkData';\n        this.netChartLoading = true;\n      }\n      if (hookFuncName) {\n        this[hookFuncName](params);\n      }\n    },\n    async setCpuData(params) {\n      const chartData = [];\n      const emptyData = [];\n      try {\n        const res = await this.$store.dispatch('environment/getNodeCpuMetrics', {\n          params\n        });\n        console.log(res);\n        if (res.usage_user.length) {\n          this.isEmptyCpu = false;\n          res.usage_user.forEach(item => {\n            chartData.push({\n              value: [item.time, item.usage_user && item.usage_user.toFixed(2)]\n            });\n            emptyData.push(0);\n          });\n          this.$nextTick(() => {\n            this.cpuLine.series[0].data.splice(0, this.cpuLine.series[0].data.length, ...chartData);\n            this.cpuChartLoading = false;\n          });\n        } else {\n          this.isEmptyCpu = true;\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setMemData(params) {\n      const chartData = [];\n      const emptyData = [];\n      try {\n        const res = await this.$store.dispatch('environment/getNodeMemoryMetrics', {\n          params\n        });\n        if (res.used_percent.length) {\n          this.isEmptyMemory = false;\n          res.used_percent.forEach(item => {\n            chartData.push({\n              value: [item.time, item.used_percent && item.used_percent.toFixed(2)]\n            });\n            emptyData.push(0);\n          });\n          this.$nextTick(() => {\n            this.memoryLine.series[0].data.splice(0, this.memoryLine.series[0].data.length, ...chartData);\n            this.memChartLoading = false;\n          });\n        } else {\n          this.isEmptyMemory = true;\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setNetworkData(params) {\n      try {\n        const res = await this.$store.dispatch('environment/getNodeNetworkMetrics', {\n          params\n        });\n        if (JSON.stringify(res) === '{}') {\n          this.isEmptyNetwork = true;\n        } else {\n          const readChartData = [];\n          this.isEmptyNetwork = false;\n          Object.keys(res).forEach(item => {\n            const data = [];\n            res[item].forEach(val => {\n              data.push({\n                value: [val.time, val[item] && val[item].toFixed(2)]\n              });\n            });\n            readChartData.push({\n              type: 'line',\n              name: item,\n              showSymbol: false,\n              data: data,\n              itemStyle: {\n                normal: {\n                  lineStyle: {\n                    width: 1 // 设置线条粗细\n                  }\n                }\n              }\n            });\n          });\n          this.$nextTick(() => {\n            this.networkLine.series.splice(0, this.networkLine.series.length, ...(readChartData || []));\n            this.netChartLoading = false;\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async setStorageData(params) {\n      try {\n        const res = await this.$store.dispatch('environment/getNodeDiskioMetrics', {\n          params\n        });\n        if (JSON.stringify(res) === '{}') {\n          this.isEmptyDiskio = true;\n        } else {\n          const readChartData = [];\n          this.isEmptyDiskio = false;\n          Object.keys(res).forEach(item => {\n            const data = [];\n            res[item].forEach(val => {\n              data.push({\n                value: [val.time, val[item] && val[item].toFixed(2)]\n              });\n            });\n            readChartData.push({\n              type: 'line',\n              name: item,\n              showSymbol: false,\n              data: data,\n              itemStyle: {\n                normal: {\n                  lineStyle: {\n                    width: 1 // 设置线条粗细\n                  }\n                }\n              }\n            });\n          });\n          this.$nextTick(() => {\n            this.storageLine.series.splice(0, this.storageLine.series.length, ...(readChartData || []));\n            this.ioChartLoading = false;\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue?vue&type=script&lang=js\n /* harmony default export */ const devops_node_overview_chartvue_type_script_lang_js = (node_overview_chartvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/node-overview-chart.vue?vue&type=style&index=0&id=b2e644f0&prod&lang=scss\nvar node_overview_chartvue_type_style_index_0_id_b2e644f0_prod_lang_scss = __webpack_require__(5037);\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue?vue&type=style&index=0&id=b2e644f0&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/node-overview-chart.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_overview_chart_component = (0,componentNormalizer/* default */.A)(\n  devops_node_overview_chartvue_type_script_lang_js,\n  node_overview_chartvue_type_template_id_b2e644f0_render,\n  node_overview_chartvue_type_template_id_b2e644f0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const node_overview_chart = (node_overview_chart_component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/node_detail.vue?vue&type=script&lang=js\n\n\n\n\n\n/* harmony default export */ const node_detailvue_type_script_lang_js = ({\n  components: {\n    nodeDetailTab: node_detail_tab,\n    nodeOverviewChart: node_overview_chart\n  },\n  data() {\n    return {\n      showContent: false,\n      editable: false,\n      basePrototypeList: [{\n        id: 'hostname',\n        name: this.$t('environment.nodeInfo.hostName'),\n        value: ''\n      }, {\n        id: 'ip',\n        name: 'IP',\n        value: ''\n      }, {\n        id: 'ncpus',\n        name: 'CPU',\n        value: ''\n      }, {\n        id: 'memTotal',\n        name: this.$t('environment.nodeInfo.ram'),\n        value: ''\n      }, {\n        id: 'createdUser',\n        name: this.$t('environment.nodeInfo.owner'),\n        value: ''\n      }, {\n        id: 'osName',\n        name: 'OS',\n        value: ''\n      }],\n      loading: {\n        isLoading: false,\n        title: this.$t('environment.loadingTitle')\n      },\n      isEnableDashboard: false,\n      bizId: 0\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapState)('environment', ['nodeDetails']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    nodeHashId() {\n      return this.$route.params.nodeHashId;\n    },\n    agentLink() {\n      return this.nodeDetails.os === 'WINDOWS' ? this.nodeDetails.agentUrl : this.nodeDetails.agentScript;\n    },\n    jumpDashboardUrl() {\n      return `https://bkm.woa.com/?bizId=${this.bizId}&var-server=${this.nodeDetails.ip}#/grafana/d/bT8qy3NVa`;\n    }\n  },\n  watch: {\n    projectId: async function (val) {\n      this.$router.push({\n        name: 'envList'\n      });\n    },\n    nodeDetails(val) {\n      this.basePrototypeList.forEach(item => {\n        item.value = val[item.id];\n      });\n    }\n  },\n  async mounted() {\n    this.requestNodeDetail();\n    this.getEnableDashboard();\n  },\n  methods: {\n    toNodeList() {\n      this.$router.push({\n        name: 'nodeList'\n      });\n    },\n    async requestNodeDetail() {\n      this.loading.isLoading = true;\n      try {\n        const res = await this.$store.dispatch('environment/requestNodeDetail', {\n          projectId: this.projectId,\n          nodeHashId: this.nodeHashId\n        });\n        this.$store.commit('environment/updateNodeDetail', {\n          res\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        this.loading.isLoading = false;\n        this.showContent = true;\n      }\n    },\n    copyHandle() {\n      if ((0,util/* copyText */.Dk)(this.agentLink)) {\n        this.$bkMessage({\n          theme: 'success',\n          message: this.$t('environment.successfullyCopyed')\n        });\n      }\n    },\n    downloadHandle() {\n      window.location.href = this.nodeDetails.agentUrl;\n    },\n    async saveName() {\n      if (!this.nodeDetails.displayName) {\n        this.$bkMessage({\n          theme: 'error',\n          message: this.$t('environment.nodeInfo.enterDisplayName')\n        });\n      } else {\n        const params = {\n          displayName: this.nodeDetails.displayName.trim()\n        };\n        try {\n          await this.$store.dispatch('environment/updateDisplayName', {\n            projectId: this.projectId,\n            nodeHashId: this.nodeHashId,\n            params\n          });\n          this.editable = false;\n        } catch (err) {\n          this.$bkMessage({\n            theme: 'error',\n            message: err.message ? err.message : err\n          });\n        }\n      }\n    },\n    editNodeName() {\n      this.editable = true;\n      this.$nextTick(() => {\n        this.$refs.nodeName.focus();\n      });\n    },\n    refresh() {\n      this.requestNodeDetail();\n      bus.$emit('refreshEnv');\n      bus.$emit('refreshBuild');\n      bus.$emit('refreshAction');\n      bus.$emit('refreshCharts');\n    },\n    async getEnableDashboard() {\n      try {\n        const res = await this.$store.dispatch('environment/checkEnableDashboard', {\n          projectId: this.projectId\n        });\n        if (res) {\n          this.isEnableDashboard = res.result;\n          this.bizId = res.bizId;\n        }\n      } catch (e) {\n        console.err(e);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/node_detail.vue?vue&type=script&lang=js\n /* harmony default export */ const views_node_detailvue_type_script_lang_js = (node_detailvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/node_detail.vue?vue&type=style&index=0&id=d5c57094&prod&lang=scss\nvar node_detailvue_type_style_index_0_id_d5c57094_prod_lang_scss = __webpack_require__(820);\n;// CONCATENATED MODULE: ./src/views/node_detail.vue?vue&type=style&index=0&id=d5c57094&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/node_detail.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar node_detail_component = (0,componentNormalizer/* default */.A)(\n  views_node_detailvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const node_detail = (node_detail_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5576\n");

/***/ })

}]);
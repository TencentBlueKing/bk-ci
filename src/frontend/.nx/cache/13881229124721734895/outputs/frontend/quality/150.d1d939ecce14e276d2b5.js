/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_quality"] = globalThis["webpackChunkdevops_quality"] || []).push([[150],{

/***/ 9203:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IJ: () => (/* binding */ QUALITY_GROUP_RESOURCE_TYPE),\n/* harmony export */   Jh: () => (/* binding */ RULE_RESOURCE_ACTION),\n/* harmony export */   XX: () => (/* binding */ RULE_RESOURCE_TYPE),\n/* harmony export */   iF: () => (/* binding */ QUALITY_GROUP_RESOURCE_ACTION)\n/* harmony export */ });\n// 质量红线规则权限动作\nconst RULE_RESOURCE_ACTION = {\n  CREATE: 'rule_create',\n  EDIT: 'rule_edit',\n  DELETE: 'rule_delete',\n  ENABLE: 'rule_enable'\n};\nconst RULE_RESOURCE_TYPE = 'rule';\n\n// 质量红线通知组权限动作\nconst QUALITY_GROUP_RESOURCE_ACTION = {\n  CREATE: 'quality_group_create',\n  EDIT: 'quality_group_edit',\n  DELETE: 'quality_group_delete'\n};\nconst QUALITY_GROUP_RESOURCE_TYPE = 'quality_group';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIwMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLXF1YWxpdHkvLi9zcmMvdXRpbHMvcGVybWlzc2lvbi5qcz9lMzUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIOi0qOmHj+e6oue6v+inhOWImeadg+mZkOWKqOS9nFxyXG5leHBvcnQgY29uc3QgUlVMRV9SRVNPVVJDRV9BQ1RJT04gPSB7XHJcbiAgICBDUkVBVEU6ICdydWxlX2NyZWF0ZScsXHJcbiAgICBFRElUOiAncnVsZV9lZGl0JyxcclxuICAgIERFTEVURTogJ3J1bGVfZGVsZXRlJyxcclxuICAgIEVOQUJMRTogJ3J1bGVfZW5hYmxlJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgUlVMRV9SRVNPVVJDRV9UWVBFID0gJ3J1bGUnXHJcblxyXG4vLyDotKjph4/nuqLnur/pgJrnn6Xnu4TmnYPpmZDliqjkvZxcclxuZXhwb3J0IGNvbnN0IFFVQUxJVFlfR1JPVVBfUkVTT1VSQ0VfQUNUSU9OID0ge1xyXG4gICAgQ1JFQVRFOiAncXVhbGl0eV9ncm91cF9jcmVhdGUnLFxyXG4gICAgRURJVDogJ3F1YWxpdHlfZ3JvdXBfZWRpdCcsXHJcbiAgICBERUxFVEU6ICdxdWFsaXR5X2dyb3VwX2RlbGV0ZSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IFFVQUxJVFlfR1JPVVBfUkVTT1VSQ0VfVFlQRSA9ICdxdWFsaXR5X2dyb3VwJ1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9203\n");

/***/ }),

/***/ 7716:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eA: () => (/* binding */ getQueryString),\n/* harmony export */   t: () => (/* binding */ convertTime)\n/* harmony export */ });\n/* unused harmony exports isVNode, isInArray, isInlineElment, getActualTop, getActualLeft, addClass, removeClass, localizeConfig, findValByKeyValue, deepClone, converStrToNum, converStrToArr, convertStrToNumArr, convertFileSize, isObject, mergeModules, getOuterHeight, getOuterWidth, getInnerWidth, deepCopy, hashID, getServiceLogoByPath, getAtomPath, getIconByType */\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7309);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3188);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9297);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction isVNode(node) {\n  return typeof node === 'object' && Object.prototype.hasOwnProperty.call(node, 'componentOptions');\n}\nfunction isInArray(ele, array) {\n  for (const item of array) {\n    if (item === ele) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isInlineElment(node) {\n  const inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'cite', 'code', 'dfn', 'em', 'font', 'i', 'img', 'input', 'kbd', 'label', 'q', 's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup', 'textarea', 'tt', 'u', 'var'];\n  const tag = node.tagName.toLowerCase();\n  const display = getComputedStyle(node).display;\n  if (isInArray(tag, inlineElements) && display === 'index' || display === 'inline') {\n    console.warn('Binding node is displayed as inline element. To avoid some unexpected rendering error, please set binding node displayed as block element.');\n    return true;\n  }\n  return false;\n}\n\n/**\r\n *  获取元素相对于页面的高度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualTop(node) {\n  let actualTop = node.offsetTop;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent;\n  }\n  return actualTop;\n}\n\n/**\r\n *  获取元素相对于页面左侧的宽度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualLeft(node) {\n  let actualLeft = node.offsetLeft;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualLeft += current.offsetLeft;\n    current = current.offsetParent;\n  }\n  return actualLeft;\n}\n\n/**\r\n *  对元素添加样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction addClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    if (!node.className && classNames.length === 1) {\n      node.className = className;\n    } else {\n      let setClass = ' ' + node.className + ' ';\n      classNames.forEach(cl => {\n        if (setClass.indexOf(' ' + cl + ' ') < 0) {\n          setClass += cl + ' ';\n        }\n      });\n      const rtrim = /^\\s+|\\s+$/;\n      node.className = setClass.replace(rtrim, '');\n    }\n  }\n}\n\n/**\r\n *  对元素删除样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction removeClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    let setClass = ' ' + node.className + ' ';\n    classNames.forEach(cl => {\n      setClass = setClass.replace(' ' + cl + ' ', ' ');\n    });\n    const rtrim = /^\\s+|\\s+$/;\n    node.className = setClass.replace(rtrim, '');\n  }\n}\n\n/**\r\n *  将传入的配置项转成本地的对象\r\n *  @param config {Object} 传入的对象\r\n *  @return obj {Object} 本地化之后的对象\r\n */\nfunction localizeConfig(config) {\n  const obj = {};\n  for (const key in config) {\n    obj[key] = config[key];\n  }\n  return obj;\n}\n\n/**\r\n *  在一个元素为对象的数组中，根据oldKey: oldValue找到指定的数组元素，并返回该数组元素中指定key的value\r\n *  @param arr - 元素为对象的数组\r\n *  @param oldKey - 查找的key\r\n *  @param oldValue - 查找的value\r\n *  @param key - 需要返回的value的指定的key\r\n *  @return result - 找到的value值，未找到返回undefined\r\n */\nfunction findValByKeyValue(arr, oldKey, oldValue, key) {\n  let result;\n  for (const obj of arr) {\n    for (const _key in obj) {\n      if (_key === oldKey && obj[_key] === oldValue) {\n        result = obj[key];\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction deepClone(obj) {\n  const _obj = {};\n  for (const key in obj) {\n    if (obj[key].toString().toLowerCase() === '[object object]') {\n      _obj[key] = deepClone(obj[key]);\n    } else {\n      _obj[key] = key === 'text' ? '' : obj[key];\n    }\n  }\n  return _obj;\n}\n\n/**\r\n *  将字符串去掉指定内容之后转成数字\r\n *  @param {String} str - 需要转换的字符串\r\n *  @param {String} indicator - 需要被去掉的内容\r\n */\nfunction converStrToNum(str, indicator) {\n  const reg = new RegExp(indicator, 'g');\n  const $str = str.replace(reg, '');\n  return ~~$str;\n}\n\n/**\r\n *  将字符串根据indicator转成数组\r\n */\nfunction converStrToArr(str, indicator) {\n  return str.length ? str.split(indicator) : [];\n}\n\n/**\r\n * 将字符串根据indicator转成数组并将内容都转成Number类型（仅限数组内容均为数字的字符串）\r\n */\nfunction convertStrToNumArr(str, indicator) {\n  return converStrToArr(str, indicator).map(item => {\n    return ~~item;\n  });\n}\nfunction prezero(num) {\n  num = Number(num);\n  if (num < 10) {\n    return '0' + num;\n  }\n  return num;\n}\nfunction convertTime(ms) {\n  if (!ms) {\n    return '--';\n  }\n  const time = new Date(ms);\n  return `${time.getFullYear()}-${prezero(time.getMonth() + 1)}-${prezero(time.getDate())} ${prezero(time.getHours())}:${prezero(time.getMinutes())}:${prezero(time.getSeconds())}`;\n}\n\n/**\r\n *  转换文件大小\r\n */\nfunction convertFileSize(size, unit) {\n  const arr = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const calcSize = size / 1024;\n  let index;\n  arr.some((item, _index) => {\n    if (unit === item) {\n      index = _index;\n      return true;\n    }\n    return false;\n  });\n  const next = arr[index + 1];\n  if (calcSize > 1024) {\n    if (!next) {\n      return `${calcSize.toFixed(2)}${unit}`;\n    } else {\n      return convertFileSize(calcSize, next);\n    }\n  } else {\n    return `${calcSize.toFixed(2)}${next || unit}`;\n  }\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction mergeModules(target) {\n  for (var _len = arguments.length, modules = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    modules[_key2 - 1] = arguments[_key2];\n  }\n  return modules.reduce((merged, mod) => {\n    Object.keys(mod).forEach(key => {\n      if (isObject(merged[key]) && isObject(mod[key])) {\n        merged[key] = {\n          ...merged[key],\n          ...mod[key]\n        };\n      }\n    });\n    return merged;\n  }, target);\n}\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterHeight = (selector, parent) => {\n  const {\n    marginTop,\n    height,\n    marginBottom\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginTop) + parseFloat(height) + parseFloat(marginBottom);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterWidth = (selector, parent) => {\n  const {\n    marginLeft,\n    width,\n    marginRight\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginLeft) + parseFloat(width) + parseFloat(marginRight);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getInnerWidth = (selector, parent) => {\n  const {\n    width\n  } = getDOMRect(selector, parent);\n  return parseFloat(width);\n};\nconst getDOMRect = (selector, parent) => {\n  const target = isDOMElement(selector) ? selector : parent ? parent.querySelector(selector) : document.querySelector(selector);\n  if (!target) {\n    return {};\n  }\n  const style = window.getComputedStyle(target);\n  return {\n    width: style.width,\n    height: style.height,\n    marginTop: style.marginTop,\n    marginBottom: style.marginBottom,\n    marginLeft: style.marginLeft,\n    marginRight: style.marginRight\n  };\n};\nconst isDOMElement = obj => {\n  return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n};\nconst deepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\nconst hashID = function () {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let pos = 0;\n  let result = '';\n  while (pos < length) {\n    const n = Math.round(Math.random() * 126) + 33;\n    result += String.fromCharCode(n);\n    pos++;\n  }\n  return result;\n};\nfunction getServiceLogoByPath(link) {\n  return link.replace(/\\/?(devops\\/)?(\\w+)\\S*$/, '$2');\n}\nfunction getAtomPath() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return args.join('-');\n}\n\n/**\r\n *  获取url参数值\r\n */\nfunction getQueryString(name) {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\n  const r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\nconst ICON_MAP = {\n  manualTrigger: 'manual',\n  timerTrigger: 'timer',\n  codeGitWebHookTrigger: 'git',\n  codeSVNWebHookTrigger: 'svn',\n  codeGitlabWebHookTrigger: 'gitlab',\n  CODE_GIT: 'git',\n  CODE_SVN: 'svn',\n  CODE_GITLAB: 'gitlab',\n  linuxScript: 'script',\n  powerScript: 'script',\n  linuxPaasCodeCCScript: 'script',\n  xcodeBuild: 'xcode',\n  unity3dBuild: 'unity',\n  deployDistribution: 'deploy',\n  fileArchive: 'archive',\n  ipaFileArchive: 'ipa',\n  sendRTXNotify: 'wework',\n  sendEmailNotify: 'email',\n  sendSmsNotify: 'sms',\n  sendWechatNotify: 'weixin',\n  gcloud: 'deploy',\n  jobExecuteTaskExt: 'deploy',\n  metaFileScan: 'order',\n  unity3dScan: 'order',\n  sensitiveScan: 'order'\n};\nfunction getIconByType(type) {\n  return ICON_MAP[type] || 'order';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7716\n");

/***/ }),

/***/ 990:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wellKnownSymbol = __webpack_require__(7166);\nvar create = __webpack_require__(3981);\nvar defineProperty = (__webpack_require__(7614).f);\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtcXVhbGl0eS8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzLmpzPzc3OTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG5cbnZhciBVTlNDT1BBQkxFUyA9IHdlbGxLbm93blN5bWJvbCgndW5zY29wYWJsZXMnKTtcbnZhciBBcnJheVByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZTtcblxuLy8gQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5pZiAoQXJyYXlQcm90b3R5cGVbVU5TQ09QQUJMRVNdID09IHVuZGVmaW5lZCkge1xuICBkZWZpbmVQcm9wZXJ0eShBcnJheVByb3RvdHlwZSwgVU5TQ09QQUJMRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGNyZWF0ZShudWxsKVxuICB9KTtcbn1cblxuLy8gYWRkIGEga2V5IHRvIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///990\n");

/***/ }),

/***/ 7406:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar $ = __webpack_require__(5689);\nvar $includes = (__webpack_require__(5254).includes);\nvar fails = __webpack_require__(8462);\nvar addToUnscopables = __webpack_require__(990);\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQwNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtcXVhbGl0eS8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzPzIyZjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzJykuaW5jbHVkZXM7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcycpO1xuXG4vLyBGRjk5KyBidWdcbnZhciBCUk9LRU5fT05fU1BBUlNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIUFycmF5KDEpLmluY2x1ZGVzKCk7XG59KTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogQlJPS0VOX09OX1NQQVJTRSB9LCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhlbCAvKiAsIGZyb21JbmRleCA9IDAgKi8pIHtcbiAgICByZXR1cm4gJGluY2x1ZGVzKHRoaXMsIGVsLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5hZGRUb1Vuc2NvcGFibGVzKCdpbmNsdWRlcycpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7406\n");

/***/ }),

/***/ 6466:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937568938\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ2Ni5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtcXVhbGl0eS8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9jdXN0b20tc2VsZWN0b3IvaW5kZXgudnVlPzM5NjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU2ODkzOFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6466\n");

/***/ }),

/***/ 127:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937560310\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI3LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rldm9wcy1xdWFsaXR5Ly4vc3JjL2NvbXBvbmVudHMvZGV2b3BzL1N0YWZmSW5wdXQvaW5kZXgudnVlPzNlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU2MDMxMFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///127\n");

/***/ }),

/***/ 6709:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937557780\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcwOS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtcXVhbGl0eS8uL3NyYy9jb21wb25lbnRzL2Rldm9wcy9Vc2VySW5wdXQvaW5kZXgudnVlP2UwN2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU1Nzc4MFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6709\n");

/***/ }),

/***/ 3370:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937557772\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM3MC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtcXVhbGl0eS8uL3NyYy9jb21wb25lbnRzL2Rldm9wcy9jcmVhdGVfZ3JvdXAudnVlPzMzYTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU1Nzc3MlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3370\n");

/***/ }),

/***/ 1708:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ StaffInput)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/StaffInput/index.vue?vue&type=template&id=129aff80\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"custom-selector\", {\n    attrs: {\n      name: \"value\",\n      type: \"text\",\n      value: _vm.curInsertVal,\n      disabled: _vm.disabled,\n      placeholder: _vm.placeholder,\n      config: _vm.dataInputConfig,\n      \"selected-list\": _vm.value,\n      \"set-vaule\": _vm.setVaule,\n      \"delete-item\": _vm.deleteItem\n    }\n  });\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/StaffInput/index.vue?vue&type=template&id=129aff80\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/custom-selector/index.vue?vue&type=template&id=7385d250&scoped=true\nvar custom_selectorvue_type_template_id_7385d250_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"devops-staff-selector\",\n    on: {\n      click: _vm.toEdit\n    }\n  }, [_c(\"div\", {\n    class: [\"devops-staff-input\", {\n      active: _vm.isEdit,\n      disabled: _vm.disabled\n    }]\n  }, [!_vm.isEdit && !_vm.selectedList.length && !_vm.value.length ? _c(\"span\", {\n    staticClass: \"placeholder\"\n  }, [_vm._v(_vm._s(_vm.placeholder))]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"tag-list\",\n    class: !_vm.selectedList.length ? \"no-item\" : \"\"\n  }, [_c(\"div\", {\n    ref: \"selectEditor\",\n    staticClass: \"select-editor\"\n  }, [_vm._l(_vm.selectedList, function (entry, index) {\n    return _c(\"span\", {\n      key: index,\n      staticClass: \"tag-info\",\n      on: {\n        click: function ($event) {\n          return _vm.selectInfo($event, entry);\n        }\n      }\n    }, [_vm._v(_vm._s(entry))]);\n  }), _vm._v(\" \"), _c(\"input\", {\n    ref: \"staffInput\",\n    staticClass: \"form-input\",\n    attrs: {\n      type: \"text\",\n      id: \"staffInput\",\n      autocomplete: \"off\",\n      name: _vm.name\n    },\n    domProps: {\n      value: _vm.value\n    },\n    on: {\n      input: _vm.input,\n      keydown: _vm.keydown,\n      mousedown: _vm.mousedown,\n      paste: _vm.paste,\n      blur: _vm.hideAll\n    }\n  })], 2)])]), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showList && _vm.list.length,\n      expression: \"showList && list.length\"\n    }],\n    staticClass: \"staff-selector-list\"\n  }, [_c(\"ul\", {\n    ref: \"selectorList\",\n    staticClass: \"outside-ul\"\n  }, _vm._l(_vm.list, function (data, index) {\n    return _c(\"li\", {\n      key: index,\n      staticClass: \"staff-selector-list-item\",\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.selectList(data);\n        }\n      }\n    }, [_c(\"div\", {\n      staticClass: \"selector-node\",\n      class: _vm.activeClass(index)\n    }, [_c(\"img\", {\n      staticClass: \"avatar\",\n      attrs: {\n        src: _vm.localCoverAvatar(data)\n      }\n    }), _vm._v(\" \"), _c(\"span\", {\n      staticClass: \"text\"\n    }, [_vm._v(_vm._s(data))])])]);\n  }), 0)])]);\n};\nvar custom_selectorvue_type_template_id_7385d250_scoped_true_staticRenderFns = [];\ncustom_selectorvue_type_template_id_7385d250_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/common/custom-selector/index.vue?vue&type=template&id=7385d250&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(3188);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(9297);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/custom-selector/index.vue?vue&type=script&lang=js\n\n\n/* harmony default export */ const custom_selectorvue_type_script_lang_js = ({\n  props: {\n    config: {\n      type: Object,\n      default: {\n        initData: [],\n        data: [],\n        onChange: () => {}\n      },\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    selectedList: {\n      type: Array,\n      default: []\n    },\n    setVaule: Function,\n    deleteItem: Function\n  },\n  data() {\n    return {\n      isEdit: false,\n      showList: false,\n      isSelected: false,\n      focusList: '',\n      minscroll: 0,\n      maxscroll: 6,\n      list: []\n    };\n  },\n  watch: {\n    'config.data'(val) {\n      this.getData();\n    },\n    value(val) {\n      if (this.list.length && val.length) {\n        this.showList = true;\n        this.$refs.selectorList.scrollTop = 0;\n      } else {\n        setTimeout(() => {\n          this.showList = false;\n        }, 250);\n      }\n      if (val.length) this.$refs.staffInput.style.width = val.length * 20 + 'px';\n    }\n  },\n  created() {\n    this.getData();\n  },\n  methods: {\n    input(e) {\n      e.preventDefault();\n\n      // 重置下拉菜单选中信息\n      this.focusList = 0;\n      this.minscroll = 0;\n      this.maxscroll = 6;\n      this.$refs.selectorList.scrollTop = 0;\n      this.isEdit = true;\n      const {\n        value\n      } = e.target;\n      this.config.onChange(this.name, value);\n      if (value.length) this.filterData(value);\n    },\n    paste(e) {\n      e.preventDefault();\n      const value = e.clipboardData.getData('text');\n      const validateRes = this.validate(value);\n      try {\n        if (value && validateRes.reg && validateRes.target.length > 3) {\n          if (validateRes.isEixt > -1) {\n            throw new Error(`${value}已存在`);\n          } else {\n            this.selectList(value);\n          }\n        } else {\n          const temp = [];\n          const tagList = [];\n          const errList = [];\n          let resList = value.split(';');\n          resList = resList.filter(item => item);\n          resList.forEach(item => {\n            if (item.match(/^[a-zA-Z][a-zA-Z_]+/g)) {\n              temp.push(item.match(/^[a-zA-Z][a-zA-Z_]+/g).join(''));\n            } else {\n              errList.push(item);\n            }\n          });\n          temp.forEach(item => {\n            if (this.config.initData.indexOf(item) < 0) errList.push(item);\n            for (let i = this.config.data.length - 1; i >= 0; i--) {\n              if (this.config.data[i] === item) {\n                tagList.push(item);\n                this.config.data.splice(i, 1);\n              }\n            }\n          });\n          if (tagList.length) this.selectList(tagList, 'batch');\n          if (value && errList.length) {\n            errList.join(';');\n            throw new Error(`${errList}不是项目组成员`);\n          }\n        }\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      }\n    },\n    /**\r\n     *  隐藏补全列表\r\n     */\n    hideAll(e) {\n      e.preventDefault();\n      // 为了让blur方法异步执行，以便能够成功执行click方法\n      setTimeout(() => {\n        const errList = [];\n        let temp = [];\n        const value = e.target.value;\n        let resList = value.split(',');\n        resList = resList.filter(item => {\n          return item && item.trim();\n        });\n        resList.forEach(item => {\n          item = item.trim();\n          if (item.isBkVar()) {\n            temp.push(item);\n          } else {\n            errList.push(item);\n          }\n        });\n        temp = temp.filter(item => this.selectedList.indexOf(item) === -1);\n        if (temp.length) this.selectList(temp, 'batch');\n        if (this.value && errList.length && !this.showList) {\n          errList.join(';');\n          const err = `${errList}不是项目组成员`;\n          this.$bkMessage({\n            message: err,\n            theme: 'error'\n          });\n          this.config.onChange(this.name, '');\n          this.resetInput();\n        }\n        // this.value = ''\n        this.config.onChange(this.name, '');\n        this.isEdit = false;\n        if (this.$refs.staffInput) this.$refs.staffInput.style.width = 10 + 'px';\n      }, 100);\n    },\n    mousedown(e) {\n      this.focusList = 0;\n      this.minscroll = 0;\n      this.maxscroll = 6;\n      this.$refs.selectorList.scrollTop = 0;\n      if (this.value.length) {\n        this.filterData(this.value);\n        this.list.forEach((item, index) => {\n          if (item === this.value) this.focusList = index;\n        });\n      }\n    },\n    /**\r\n     *  键盘移动\r\n     */\n    keydown(e) {\n      let target;\n      const key = e.keyCode;\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      switch (key) {\n        // 删除\n        case 8:\n        case 46:\n          this.isEdit = true;\n          if (parseInt(result.index) !== 0) {\n            target = result.temp[result.index - 1].innerText;\n            if (!this.value.length) {\n              this.deleteItem(this.name, result.index, target);\n              const site = nodes[nodes.length - 1];\n              this.insertAfter(this.$refs.staffInput, site);\n              this.$refs.staffInput.focus();\n              this.isFocus = true;\n            }\n          }\n          break;\n        // 向下\n        case 40:\n          this.focusList++;\n          this.focusList = this.focusList > this.list.length - 1 ? this.list.length - 1 : this.focusList;\n          if (this.focusList > this.maxscroll) {\n            this.$refs.selectorList.scrollTop += 32;\n            this.minscroll++;\n            this.maxscroll++;\n          }\n          break;\n        // 向上\n        case 38:\n          this.focusList--;\n          if (this.focusList < 0) this.focusList = 0;\n          this.focusList = this.focusList < 0 ? 0 : this.focusList;\n          if (this.focusList < this.minscroll) {\n            this.$refs.selectorList.scrollTop -= 32;\n            this.maxscroll--;\n            this.minscroll--;\n          }\n          break;\n        // 向左\n        case 37:\n          this.isEdit = true;\n          if (!this.value.length) {\n            if (parseInt(result.index) > 1) {\n              const leftsite = nodes[parseInt(result.index) - 2];\n              this.insertAfter(this.$refs.staffInput, leftsite);\n              this.$refs.staffInput.value = '';\n              this.$refs.staffInput.style.width = 10 + 'px';\n            } else {\n              const tags = this.$refs.selectEditor.getElementsByTagName('span');\n              this.$refs.selectEditor.insertBefore(this.$refs.staffInput, tags[0]);\n            }\n            this.$refs.staffInput.focus();\n          }\n          break;\n        // 向右\n        case 39:\n          this.isEdit = true;\n          if (!this.value.length) {\n            const rightsite = nodes[parseInt(result.index) + 1];\n            this.insertAfter(this.$refs.staffInput, rightsite);\n            this.$refs.staffInput.focus();\n          }\n          break;\n        // 确认\n        case 13:\n          this.isEdit = true;\n          if (this.showList) {\n            this.selectList(this.list[this.focusList]);\n            this.showList = false;\n          }\n          this.hideAll(e);\n          break;\n        // 退出\n        case 27:\n          this.showList = false;\n          break;\n      }\n    },\n    validate(value) {\n      const target = value.replace(/\\s/g, '');\n      const resObj = {\n        target,\n        reg: target.isBkVar(),\n        isEixt: this.selectedList.indexOf(target)\n      };\n      return resObj;\n    },\n    /**\r\n     *  更新样式\r\n     */\n    activeClass(i) {\n      return {\n        selected: i === this.focusList\n      };\n    },\n    /**\r\n     *  选中列表中的一项\r\n     */\n    selectList(data, type) {\n      this.config.onChange(this.name, data);\n      this.isSelected = true;\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      this.setVaule(this.name, result.index, data, type);\n      const site = nodes[nodes.length - 1];\n      this.insertAfter(this.$refs.staffInput, site);\n      this.$refs.staffInput.focus();\n    },\n    /**\r\n     *  过滤数据\r\n     */\n    filterData(val) {\n      this.list = this.config.data.filter(item => item.indexOf(val) > -1);\n    },\n    /**\r\n     *  获取数据\r\n     */\n    getData() {\n      this.list = this.config.data;\n    },\n    /**\r\n     *  头像格式\r\n     */\n    localCoverAvatar(data) {\n      const member = data.isBkVar() ? 'un_know' : data;\n      return `${\"//dayu.woa.com\"}/avatars/${member}/avatar.jpg`;\n    },\n    // 重置input\n    resetInput() {\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      if (result.index !== result.temp.length) {\n        const site = nodes[nodes.length - 1];\n        this.insertAfter(this.$refs.staffInput, site);\n      }\n    },\n    toEdit(event) {\n      this.isEdit = true;\n      this.$refs.staffInput.focus();\n    },\n    selectInfo(event, val) {\n      this.insertAfter(this.$refs.staffInput, event.target);\n    },\n    getSiteInfo(nodes) {\n      const res = {\n        index: 0,\n        temp: []\n      };\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (!(node.nodeType === 3 && !/\\S/.test(node.nodeValue))) {\n          res.temp.push(node);\n        }\n      }\n      Object.keys(res.temp).forEach(key => {\n        if (res.temp[key].id === 'staffInput') res.index = key;\n      });\n      return res;\n    },\n    insertAfter(newElement, targetElement) {\n      const parent = targetElement.parentNode;\n      if (parent.lastChild === targetElement) {\n        parent.appendChild(newElement);\n      } else {\n        parent.insertBefore(newElement, targetElement.nextSibling);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/common/custom-selector/index.vue?vue&type=script&lang=js\n /* harmony default export */ const common_custom_selectorvue_type_script_lang_js = (custom_selectorvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/custom-selector/index.vue?vue&type=style&index=0&id=7385d250&prod&lang=scss&scoped=true\nvar custom_selectorvue_type_style_index_0_id_7385d250_prod_lang_scss_scoped_true = __webpack_require__(6466);\n;// CONCATENATED MODULE: ./src/components/common/custom-selector/index.vue?vue&type=style&index=0&id=7385d250&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/common/custom-selector/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  common_custom_selectorvue_type_script_lang_js,\n  custom_selectorvue_type_template_id_7385d250_scoped_true_render,\n  custom_selectorvue_type_template_id_7385d250_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"7385d250\",\n  null\n  \n)\n\n/* harmony default export */ const custom_selector = (component.exports);\n// EXTERNAL MODULE: external \"Vue\"\nvar external_Vue_ = __webpack_require__(4061);\nvar external_Vue_default = /*#__PURE__*/__webpack_require__.n(external_Vue_);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/StaffInput/index.vue?vue&type=script&lang=js\n\n// import atomFieldMixin from '../atomFieldMixin'\n\n\n// import ajax from '@/utils/ajax'\n\nconst vue = new (external_Vue_default())();\n/* harmony default export */ const StaffInputvue_type_script_lang_js = ({\n  // mixins: [ atomFieldMixin ],\n  name: 'staff-input',\n  components: {\n    customSelector: custom_selector\n  },\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    handleChange: {\n      type: Function,\n      default: () => () => {}\n    }\n  },\n  data() {\n    return {\n      isLoading: false,\n      curInsertVal: '',\n      list: [],\n      initData: []\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    dataInputConfig() {\n      return {\n        initData: this.initData || [],\n        data: this.list || [],\n        onChange: this.onChange\n      };\n    }\n  },\n  watch: {\n    value(value) {\n      // 选中列表发生变化时更新list数据\n      this.list = this.initData.filter(val => !value.includes(val));\n    }\n  },\n  async created() {\n    await this.getList();\n  },\n  methods: {\n    async getList() {\n      const url = `/project/api/user/users/projects/${this.projectId}/list`;\n      try {\n        const res = await vue.$ajax.get(`${url}`).then(data => {\n          return data;\n        });\n        res.forEach(item => {\n          this.initData.push(item);\n          this.list.push(item);\n        });\n        this.$nextTick(() => {\n          this.value.forEach(item => {\n            this.list = this.list.filter(val => val.indexOf(item) === -1);\n          });\n        });\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message ? err.message : err,\n          theme: 'error'\n        });\n      }\n    },\n    onChange(name, value) {\n      this.handleValueChange('value', value);\n    },\n    handleValueChange(name, value) {\n      this.curInsertVal = value;\n    },\n    setVaule(name, index, item, type) {\n      let newVal = [];\n      if (type) {\n        newVal = [...this.value.slice(0, index), ...item, ...this.value.slice(index, this.value.length)];\n      } else {\n        newVal = [...this.value.slice(0, index), item, ...this.value.slice(index, this.value.length)];\n      }\n      this.handleChange(this.name, newVal);\n      this.curInsertVal = '';\n    },\n    deleteItem(name, index, item) {\n      if (!item.isBkVar()) this.list.push(item);\n      const updateVal = [...this.value.slice(0, index - 1), ...this.value.slice(index, this.value.length)];\n      this.handleChange(this.name, updateVal);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/StaffInput/index.vue?vue&type=script&lang=js\n /* harmony default export */ const devops_StaffInputvue_type_script_lang_js = (StaffInputvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/StaffInput/index.vue?vue&type=style&index=0&id=129aff80&prod&lang=scss\nvar StaffInputvue_type_style_index_0_id_129aff80_prod_lang_scss = __webpack_require__(127);\n;// CONCATENATED MODULE: ./src/components/devops/StaffInput/index.vue?vue&type=style&index=0&id=129aff80&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/components/devops/StaffInput/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar StaffInput_component = (0,componentNormalizer/* default */.A)(\n  devops_StaffInputvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const StaffInput = (StaffInput_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1708\n");

/***/ }),

/***/ 5155:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ UserInput)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/UserInput/index.vue?vue&type=template&id=c3621462&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"devops-staff-selector\",\n    on: {\n      click: _vm.toEdit\n    }\n  }, [_c(\"div\", {\n    class: [\"devops-staff-input\", {\n      active: _vm.isEdit,\n      disabled: _vm.disabled\n    }]\n  }, [!_vm.isEdit && !_vm.value.length && !_vm.curInsertVal.length ? _c(\"span\", {\n    staticClass: \"placeholder\"\n  }, [_vm._v(_vm._s(_vm.placeholder))]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"tag-list\",\n    class: !_vm.value.length ? \"no-item\" : \"\"\n  }, [_c(\"div\", {\n    ref: \"selectEditor\",\n    staticClass: \"select-editor\"\n  }, [_vm._l(_vm.value, function (entry, index) {\n    return _c(\"span\", {\n      key: index,\n      staticClass: \"tag-info\",\n      on: {\n        click: function ($event) {\n          return _vm.selectInfo($event, entry);\n        }\n      }\n    }, [_vm._v(_vm._s(entry))]);\n  }), _vm._v(\" \"), _c(\"input\", {\n    ref: \"staffInput\",\n    staticClass: \"form-input\",\n    attrs: {\n      type: \"text\",\n      id: \"staffInput\",\n      autocomplete: \"off\",\n      name: _vm.name\n    },\n    domProps: {\n      value: _vm.curInsertVal\n    },\n    on: {\n      input: _vm.input,\n      keydown: _vm.keydown,\n      paste: _vm.paste,\n      blur: _vm.hideAll\n    }\n  })], 2)])])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/UserInput/index.vue?vue&type=template&id=c3621462&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(3188);\n;// CONCATENATED MODULE: ./src/components/devops/atomFieldMixin.js\nconst atomFieldMixin = {\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    handleChange: {\n      type: Function,\n      default: () => () => {}\n    },\n    hasError: {\n      type: Boolean\n    }\n  },\n  watch: {\n    value(value, oldValue) {\n      value !== oldValue && this.$emit('input', value);\n    }\n  }\n};\n/* harmony default export */ const devops_atomFieldMixin = (atomFieldMixin);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/UserInput/index.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const UserInputvue_type_script_lang_js = ({\n  name: 'user-input',\n  mixins: [devops_atomFieldMixin],\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isEdit: false,\n      curInsertVal: ''\n    };\n  },\n  watch: {\n    curInsertVal(val) {\n      if (val.length) this.$refs.staffInput.style.width = val.length * 20 + 'px';\n    }\n  },\n  methods: {\n    changeInputValue(name, value) {\n      this.curInsertVal = value;\n    },\n    input(e) {\n      e.preventDefault();\n      const {\n        value\n      } = e.target;\n      this.changeInputValue(this.name, value);\n      this.isEdit = true;\n    },\n    paste(e) {\n      e.preventDefault();\n      const value = e.clipboardData.getData('text');\n      try {\n        const tagList = [];\n        let resList = value.split(';');\n        resList = resList.filter(item => item && !this.value.includes(item));\n        resList.forEach(item => {\n          tagList.push(item);\n        });\n        if (tagList.length) this.selectList(tagList, 'batch');\n      } catch (err) {\n        this.$showTips({\n          message: err.message || err,\n          theme: 'error'\n        });\n      }\n    },\n    /**\r\n     *  隐藏补全列表\r\n     */\n    hideAll(e) {\n      e.preventDefault();\n      this.handleValue(e.target.value);\n      this.isEdit = false;\n    },\n    handleValue(val) {\n      setTimeout(() => {\n        let temp = [];\n        const value = val.trim();\n        let resList = value.split(',');\n        resList = resList.filter(item => {\n          return item && item.trim();\n        });\n        resList.forEach(item => {\n          temp.push(item);\n        });\n        temp = temp.filter(item => this.value.indexOf(item) === -1);\n        if (temp.length) this.selectList(temp, 'batch');\n        this.changeInputValue(this.name, '');\n        if (this.$refs.staffInput) this.$refs.staffInput.style.width = 10 + 'px';\n      }, 100);\n    },\n    /**\r\n     *  键盘移动\r\n     */\n    keydown(e) {\n      let target;\n      const key = e.keyCode;\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      switch (key) {\n        // 删除\n        case 8:\n        case 46:\n          this.isEdit = true;\n          if (parseInt(result.index) !== 0) {\n            target = result.temp[result.index - 1].innerText;\n            if (!this.curInsertVal.length) {\n              this.deleteItem(this.name, result.index, target);\n              const site = nodes[nodes.length - 1];\n              this.insertAfter(this.$refs.staffInput, site);\n              this.$refs.staffInput.focus();\n            }\n          }\n          break;\n        // 向左\n        case 37:\n          this.isEdit = true;\n          if (!this.curInsertVal.length) {\n            if (parseInt(result.index) > 1) {\n              const leftsite = nodes[parseInt(result.index) - 2];\n              this.insertAfter(this.$refs.staffInput, leftsite);\n              this.$refs.staffInput.value = '';\n              this.$refs.staffInput.style.width = 10 + 'px';\n            } else {\n              const tags = this.$refs.selectEditor.getElementsByTagName('span');\n              this.$refs.selectEditor.insertBefore(this.$refs.staffInput, tags[0]);\n            }\n            this.$refs.staffInput.focus();\n          }\n          break;\n        // 向右\n        case 39:\n          this.isEdit = true;\n          if (!this.curInsertVal.length) {\n            const rightsite = nodes[parseInt(result.index) + 1];\n            this.insertAfter(this.$refs.staffInput, rightsite);\n            this.$refs.staffInput.focus();\n          }\n          break;\n        // 确认\n        case 13:\n          this.isEdit = true;\n          this.handleValue(this.curInsertVal);\n          break;\n        // 退出\n        case 27:\n          this.showList = false;\n          break;\n      }\n    },\n    /**\r\n     *  选中列表中的一项\r\n     */\n    selectList(data, type) {\n      this.changeInputValue(this.name, data);\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      this.setValue(this.name, result.index, data, type);\n      const site = nodes[nodes.length - 1];\n      this.insertAfter(this.$refs.staffInput, site);\n      this.$refs.staffInput.focus();\n    },\n    setValue(name, index, item, type) {\n      let newVal = [];\n      if (type) {\n        newVal = [...this.value.slice(0, index), ...item, ...this.value.slice(index, this.value.length)];\n      } else {\n        newVal = [...this.value.slice(0, index), item, ...this.value.slice(index, this.value.length)];\n      }\n      this.handleChange(this.name, newVal);\n      this.changeInputValue(this.name, '');\n    },\n    deleteItem(name, index, item) {\n      const updateVal = [...this.value.slice(0, index - 1), ...this.value.slice(index, this.value.length)];\n      this.handleChange(this.name, updateVal);\n    },\n    // 重置input\n    resetInput() {\n      const nodes = this.$refs.selectEditor.childNodes;\n      const result = this.getSiteInfo(nodes);\n      if (result.index !== result.temp.length) {\n        const site = nodes[nodes.length - 1];\n        this.insertAfter(this.$refs.staffInput, site);\n      }\n    },\n    toEdit(event) {\n      this.isEdit = true;\n      this.$refs.staffInput.focus();\n    },\n    selectInfo(event, val) {\n      this.insertAfter(this.$refs.staffInput, event.target);\n    },\n    getSiteInfo(nodes) {\n      const res = {\n        index: 0,\n        temp: []\n      };\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (!(node.nodeType === 3 && !/\\S/.test(node.nodeValue))) {\n          res.temp.push(node);\n        }\n      }\n      Object.keys(res.temp).forEach(key => {\n        if (res.temp[key].id === 'staffInput') res.index = key;\n      });\n      return res;\n    },\n    insertAfter(newElement, targetElement) {\n      const parent = targetElement.parentNode;\n      if (parent.lastChild === targetElement) {\n        parent.appendChild(newElement);\n      } else {\n        parent.insertBefore(newElement, targetElement.nextSibling);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/UserInput/index.vue?vue&type=script&lang=js\n /* harmony default export */ const devops_UserInputvue_type_script_lang_js = (UserInputvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/UserInput/index.vue?vue&type=style&index=0&id=c3621462&prod&lang=scss&scoped=true\nvar UserInputvue_type_style_index_0_id_c3621462_prod_lang_scss_scoped_true = __webpack_require__(6709);\n;// CONCATENATED MODULE: ./src/components/devops/UserInput/index.vue?vue&type=style&index=0&id=c3621462&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/devops/UserInput/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  devops_UserInputvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c3621462\",\n  null\n  \n)\n\n/* harmony default export */ const UserInput = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5155\n");

/***/ }),

/***/ 6415:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ create_group)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/create_group.vue?vue&type=template&id=35f3cd74\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-dialog\", {\n    attrs: {\n      width: \"640\",\n      \"ext-cls\": \"experience-group-wrapper\",\n      \"close-icon\": _vm.nodeSelectConf.closeIcon,\n      \"show-footer\": _vm.nodeSelectConf.hasFooter\n    },\n    model: {\n      value: _vm.nodeSelectConf.isShow,\n      callback: function ($$v) {\n        _vm.$set(_vm.nodeSelectConf, \"isShow\", $$v);\n      },\n      expression: \"nodeSelectConf.isShow\"\n    }\n  }, [_vm.nodeSelectConf.isShow ? _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{\\n            isLoading: loading.isLoading,\\n            title: loading.title\\n        }\"\n    }]\n  }, [_c(\"div\", {\n    staticClass: \"experience-group-header\"\n  }, [_c(\"div\", {\n    staticClass: \"title\"\n  }, [_vm._v(_vm._s(_vm.nodeSelectConf.title))])]), _vm._v(\" \"), _c(\"form\", {\n    staticClass: \"bk-form create-group-form\",\n    attrs: {\n      id: \"create-group-form\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bk-form-wrapper\"\n  }, [_c(\"bk-form\", {\n    attrs: {\n      \"label-width\": 100,\n      model: _vm.createGroupForm\n    }\n  }, [_c(\"devops-form-item\", {\n    attrs: {\n      label: _vm.$t(\"quality.通知组名称\"),\n      required: true,\n      property: \"name\",\n      \"is-error\": _vm.errors.has(\"groupName\"),\n      \"error-msg\": _vm.errors.first(\"groupName\")\n    }\n  }, [_c(\"bk-input\", {\n    directives: [{\n      name: \"validate\",\n      rawName: \"v-validate\",\n      value: {\n        required: true,\n        max: 10\n      },\n      expression: \"{\\n                                required: true,\\n                                max: 10\\n                            }\"\n    }],\n    staticClass: \"group-name-input\",\n    attrs: {\n      placeholder: _vm.$t(\"quality.最长不超过10个汉字\"),\n      name: \"groupName\"\n    },\n    model: {\n      value: _vm.createGroupForm.name,\n      callback: function ($$v) {\n        _vm.$set(_vm.createGroupForm, \"name\", $$v);\n      },\n      expression: \"createGroupForm.name\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: _vm.$t(\"quality.通知人员：\"),\n      property: \"internal_list\"\n    }\n  }, [_vm.isExtendTx ? [_c(\"staff-input\", {\n    attrs: {\n      name: \"innerList\",\n      placeholder: _vm.placeholder,\n      value: _vm.createGroupForm.internal_list,\n      \"handle-change\": _vm.onChange\n    }\n  }), _vm._v(\" \"), _vm.errors.has(\"groupInternalList\") ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(_vm._s(_vm.$t(\"quality.内部人员不能为空\")))]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"clickoutside\",\n      rawName: \"v-clickoutside\",\n      value: _vm.close,\n      expression: \"close\"\n    }],\n    staticClass: \"dropdown-menu\"\n  }, [_c(\"div\", {\n    staticClass: \"dropdown-trigger\",\n    on: {\n      click: _vm.importMember\n    }\n  }, [_c(\"span\", [_vm._v(_vm._s(_vm.$t(\"quality.从用户组导入\")))]), _vm._v(\" \"), _c(\"i\", {\n    class: [\"devops-icon icon-angle-down\", {\n      \"icon-flip\": _vm.isDropdownShow\n    }]\n  })]), _vm._v(\" \"), _vm.isDropdownShow ? _c(\"div\", {\n    staticClass: \"dropdown-list\"\n  }, [_c(\"ul\", {\n    staticClass: \"list-wrapper\"\n  }, _vm._l(_vm.userGroupList, function (entry, index) {\n    return _c(\"li\", {\n      key: index\n    }, [_c(\"a\", {\n      attrs: {\n        href: \"javascript:;\"\n      },\n      on: {\n        click: function ($event) {\n          return _vm.selectUsers(entry);\n        }\n      }\n    }, [_vm._v(_vm._s(entry.groupName) + \"\\n                                                \"), _c(\"span\", [_vm._v(\"(\" + _vm._s(entry.users.length) + \")\")])])]);\n  }), 0)]) : _vm._e()])] : _c(\"user-input\", {\n    attrs: {\n      \"handle-change\": _vm.onChange,\n      name: \"innerList\",\n      value: _vm.createGroupForm.internal_list,\n      placeholder: _vm.$t(\"quality.请输入通知人员\")\n    }\n  })], 2), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: _vm.$t(\"quality.描述：\"),\n      property: \"desc\"\n    }\n  }, [_c(\"bk-input\", {\n    staticClass: \"group-desc-textarea\",\n    attrs: {\n      type: \"textarea\",\n      name: \"groupDesc\",\n      maxlength: \"100\"\n    },\n    model: {\n      value: _vm.createGroupForm.desc,\n      callback: function ($$v) {\n        _vm.$set(_vm.createGroupForm, \"desc\", $$v);\n      },\n      expression: \"createGroupForm.desc\"\n    }\n  })], 1)], 1)], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"footer\"\n  }, [_c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\"\n    },\n    nativeOn: {\n      click: function ($event) {\n        return _vm.confirm.apply(null, arguments);\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"quality.确认\")))]), _vm._v(\" \"), _c(\"bk-button\", {\n    on: {\n      click: _vm.cancelFn\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"quality.取消\")))])], 1)]) : _vm._e()]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/devops/create_group.vue?vue&type=template&id=35f3cd74\n\n// EXTERNAL MODULE: ./src/components/devops/StaffInput/index.vue + 11 modules\nvar StaffInput = __webpack_require__(1708);\n// EXTERNAL MODULE: ./src/components/devops/UserInput/index.vue + 6 modules\nvar UserInput = __webpack_require__(5155);\n;// CONCATENATED MODULE: ./src/directives/clickoutside/index.js\n/**\r\n * @file checkoutside\r\n * @author ielgnaw <wuji0223@gmail.com>\r\n */\n\nconst nodes = [];\nconst CLICK_CTX = '$clickoutsideCtx';\n\n// 确保鼠标按下和松开时是同一个目标\nlet beginClick = '';\ndocument.addEventListener('mousedown', event => {\n  beginClick = event;\n  return beginClick;\n}, false);\ndocument.addEventListener('mouseup', event => {\n  for (const node of nodes) {\n    node[CLICK_CTX].clickoutsideHandler(event, beginClick);\n  }\n}, false);\n/* harmony default export */ const clickoutside = ({\n  bind(el, binding, vnode) {\n    const id = nodes.push(el) - 1;\n    const clickoutsideHandler = function () {\n      let mouseup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      let mousedown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!vnode.context // 点击在vue实例之外的DOM上\n      || !mouseup.target || !mousedown.target\n      // 鼠标按下时的DOM节点是当前展开的组件的子元素\n      || el.contains(mouseup.target)\n      // 鼠标松开时的DOM节点是当前展开的组件的子元素\n      || el.contains(mousedown.target)\n      // 鼠标松开时的DOM节点是当前展开的组件的根元素\n      || el === mouseup.target ||\n      // 当前点击元素是有弹出层的\n      vnode.context.popup && (\n      // 鼠标按下时的DOM节点是当前有弹出层元素的子节点\n      vnode.context.popup.contains(mouseup.target)\n      // 鼠标松开时的DOM节点是当前有弹出层元素的子节点\n      || vnode.context.popup.contains(mousedown.target))) {\n        return;\n      }\n\n      // 传入了指令绑定的表达式\n      if (binding.expression\n      // 当前元素的clickoutside对象中有回调函数名\n      && el[CLICK_CTX].callbackName\n      // vnode中存在回调函数\n      && vnode.context[el[CLICK_CTX].callbackName]) {\n        vnode.context[el[CLICK_CTX].callbackName]();\n      } else {\n        el[CLICK_CTX].bindingFn && el[CLICK_CTX].bindingFn();\n      }\n    };\n    el[CLICK_CTX] = {\n      id,\n      clickoutsideHandler,\n      callbackName: binding.expression,\n      callbackFn: binding.value\n    };\n  },\n  update(el, binding) {\n    el[CLICK_CTX].callbackName = binding.expression;\n    el[CLICK_CTX].callbackFn = binding.value;\n  },\n  unbind(el) {\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      if (nodes[i][CLICK_CTX].id === el[CLICK_CTX].id) {\n        nodes.splice(i, 1);\n        break;\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/create_group.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const create_groupvue_type_script_lang_js = ({\n  directives: {\n    clickoutside: clickoutside\n  },\n  components: {\n    'staff-input': StaffInput/* default */.A,\n    UserInput: UserInput/* default */.A\n  },\n  props: {\n    nodeSelectConf: Object,\n    createGroupForm: Object,\n    loading: Object,\n    errorHandler: Object,\n    onChange: Function,\n    onInit: Function,\n    confirmFn: Function,\n    cancelFn: Function,\n    displayResult: Function\n  },\n  data() {\n    return {\n      isDropdownShow: false,\n      placeholder: this.$t('quality.仅填写项目组内的人员有效'),\n      userGroupList: []\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    isExtendTx() {\n      return \"tencent\" === 'tencent';\n    }\n  },\n  watch: {\n    isDropdownShow(val) {\n      if (!val) {\n        const resetList = [];\n        this.$store.dispatch('experience/updateselectUserGroup', {\n          userList: resetList\n        });\n      }\n    }\n  },\n  created() {\n    this.requestGroups();\n  },\n  methods: {\n    importMember() {\n      this.isDropdownShow = !this.isDropdownShow;\n      if (this.isDropdownShow) {\n        this.requestGroups();\n      }\n    },\n    close() {\n      this.isDropdownShow = false;\n    },\n    async requestGroups() {\n      try {\n        const res = await this.$store.dispatch('quality/requestUserGroup', {\n          projectId: this.projectId\n        });\n        this.userGroupList.splice(0, this.userGroupList.length);\n        if (res) {\n          res.forEach(item => {\n            this.userGroupList.push(item);\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    selectUsers(entry) {\n      this.isDropdownShow = false;\n      this.$store.dispatch('quality/updateselectUserGroup', {\n        userList: entry.users\n      });\n    },\n    async confirm() {\n      const isValid = await this.$validator.validate();\n      if (isValid) {\n        const params = {\n          name: this.createGroupForm.name,\n          innerUsers: this.createGroupForm.internal_list,\n          outerUsers: this.createGroupForm.external_list,\n          remark: this.createGroupForm.desc\n        };\n        this.$emit('confirmFn', params);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/devops/create_group.vue?vue&type=script&lang=js\n /* harmony default export */ const devops_create_groupvue_type_script_lang_js = (create_groupvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/devops/create_group.vue?vue&type=style&index=0&id=35f3cd74&prod&lang=scss\nvar create_groupvue_type_style_index_0_id_35f3cd74_prod_lang_scss = __webpack_require__(3370);\n;// CONCATENATED MODULE: ./src/components/devops/create_group.vue?vue&type=style&index=0&id=35f3cd74&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/devops/create_group.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  devops_create_groupvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const create_group = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6415\n");

/***/ })

}]);
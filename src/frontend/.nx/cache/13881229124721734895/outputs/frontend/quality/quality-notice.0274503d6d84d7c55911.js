"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdevops_quality"] = self["webpackChunkdevops_quality"] || []).push([[709],{

/***/ 637:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ notice_group)\n});\n\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/notice_group.vue?vue&type=template&id=11e92f72&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"notice-group-wrapper\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\n      \"section\",\n      {\n        directives: [\n          {\n            name: \"bkloading\",\n            rawName: \"v-bkloading\",\n            value: {\n              isLoading: _vm.loading.isLoading,\n              title: _vm.loading.title,\n            },\n            expression:\n              \"{\\n            isLoading: loading.isLoading,\\n            title: loading.title\\n        }\",\n          },\n        ],\n        staticClass: \"sub-view-port\",\n      },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"group-content\" },\n          [\n            _vm.showContent && _vm.noticeGroupList.length\n              ? _c(\n                  \"bk-button\",\n                  {\n                    staticClass: \"create-group-btn\",\n                    attrs: { theme: \"primary\" },\n                    on: { click: _vm.toCreateGroup },\n                  },\n                  [_vm._v(\"新增\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.showContent && _vm.noticeGroupList.length\n              ? _c(\n                  \"div\",\n                  { staticClass: \"table-container\" },\n                  [\n                    _c(\n                      \"bk-table\",\n                      {\n                        staticClass: \"experience-table\",\n                        attrs: { size: \"small\", data: _vm.noticeGroupList },\n                      },\n                      [\n                        _c(\"bk-table-column\", {\n                          attrs: { label: \"名称\", prop: \"name\" },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (props) {\n                                  return [\n                                    _c(\"span\", [\n                                      _vm._v(_vm._s(props.row.name)),\n                                    ]),\n                                  ]\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            805761537\n                          ),\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"bk-table-column\", {\n                          attrs: { label: \"通知人员\", prop: \"innerUsersCount\" },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (props) {\n                                  return [\n                                    props.row.innerUsersCount\n                                      ? _c(\n                                          \"bk-popover\",\n                                          { attrs: { placement: \"bottom\" } },\n                                          [\n                                            _c(\n                                              \"span\",\n                                              { staticClass: \"handler-inner\" },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    props.row.innerUsersCount\n                                                  )\n                                                ),\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"template\",\n                                              { slot: \"content\" },\n                                              [\n                                                _c(\n                                                  \"p\",\n                                                  {\n                                                    staticStyle: {\n                                                      \"max-width\": \"300px\",\n                                                      \"text-align\": \"left\",\n                                                      \"white-space\": \"normal\",\n                                                      \"word-break\": \"break-all\",\n                                                      \"font-weight\": \"400\",\n                                                    },\n                                                  },\n                                                  _vm._l(\n                                                    props.row.innerUsers,\n                                                    function (entry, index) {\n                                                      return _c(\n                                                        \"span\",\n                                                        { key: index },\n                                                        [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              entry.replace(\n                                                                '\"',\n                                                                \"\"\n                                                              )\n                                                            )\n                                                          ),\n                                                          index !==\n                                                          props.row.innerUsers\n                                                            .length -\n                                                            1\n                                                            ? _c(\"span\", [\n                                                                _vm._v(\",\"),\n                                                              ])\n                                                            : _vm._e(),\n                                                        ]\n                                                      )\n                                                    }\n                                                  ),\n                                                  0\n                                                ),\n                                              ]\n                                            ),\n                                          ],\n                                          2\n                                        )\n                                      : _c(\n                                          \"span\",\n                                          { staticClass: \"handler-inner\" },\n                                          [\n                                            _vm._v(\n                                              _vm._s(props.row.innerUsersCount)\n                                            ),\n                                          ]\n                                        ),\n                                  ]\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            4178586471\n                          ),\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"bk-table-column\", {\n                          attrs: { label: \"创建人\", prop: \"creator\" },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (props) {\n                                  return [\n                                    _c(\"span\", [\n                                      _vm._v(_vm._s(props.row.creator)),\n                                    ]),\n                                  ]\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            4097734426\n                          ),\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"bk-table-column\", {\n                          attrs: {\n                            label: \"描述\",\n                            prop: \"remark\",\n                            \"min-width\": \"160\",\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (props) {\n                                  return [\n                                    _c(\"span\", [\n                                      _vm._v(_vm._s(props.row.remark)),\n                                    ]),\n                                  ]\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            2991563012\n                          ),\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"bk-table-column\", {\n                          attrs: { label: \"操作\", width: \"150\" },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (props) {\n                                  return [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticClass: \"handler-btn edit-btn\",\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.toEditGroup(props.row)\n                                          },\n                                        },\n                                      },\n                                      [_vm._v(\"编辑\")]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticClass: \"handler-btn delete-btn\",\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.toDeleteGruop(props.row)\n                                          },\n                                        },\n                                      },\n                                      [_vm._v(\"删除\")]\n                                    ),\n                                  ]\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            2796501143\n                          ),\n                        }),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.showContent && !_vm.noticeGroupList.length\n              ? _c(\"empty-data\", {\n                  attrs: {\n                    \"empty-info\": _vm.emptyInfo,\n                    \"to-create-fn\": _vm.toCreateGroup,\n                  },\n                })\n              : _vm._e(),\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\"createGroup\", {\n          attrs: {\n            \"node-select-conf\": _vm.nodeSelectConf,\n            \"create-group-form\": _vm.createGroupForm,\n            loading: _vm.dialogLoading,\n            \"on-change\": _vm.onChange,\n            \"on-init\": _vm.onInit,\n            \"error-handler\": _vm.errorHandler,\n            \"display-result\": _vm.displayResult,\n            \"cancel-fn\": _vm.cancelFn,\n          },\n          on: { confirmFn: _vm.confirmFn },\n        }),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"inner-header\" }, [\n      _c(\"div\", { staticClass: \"title\" }, [_vm._v(\"通知组\")]),\n    ])\n  },\n]\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/views/notice_group.vue?vue&type=template&id=11e92f72&\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.promise.js\nvar es_promise = __webpack_require__(1418);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(2077);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(911);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(6294);\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/empty_data.vue?vue&type=template&id=36d67a14&scoped=true&\nvar empty_datavue_type_template_id_36d67a14_scoped_true_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"empty-data-wrapper\" }, [\n    _c(\"p\", { staticClass: \"title\" }, [_vm._v(_vm._s(_vm.emptyInfo.title))]),\n    _vm._v(\" \"),\n    _c(\"p\", { staticClass: \"intro-prompt\" }, [\n      _vm._v(_vm._s(_vm.emptyInfo.desc)),\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"create-node-row\" },\n      [\n        _c(\n          \"bk-button\",\n          {\n            staticClass: \"create-node-btn\",\n            attrs: { theme: \"primary\" },\n            on: { click: _vm.toCreateFn },\n          },\n          [_vm._v(\"新增\")]\n        ),\n      ],\n      1\n    ),\n  ])\n}\nvar empty_datavue_type_template_id_36d67a14_scoped_true_staticRenderFns = []\nempty_datavue_type_template_id_36d67a14_scoped_true_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/views/empty_data.vue?vue&type=template&id=36d67a14&scoped=true&\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/empty_data.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const empty_datavue_type_script_lang_js_ = ({\n  props: {\n    emptyInfo: Object,\n    toCreateFn: Function\n  }\n});\n;// CONCATENATED MODULE: ./src/views/empty_data.vue?vue&type=script&lang=js&\n /* harmony default export */ const views_empty_datavue_type_script_lang_js_ = (empty_datavue_type_script_lang_js_); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(810);\n;// CONCATENATED MODULE: ./src/views/empty_data.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  views_empty_datavue_type_script_lang_js_,\n  empty_datavue_type_template_id_36d67a14_scoped_true_render,\n  empty_datavue_type_template_id_36d67a14_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"36d67a14\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/views/empty_data.vue\"\n/* harmony default export */ const empty_data = (component.exports);\n// EXTERNAL MODULE: ./src/components/devops/create_group.vue + 5 modules\nvar create_group = __webpack_require__(9538);\n// EXTERNAL MODULE: ./src/utils/util.js\nvar util = __webpack_require__(6397);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/notice_group.vue?vue&type=script&lang=js&\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ const notice_groupvue_type_script_lang_js_ = ({\n  components: {\n    emptyData: empty_data,\n    createGroup: create_group/* default */.Z\n  },\n  data() {\n    return {\n      noticeGroupList: [],\n      showContent: false,\n      loading: {\n        isLoading: false,\n        title: ''\n      },\n      dialogLoading: {\n        isLoading: false,\n        title: ''\n      },\n      nodeSelectConf: {\n        title: '',\n        isShow: false,\n        closeIcon: false,\n        hasFooter: false\n      },\n      createGroupForm: {\n        idEdit: false,\n        name: '',\n        internal_list: [],\n        external_list: '',\n        desc: ''\n      },\n      errorHandler: {\n        nameError: false\n      },\n      emptyInfo: {\n        title: '暂无通知组',\n        desc: '您可以新增一个通知组'\n      },\n      urlParams: (0,util/* getQueryString */.Wz)('groupId') || ''\n    };\n  },\n  computed: {\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    ...(0,external_Vuex_.mapGetters)('quality', ['getUserGroup']),\n    isExtendTx() {\n      return \"tencent\" === 'tencent';\n    }\n  },\n  watch: {\n    projectId() {\n      this.$router.push({\n        name: 'qualityOverview',\n        params: {\n          projectId: this.projectId\n        }\n      });\n    },\n    getUserGroup(val) {\n      val.forEach(item => {\n        if (this.createGroupForm.internal_list.indexOf(item) === -1) {\n          this.createGroupForm.internal_list.push(item);\n        }\n      });\n    }\n  },\n  async mounted() {\n    await this.init();\n  },\n  methods: {\n    async init() {\n      const {\n        loading\n      } = this;\n      loading.isLoading = true;\n      loading.title = '数据加载中，请稍候';\n      try {\n        this.requestList();\n      } catch (err) {\n        this.$bkMessage({\n          message: err.message ? err.message : err,\n          theme: 'error'\n        });\n      } finally {\n        setTimeout(() => {\n          this.loading.isLoading = false;\n        }, 100);\n      }\n    },\n    /**\n     * 获取列表\n     */\n    async requestList() {\n      try {\n        const res = await this.$store.dispatch('quality/requestGroupList', {\n          projectId: this.projectId\n        });\n        this.noticeGroupList.splice(0, this.noticeGroupList.length);\n        if (res.records) {\n          res.records.forEach(item => {\n            this.noticeGroupList.push(item);\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n      this.showContent = true;\n    },\n    toCreateGroup() {\n      this.createGroupForm = {\n        isEdit: false,\n        groupHashId: '',\n        name: '',\n        internal_list: [],\n        external_list: '',\n        desc: ''\n      };\n      // document.getElementById('placeholder-text').style.display = 'block';\n      this.nodeSelectConf.title = '新增通知组';\n      this.nodeSelectConf.isShow = true;\n    },\n    onChange(name, val) {\n      this.createGroupForm.internal_list = val;\n    },\n    onInit(e, arr) {\n      // this.createGroupForm.internal_list.splice(0, this.createGroupForm.internal_list, ...arr)\n    },\n    displayResult() {\n      if (this.nodeSelectConf.isShow) {\n        this.createGroupForm.external_list = this.createGroupForm.external_list.replace(/[^\\d;,]/g, '');\n      }\n    },\n    validate() {\n      let errorCount = 0;\n      if (!this.createGroupForm.name) {\n        this.errorHandler.nameError = true;\n        errorCount++;\n      }\n      if (errorCount > 0) {\n        return false;\n      }\n      return true;\n    },\n    async confirmFn(params) {\n      let message, theme;\n      this.dialogLoading.isLoading = true;\n      try {\n        if (this.createGroupForm.isEdit) {\n          await this.$store.dispatch('quality/editUserGroups', {\n            projectId: this.projectId,\n            groupHashId: this.createGroupForm.groupHashId,\n            params: params\n          });\n        } else {\n          await this.$store.dispatch('quality/createUserGroups', {\n            projectId: this.projectId,\n            params: params\n          });\n        }\n        message = '保存成功';\n        theme = 'success';\n        this.requestList();\n        this.nodeSelectConf.isShow = false;\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        this.$bkMessage({\n          message,\n          theme\n        });\n        this.dialogLoading.isLoading = false;\n      }\n    },\n    cancelFn() {\n      if (!this.dialogLoading.isLoading) {\n        this.nodeSelectConf.isShow = false;\n        this.errorHandler.nameError = false;\n      }\n    },\n    async toEditGroup(row) {\n      if (row.permissions.canEdit) {\n        this.nodeSelectConf.title = '编辑通知组';\n        this.nodeSelectConf.isShow = true;\n        this.dialogLoading.isLoading = true;\n        try {\n          const res = await this.$store.dispatch('quality/toGetGroupDetail', {\n            projectId: this.projectId,\n            groupHashId: row.groupHashId\n          });\n          this.createGroupForm.isEdit = true;\n          this.createGroupForm.groupHashId = row.groupHashId;\n          this.createGroupForm.name = res.name;\n          this.createGroupForm.external_list = res.outerUsers;\n          this.createGroupForm.desc = res.remark;\n          this.createGroupForm.internal_list = res.innerUsers;\n        } catch (err) {\n          this.$bkMessage({\n            message: err.data ? err.data.message : err,\n            theme: 'error'\n          });\n        } finally {\n          this.dialogLoading.isLoading = false;\n        }\n      } else {\n        this.$showAskPermissionDialog({\n          noPermissionList: [{\n            actionId: this.$permissionActionMap.edit,\n            resourceId: this.$permissionResourceMap.notifyGroup,\n            instanceId: [{\n              id: row.groupHashId,\n              name: row.name\n            }],\n            projectId: this.projectId\n          }],\n          applyPermissionUrl: `/backend/api/perm/apply/subsystem/?client_id=code&project_code=${this.projectId}&service_code=quality_gate&role_manager=group:${row.groupHashId}`\n        });\n      }\n    },\n    toDeleteGruop(row) {\n      if (row.permissions.canDelete) {\n        this.$bkInfo({\n          type: 'warning',\n          theme: 'warning',\n          subTitle: `确定删除通知组(${row.name})？`,\n          confirmFn: async () => {\n            let message, theme;\n            try {\n              await this.$store.dispatch('quality/toDeleteGroups', {\n                projectId: this.projectId,\n                groupHashId: row.groupHashId\n              });\n              message = '删除成功';\n              theme = 'success';\n            } catch (err) {\n              message = err.data ? err.data.message : err;\n              theme = 'error';\n            } finally {\n              this.$bkMessage({\n                message,\n                theme\n              });\n              this.requestList();\n            }\n          }\n        });\n      } else {\n        this.$showAskPermissionDialog({\n          noPermissionList: [{\n            actionId: this.$permissionActionMap.delete,\n            resourceId: this.$permissionResourceMap.notifyGroup,\n            instanceId: [{\n              id: row.groupHashId,\n              name: row.name\n            }],\n            projectId: this.projectId\n          }],\n          applyPermissionUrl: `/backend/api/perm/apply/subsystem/?client_id=code&project_code=${this.projectId}&service_code=quality_gate&role_manager=group:${row.groupHashId}`\n        });\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/notice_group.vue?vue&type=script&lang=js&\n /* harmony default export */ const views_notice_groupvue_type_script_lang_js_ = (notice_groupvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/views/notice_group.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar notice_group_component = (0,componentNormalizer/* default */.Z)(\n  views_notice_groupvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var notice_group_api; }\nnotice_group_component.options.__file = \"src/views/notice_group.vue\"\n/* harmony default export */ const notice_group = (notice_group_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///637\n");

/***/ })

}]);
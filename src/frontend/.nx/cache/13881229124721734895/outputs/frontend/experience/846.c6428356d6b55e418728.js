/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_experience"] = globalThis["webpackChunkdevops_experience"] || []).push([[846],{

/***/ 9203:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NJ: () => (/* binding */ EXPERIENCE_GROUP_RESOURCE_TYPE),\n/* harmony export */   PO: () => (/* binding */ EXPERIENCE_TASK_RESOURCE_ACTION),\n/* harmony export */   VA: () => (/* binding */ EXPERIENCE_GROUP_RESOURCE_ACTION),\n/* harmony export */   bc: () => (/* binding */ PIPELINE_RESOURCE_ACTION),\n/* harmony export */   hy: () => (/* binding */ PIPELINE_RESOURCE_TYPE),\n/* harmony export */   pY: () => (/* binding */ EXPERIENCE_TASK_RESOURCE_TYPE)\n/* harmony export */ });\n// 版本体验任务权限动作\nconst EXPERIENCE_TASK_RESOURCE_ACTION = {\n  CREATE: 'experience_task_create',\n  VIEW: 'experience_task_view',\n  EDIT: 'experience_task_edit',\n  DELETE: 'experience_task_delete'\n};\nconst EXPERIENCE_TASK_RESOURCE_TYPE = 'experience_task';\n\n// 版本体验任务权限动作\nconst EXPERIENCE_GROUP_RESOURCE_ACTION = {\n  CREATE: 'experience_group_create',\n  VIEW: 'experience_group_view',\n  EDIT: 'experience_group_edit',\n  DELETE: 'experience_group_delete'\n};\nconst EXPERIENCE_GROUP_RESOURCE_TYPE = 'experience_group';\nconst PIPELINE_RESOURCE_ACTION = {\n  EXECUTE: 'pipeline_execute'\n};\nconst PIPELINE_RESOURCE_TYPE = 'pipeline';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIwMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWV4cGVyaWVuY2UvLi9zcmMvdXRpbHMvcGVybWlzc2lvbi5qcz9lMzUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIOeJiOacrOS9k+mqjOS7u+WKoeadg+mZkOWKqOS9nFxyXG5leHBvcnQgY29uc3QgRVhQRVJJRU5DRV9UQVNLX1JFU09VUkNFX0FDVElPTiA9IHtcclxuICAgIENSRUFURTogJ2V4cGVyaWVuY2VfdGFza19jcmVhdGUnLFxyXG4gICAgVklFVzogJ2V4cGVyaWVuY2VfdGFza192aWV3JyxcclxuICAgIEVESVQ6ICdleHBlcmllbmNlX3Rhc2tfZWRpdCcsXHJcbiAgICBERUxFVEU6ICdleHBlcmllbmNlX3Rhc2tfZGVsZXRlJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgRVhQRVJJRU5DRV9UQVNLX1JFU09VUkNFX1RZUEUgPSAnZXhwZXJpZW5jZV90YXNrJ1xyXG5cclxuLy8g54mI5pys5L2T6aqM5Lu75Yqh5p2D6ZmQ5Yqo5L2cXHJcbmV4cG9ydCBjb25zdCBFWFBFUklFTkNFX0dST1VQX1JFU09VUkNFX0FDVElPTiA9IHtcclxuICAgIENSRUFURTogJ2V4cGVyaWVuY2VfZ3JvdXBfY3JlYXRlJyxcclxuICAgIFZJRVc6ICdleHBlcmllbmNlX2dyb3VwX3ZpZXcnLFxyXG4gICAgRURJVDogJ2V4cGVyaWVuY2VfZ3JvdXBfZWRpdCcsXHJcbiAgICBERUxFVEU6ICdleHBlcmllbmNlX2dyb3VwX2RlbGV0ZSdcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEVYUEVSSUVOQ0VfR1JPVVBfUkVTT1VSQ0VfVFlQRSA9ICdleHBlcmllbmNlX2dyb3VwJ1xyXG5cclxuZXhwb3J0IGNvbnN0IFBJUEVMSU5FX1JFU09VUkNFX0FDVElPTiA9IHtcclxuICAgIEVYRUNVVEU6ICdwaXBlbGluZV9leGVjdXRlJ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgUElQRUxJTkVfUkVTT1VSQ0VfVFlQRSA9ICdwaXBlbGluZSdcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9203\n");

/***/ }),

/***/ 7716:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eA: () => (/* binding */ getQueryString),\n/* harmony export */   t: () => (/* binding */ convertTime)\n/* harmony export */ });\n/* unused harmony exports isVNode, isInArray, isInlineElment, getActualTop, getActualLeft, addClass, removeClass, localizeConfig, findValByKeyValue, deepClone, converStrToNum, converStrToArr, convertStrToNumArr, convertMStoString, convertMStoStringByRule, convertFileSize, isObject, mergeModules, getOuterHeight, getOuterWidth, getInnerWidth, deepCopy, hashID */\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7309);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3188);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9297);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction isVNode(node) {\n  return typeof node === 'object' && Object.prototype.hasOwnPropertyc.call(node, 'componentOptions');\n}\nfunction isInArray(ele, array) {\n  for (const item of array) {\n    if (item === ele) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isInlineElment(node) {\n  const inlineElements = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'cite', 'code', 'dfn', 'em', 'font', 'i', 'img', 'input', 'kbd', 'label', 'q', 's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup', 'textarea', 'tt', 'u', 'var'];\n  const tag = node.tagName.toLowerCase();\n  const display = getComputedStyle(node).display;\n  if (isInArray(tag, inlineElements) && display === 'index' || display === 'inline') {\n    console.warn('Binding node is displayed as inline element. To avoid some unexpected rendering error, please set binding node displayed as block element.');\n    return true;\n  }\n  return false;\n}\n\n/**\r\n *  获取元素相对于页面的高度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualTop(node) {\n  let actualTop = node.offsetTop;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualTop += current.offsetTop;\n    current = current.offsetParent;\n  }\n  return actualTop;\n}\n\n/**\r\n *  获取元素相对于页面左侧的宽度\r\n *  @param node {NodeElement} 指定的DOM元素\r\n */\nfunction getActualLeft(node) {\n  let actualLeft = node.offsetLeft;\n  let current = node.offsetParent;\n  while (current !== null) {\n    actualLeft += current.offsetLeft;\n    current = current.offsetParent;\n  }\n  return actualLeft;\n}\n\n/**\r\n *  对元素添加样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction addClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    if (!node.className && classNames.length === 1) {\n      node.className = className;\n    } else {\n      let setClass = ' ' + node.className + ' ';\n      classNames.forEach(cl => {\n        if (setClass.indexOf(' ' + cl + ' ') < 0) {\n          setClass += cl + ' ';\n        }\n      });\n      const rtrim = /^\\s+|\\s+$/;\n      node.className = setClass.replace(rtrim, '');\n    }\n  }\n}\n\n/**\r\n *  对元素删除样式类\r\n *  @param node {NodeElement} 指定的DOM元素\r\n *  @param className {String} 类名\r\n */\nfunction removeClass(node, className) {\n  const classNames = className.split(' ');\n  if (node.nodeType === 1) {\n    let setClass = ' ' + node.className + ' ';\n    classNames.forEach(cl => {\n      setClass = setClass.replace(' ' + cl + ' ', ' ');\n    });\n    const rtrim = /^\\s+|\\s+$/;\n    node.className = setClass.replace(rtrim, '');\n  }\n}\n\n/**\r\n *  将传入的配置项转成本地的对象\r\n *  @param config {Object} 传入的对象\r\n *  @return obj {Object} 本地化之后的对象\r\n */\nfunction localizeConfig(config) {\n  const obj = {};\n  for (const key in config) {\n    obj[key] = config[key];\n  }\n  return obj;\n}\n\n/**\r\n *  在一个元素为对象的数组中，根据oldKey: oldValue找到指定的数组元素，并返回该数组元素中指定key的value\r\n *  @param arr - 元素为对象的数组\r\n *  @param oldKey - 查找的key\r\n *  @param oldValue - 查找的value\r\n *  @param key - 需要返回的value的指定的key\r\n *  @return result - 找到的value值，未找到返回undefined\r\n */\nfunction findValByKeyValue(arr, oldKey, oldValue, key) {\n  let result;\n  for (const obj of arr) {\n    for (const _key in obj) {\n      if (_key === oldKey && obj[_key] === oldValue) {\n        result = obj[key];\n        break;\n      }\n    }\n  }\n  return result;\n}\nfunction deepClone(obj) {\n  const _obj = {};\n  for (const key in obj) {\n    if (obj[key].toString().toLowerCase() === '[object object]') {\n      _obj[key] = deepClone(obj[key]);\n    } else {\n      _obj[key] = key === 'text' ? '' : obj[key];\n    }\n  }\n  return _obj;\n}\n\n/**\r\n *  将字符串去掉指定内容之后转成数字\r\n *  @param {String} str - 需要转换的字符串\r\n *  @param {String} indicator - 需要被去掉的内容\r\n */\nfunction converStrToNum(str, indicator) {\n  const reg = new RegExp(indicator, 'g');\n  const $str = str.replace(reg, '');\n  return ~~$str;\n}\n\n/**\r\n *  将字符串根据indicator转成数组\r\n */\nfunction converStrToArr(str, indicator) {\n  return str.length ? str.split(indicator) : [];\n}\n\n/**\r\n * 将字符串根据indicator转成数组并将内容都转成Number类型（仅限数组内容均为数字的字符串）\r\n */\nfunction convertStrToNumArr(str, indicator) {\n  return converStrToArr(str, indicator).map(item => {\n    return ~~item;\n  });\n}\n\n/**\r\n *  将毫秒值转换成x时x分x秒的形式\r\n *  @param {Number} time - 时间的毫秒形式\r\n *  @return {String} str - 转换后的字符串\r\n */\nfunction convertMStoString(time) {\n  function getSeconds(sec) {\n    return `${sec}秒`;\n  }\n  function getMinutes(sec) {\n    if (sec / 60 >= 1) {\n      return `${Math.floor(sec / 60)}分${getSeconds(sec % 60)}`;\n    } else {\n      return getSeconds(sec);\n    }\n  }\n  function getHours(sec) {\n    if (sec / 3600 >= 1) {\n      return `${Math.floor(sec / 3600)}小时${getMinutes(sec % 3600)}`;\n    } else {\n      return getMinutes(sec);\n    }\n  }\n  function getDays(sec) {\n    if (sec / 86400 >= 1) {\n      return `${Math.floor(sec / 86400)}天${getHours(sec % 86400)}`;\n    } else {\n      return getHours(sec);\n    }\n  }\n  return time ? getDays(Math.floor(time / 1000)) : '0秒';\n}\n\n/**\r\n *  将毫秒值转换成x时x分x秒的形式并使用格式化规则\r\n *  @param {Number} time - 时间的毫秒形式\r\n *  @return {String} str - 转换后的字符串\r\n */\nfunction convertMStoStringByRule(time) {\n  const str = convertMStoString(time);\n  let res = str;\n  const arr = str.match(/^\\d{1,}([\\u4e00-\\u9fa5]){1,}/);\n  if (arr.length) {\n    switch (arr[1]) {\n      case '秒':\n        res = '1分钟内';\n        break;\n      case '天':\n        res = `大于${arr[0]}`;\n        break;\n      case '时':\n        res = str.replace(/\\d{1,}秒/, '');\n        break;\n    }\n  }\n  return res;\n}\nfunction prezero(num) {\n  num = Number(num);\n  if (num < 10) {\n    return '0' + num;\n  }\n  return num;\n}\nfunction convertTime(ms) {\n  const time = new Date(ms);\n  return `${time.getFullYear()}-${prezero(time.getMonth() + 1)}-${prezero(time.getDate())} ${prezero(time.getHours())}:${prezero(time.getMinutes())}:${prezero(time.getSeconds())}`;\n}\n\n/**\r\n *  转换文件大小\r\n */\nfunction convertFileSize(size, unit) {\n  const arr = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const calcSize = size / 1024;\n  let index;\n  arr.some((item, _index) => {\n    if (unit === item) {\n      index = _index;\n      return true;\n    }\n    return false;\n  });\n  const next = arr[index + 1];\n  if (calcSize > 1024) {\n    if (!next) {\n      return `${calcSize.toFixed(2)}${unit}`;\n    } else {\n      return convertFileSize(calcSize, next);\n    }\n  } else {\n    return `${calcSize.toFixed(2)}${next || unit}`;\n  }\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction mergeModules(target) {\n  for (var _len = arguments.length, modules = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n    modules[_key2 - 1] = arguments[_key2];\n  }\n  return modules.reduce((merged, mod) => {\n    Object.keys(mod).forEach(key => {\n      if (isObject(merged[key]) && isObject(mod[key])) {\n        merged[key] = {\n          ...merged[key],\n          ...mod[key]\n        };\n      }\n    });\n    return merged;\n  }, target);\n}\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterHeight = (selector, parent) => {\n  const {\n    marginTop,\n    height,\n    marginBottom\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginTop) + parseFloat(height) + parseFloat(marginBottom);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getOuterWidth = (selector, parent) => {\n  const {\n    marginLeft,\n    width,\n    marginRight\n  } = getDOMRect(selector, parent);\n  return parseFloat(marginLeft) + parseFloat(width) + parseFloat(marginRight);\n};\n\n/**\r\n * @param {String} selector\r\n * @param {DOM element} parent\r\n */\nconst getInnerWidth = (selector, parent) => {\n  const {\n    width\n  } = getDOMRect(selector, parent);\n  return parseFloat(width);\n};\nconst getDOMRect = (selector, parent) => {\n  const target = isDOMElement(selector) ? selector : parent ? parent.querySelector(selector) : document.querySelector(selector);\n  if (!target) {\n    return {};\n  }\n  const style = window.getComputedStyle(target);\n  return {\n    width: style.width,\n    height: style.height,\n    marginTop: style.marginTop,\n    marginBottom: style.marginBottom,\n    marginLeft: style.marginLeft,\n    marginRight: style.marginRight\n  };\n};\nconst isDOMElement = obj => {\n  return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n};\nconst deepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\nconst hashID = function () {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let pos = 0;\n  let result = '';\n  while (pos < length) {\n    const n = Math.round(Math.random() * 126) + 33;\n    result += String.fromCharCode(n);\n    pos++;\n  }\n  return result;\n};\n\n/**\r\n *  获取url参数值\r\n */\nfunction getQueryString(name) {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\n  const r = window.location.search.substr(1).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7716\n");

/***/ }),

/***/ 990:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wellKnownSymbol = __webpack_require__(7166);\nvar create = __webpack_require__(3981);\nvar defineProperty = (__webpack_require__(7614).f);\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZXhwZXJpZW5jZS8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzLmpzPzc3OTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG5cbnZhciBVTlNDT1BBQkxFUyA9IHdlbGxLbm93blN5bWJvbCgndW5zY29wYWJsZXMnKTtcbnZhciBBcnJheVByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZTtcblxuLy8gQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5pZiAoQXJyYXlQcm90b3R5cGVbVU5TQ09QQUJMRVNdID09IHVuZGVmaW5lZCkge1xuICBkZWZpbmVQcm9wZXJ0eShBcnJheVByb3RvdHlwZSwgVU5TQ09QQUJMRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGNyZWF0ZShudWxsKVxuICB9KTtcbn1cblxuLy8gYWRkIGEga2V5IHRvIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///990\n");

/***/ }),

/***/ 7406:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar $ = __webpack_require__(5689);\nvar $includes = (__webpack_require__(5254).includes);\nvar fails = __webpack_require__(8462);\nvar addToUnscopables = __webpack_require__(990);\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQwNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZXhwZXJpZW5jZS8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzPzIyZjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzJykuaW5jbHVkZXM7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcycpO1xuXG4vLyBGRjk5KyBidWdcbnZhciBCUk9LRU5fT05fU1BBUlNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIUFycmF5KDEpLmluY2x1ZGVzKCk7XG59KTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogQlJPS0VOX09OX1NQQVJTRSB9LCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhlbCAvKiAsIGZyb21JbmRleCA9IDAgKi8pIHtcbiAgICByZXR1cm4gJGluY2x1ZGVzKHRoaXMsIGVsLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5hZGRUb1Vuc2NvcGFibGVzKCdpbmNsdWRlcycpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7406\n");

/***/ }),

/***/ 4738:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937539387\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDczOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtZXhwZXJpZW5jZS8uL3NyYy92aWV3cy9leHBlcmllbmNlL2NyZWF0ZV9ncm91cC52dWU/N2E0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTM5Mzg3XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4738\n");

/***/ }),

/***/ 9537:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ create_group)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_group.vue?vue&type=template&id=03b99e54\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-sideslider\", {\n    attrs: {\n      title: _vm.title,\n      \"is-show\": _vm.visible,\n      \"quick-close\": false,\n      \"before-close\": _vm.beforeClose,\n      width: 640\n    },\n    on: {\n      \"update:isShow\": function ($event) {\n        _vm.visible = $event;\n      },\n      \"update:is-show\": function ($event) {\n        _vm.visible = $event;\n      }\n    }\n  }, [_c(\"bk-form\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    ref: \"createGroupForm\",\n    staticClass: \"group-form-content\",\n    attrs: {\n      slot: \"content\",\n      \"form-type\": \"vertical\",\n      model: _vm.createGroupForm,\n      rules: _vm.groupRules\n    },\n    slot: \"content\"\n  }, [_c(\"bk-form-item\", {\n    attrs: {\n      label: \"体验组名称\",\n      required: \"\",\n      property: \"name\"\n    }\n  }, [_c(\"bk-input\", {\n    attrs: {\n      placeholder: \"最长不超过20个字符\",\n      maxlength: \"20\",\n      name: \"groupName\",\n      \"input-style\": _vm.inputStyle\n    },\n    model: {\n      value: _vm.createGroupForm.name,\n      callback: function ($$v) {\n        _vm.$set(_vm.createGroupForm, \"name\", typeof $$v === \"string\" ? $$v.trim() : $$v);\n      },\n      expression: \"createGroupForm.name\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"描述\",\n      property: \"remark\"\n    }\n  }, [_c(\"bk-input\", {\n    attrs: {\n      type: \"textarea\",\n      placeholder: \"请输入\",\n      maxlength: 200,\n      name: \"groupDesc\"\n    },\n    model: {\n      value: _vm.createGroupForm.remark,\n      callback: function ($$v) {\n        _vm.$set(_vm.createGroupForm, \"remark\", typeof $$v === \"string\" ? $$v.trim() : $$v);\n      },\n      expression: \"createGroupForm.remark\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"bk-form-item\", {\n    attrs: {\n      label: \"人员\"\n    }\n  }, [_c(\"section\", {\n    staticClass: \"group-importer\"\n  }, [_c(\"bk-tab\", {\n    attrs: {\n      \"label-height\": 32,\n      active: _vm.activeTab\n    },\n    on: {\n      \"update:active\": function ($event) {\n        _vm.activeTab = $event;\n      },\n      \"tab-change\": _vm.handleTabChange\n    }\n  }, [_vm._l(_vm.panels, function (panel) {\n    return _c(\"bk-tab-panel\", _vm._b({\n      key: panel.name\n    }, \"bk-tab-panel\", panel, false));\n  }), _vm._v(\" \"), _c(\"header\", {\n    staticClass: \"group-importer-header\"\n  }, [_c(\"bk-select\", {\n    attrs: {\n      placeholder: \"请选择\",\n      value: _vm.importType,\n      loading: _vm.loadingGroup,\n      clearable: false\n    },\n    on: {\n      selected: _vm.handleImportTypeSelected\n    }\n  }, _vm._l(_vm.importTypeList, function (option) {\n    return _c(\"bk-option\", {\n      key: option.id,\n      attrs: {\n        id: option.id,\n        disabled: option.disabled,\n        name: option.name\n      }\n    });\n  }), 1), _vm._v(\" \"), _c(_vm.typeComponent, _vm._g(_vm._b({\n    ref: \"inputComp\",\n    tag: \"component\"\n  }, \"component\", _vm.typeProps.props, false), _vm.typeProps.listeners)), _vm._v(\" \"), _c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\",\n      outline: \"\",\n      disabled: _vm.adding || !_vm.hasUser,\n      icon: _vm.adding ? \"loading\" : \"\"\n    },\n    on: {\n      click: _vm.handleAddUser\n    }\n  }, [_vm._v(\"\\n                            添加\\n                        \")])], 1)], 2), _vm._v(\" \"), _c(\"bk-table\", {\n    ref: \"filterTable\",\n    attrs: {\n      data: _vm.userList,\n      pagination: _vm.pagination\n    },\n    on: {\n      \"page-change\": _vm.handlePageChange,\n      \"page-limit-change\": _vm.handlePageLimitChange,\n      \"filter-change\": _vm.handleFilterChange\n    }\n  }, [Object.keys(_vm.filters).length > 0 ? _c(\"bk-exception\", {\n    attrs: {\n      slot: \"empty\",\n      type: \"search-empty\",\n      scene: \"part\"\n    },\n    slot: \"empty\"\n  }, [_c(\"p\", {\n    staticClass: \"memeber-search-empty-title\"\n  }, [_vm._v(\"搜索结果为空\")]), _vm._v(\" \"), _c(\"p\", {\n    staticClass: \"memeber-search-empty-desc\"\n  }, [_vm._v(\"\\n                            可以尝试\\n                            \"), _c(\"span\", [_vm._v(\"调整关键词\")]), _vm._v(\"\\n                            或\\n                            \"), _c(\"bk-button\", {\n    attrs: {\n      text: \"\",\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.clearFilter\n    }\n  }, [_vm._v(\"\\n                                清空筛选条件\\n                            \")])], 1)]) : _vm._e(), _vm._v(\" \"), _c(\"bk-table-column\", {\n    key: _vm.nameFilter.length,\n    attrs: {\n      label: \"名称\",\n      prop: \"name\",\n      \"column-key\": \"name\",\n      sortable: \"\",\n      \"show-overflow-tooltip\": \"\",\n      \"filter-searchable\": \"\",\n      filters: _vm.nameFilter\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"内部/外部\",\n      prop: \"typeLabel\",\n      \"column-key\": \"type\",\n      filters: _vm.typeFilters\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"所属组织架构\",\n      prop: \"deptFullName\",\n      \"column-key\": \"deptFullName\",\n      \"show-overflow-tooltip\": \"\",\n      \"filter-searchable\": \"\",\n      filters: _vm.orgFilters\n    }\n  }), _vm._v(\" \"), _c(\"bk-table-column\", {\n    attrs: {\n      label: \"操作\",\n      width: \"80\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function (props) {\n        return [_c(\"bk-button\", {\n          attrs: {\n            theme: \"primary\",\n            text: \"\"\n          },\n          on: {\n            click: function ($event) {\n              return _vm.remove(props.row);\n            }\n          }\n        }, [_vm._v(\"移除\")])];\n      }\n    }])\n  })], 1)], 1)])], 1), _vm._v(\" \"), _c(\"footer\", {\n    staticClass: \"group-import-footer\",\n    attrs: {\n      slot: \"footer\"\n    },\n    slot: \"footer\"\n  }, [_c(\"bk-button\", {\n    attrs: {\n      disabled: _vm.isLoading || _vm.submitting,\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.handleSubmit\n    }\n  }, [_vm._v(\"\\n            提交\\n        \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    attrs: {\n      disabled: _vm.isLoading || _vm.submitting\n    },\n    on: {\n      click: _vm.beforeClose\n    }\n  }, [_vm._v(\"\\n            取消\\n        \")])], 1)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/experience/create_group.vue?vue&type=template&id=03b99e54\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/OrgnizationSelector.vue?vue&type=template&id=038c901a\nvar OrgnizationSelectorvue_type_template_id_038c901a_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-select\", {\n    ref: \"select\",\n    attrs: {\n      value: _vm.value\n    }\n  }, [_c(\"bk-big-tree\", {\n    ref: \"tree\",\n    staticClass: \"tree-select\",\n    attrs: {\n      \"enable-title-tip\": \"\",\n      selectable: \"\",\n      data: _vm.treeData,\n      \"expand-on-click\": false,\n      options: {\n        folderKey: \"hasNext\"\n      },\n      \"lazy-method\": _vm.expandNode,\n      \"default-selected-node\": _vm.value\n    },\n    on: {\n      \"select-change\": _vm.handleSelectChange\n    }\n  })], 1);\n};\nvar OrgnizationSelectorvue_type_template_id_038c901a_staticRenderFns = [];\nOrgnizationSelectorvue_type_template_id_038c901a_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/OrgnizationSelector.vue?vue&type=template&id=038c901a\n\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/OrgnizationSelector.vue?vue&type=script&lang=js\n\n/* harmony default export */ const OrgnizationSelectorvue_type_script_lang_js = ({\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      treeData: []\n    };\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('experience', ['requestOrgs']),\n    async fetchOrgs() {\n      let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0';\n      const res = await this.requestOrgs(id);\n      return res.map(item => ({\n        ...item,\n        parentId: id,\n        hasNext: true,\n        children: []\n      }));\n    },\n    async init() {\n      this.treeData = await this.fetchOrgs();\n    },\n    async expandNode(node) {\n      const children = await this.fetchOrgs(node.id);\n      // TODO: HACK\n      this.$refs.tree.registryOptions(children);\n      return {\n        data: children\n      };\n    },\n    handleSelectChange(node) {\n      this.$emit('input', node);\n    },\n    clear() {\n      console.log(this.$refs.tree);\n      this.$refs.tree.setSelected();\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/OrgnizationSelector.vue?vue&type=script&lang=js\n /* harmony default export */ const components_OrgnizationSelectorvue_type_script_lang_js = (OrgnizationSelectorvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/OrgnizationSelector.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.A)(\n  components_OrgnizationSelectorvue_type_script_lang_js,\n  OrgnizationSelectorvue_type_template_id_038c901a_render,\n  OrgnizationSelectorvue_type_template_id_038c901a_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrgnizationSelector = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_group.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const create_groupvue_type_script_lang_js = ({\n  components: {\n    OrgnizationSelector: OrgnizationSelector\n  },\n  props: {\n    visible: Boolean,\n    isLoading: Boolean,\n    createGroupForm: Object,\n    errorHandler: Object,\n    handleGroupFieldChange: Function,\n    cancelFn: Function,\n    title: String\n  },\n  data() {\n    return {\n      filters: {},\n      adding: false,\n      userGroupList: [],\n      activeTab: 'manual',\n      importType: 1,\n      loadingGroup: false,\n      submitting: false,\n      innerUsers: [],\n      outerUsers: [],\n      innerOrg: null,\n      pagination: {\n        current: 1,\n        count: this.createGroupForm.members.length,\n        limit: 10\n      }\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapGetters)('experience', ['getUserGroup']),\n    projectId() {\n      return this.$route.params.projectId;\n    },\n    inputStyle() {\n      return {\n        'box-shadow': '0 0 0 30px white inset !important'\n      };\n    },\n    groupRules() {\n      return {\n        name: [{\n          required: true,\n          message: '用户组名称不能为空',\n          trigger: 'blur'\n        }]\n      };\n    },\n    panels() {\n      return [{\n        name: 'manual',\n        label: '手动添加'\n      }, {\n        name: 'import',\n        label: '从用户组导入'\n      }];\n    },\n    manualOptions() {\n      return [{\n        id: 1,\n        name: '内部人员'\n      }, {\n        id: 3,\n        name: '内部组织'\n      }, {\n        id: 2,\n        name: '外部人员'\n      }];\n    },\n    isManual() {\n      return this.activeTab === 'manual';\n    },\n    importTypeList() {\n      return this.isManual ? this.manualOptions : this.userGroupList;\n    },\n    typeFilters() {\n      return this.manualOptions.map(item => {\n        return {\n          text: item.name,\n          value: item.id\n        };\n      });\n    },\n    orgFilters() {\n      return Array.from(new Set(this.createGroupForm.members.filter(item => item.deptFullName).map(item => item.deptFullName))).map(item => {\n        return {\n          text: item,\n          value: item\n        };\n      });\n    },\n    hasUser() {\n      switch (this.importType) {\n        case 3:\n          return !!this.innerOrg;\n        case 2:\n          return this.outerUsers.length > 0;\n        case 1:\n        default:\n          return this.innerUsers.length > 0;\n      }\n    },\n    typeComponent() {\n      switch (this.importType) {\n        case 3:\n          return 'orgnization-selector';\n        case 2:\n          return 'bk-input';\n        case 1:\n        default:\n          return this.isManual ? 'bk-member-selector' : 'bk-tag-input';\n      }\n    },\n    typeProps() {\n      var _this$innerOrg;\n      switch (this.importType) {\n        case 3:\n          return {\n            props: {\n              value: (_this$innerOrg = this.innerOrg) === null || _this$innerOrg === void 0 ? void 0 : _this$innerOrg.id\n            },\n            listeners: {\n              input: org => {\n                this.innerOrg = org;\n              }\n            }\n          };\n        case 2:\n          return {\n            props: {\n              value: this.outerUsers\n            },\n            listeners: {\n              change: value => {\n                this.outerUsers = value;\n              },\n              enter: value => {\n                this.outerUsers = value;\n                this.handleAddUser();\n              }\n            }\n          };\n        case 1:\n        default:\n          return {\n            props: {\n              placeholder: !this.isManual ? '请从左侧选择已有用户组' : '请输入',\n              key: this.isManual,\n              disabled: !this.isManual,\n              value: this.innerUsers,\n              allowCreate: !this.isManual\n            },\n            listeners: {\n              input: value => {\n                this.innerUsers = value;\n              }\n            }\n          };\n      }\n    },\n    filterMembers() {\n      const filterKeys = Object.keys(this.filters);\n      if (filterKeys.length === 0) {\n        // 没有过滤条件\n        return this.createGroupForm.members;\n      }\n      return this.createGroupForm.members.filter(item => {\n        return filterKeys.every(key => {\n          return this.filters[key].includes(item[key]);\n        });\n      });\n    },\n    userList() {\n      const start = (this.pagination.current - 1) * this.pagination.limit;\n      return this.filterMembers.map(item => {\n        var _this$manualOptions$f;\n        return {\n          ...item,\n          typeLabel: ((_this$manualOptions$f = this.manualOptions.find(opt => opt.id === item.type)) === null || _this$manualOptions$f === void 0 ? void 0 : _this$manualOptions$f.name) ?? 'unknow'\n        };\n      }).slice(start, start + this.pagination.limit);\n    },\n    memberNames() {\n      return this.createGroupForm.members.map(item => item.name);\n    },\n    nameFilter() {\n      return this.memberNames.map(item => ({\n        text: item,\n        value: item\n      }));\n    },\n    userSet() {\n      return new Set(this.memberNames);\n    }\n  },\n  watch: {\n    'filterMembers.length': function (len) {\n      this.pagination.count = len;\n      this.pagination.current = 1;\n    },\n    visible(val) {\n      if (!val) {\n        // 重置\n        this.activeTab = 'manual';\n        this.importType = 1;\n        this.submitting = false;\n        this.innerUsers = [];\n        this.outerUsers = '';\n        this.innerOrg = null;\n        this.filters = {};\n        this.clearFilter();\n        this.clearSort();\n      }\n    }\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('experience', ['requestUserGroup', 'updateselectUserGroup', 'editUserGroups', 'requestUserOrg', 'isCpValid']),\n    /**\r\n     * 获取外部体验人员列表\r\n     */\n\n    async requestGroups() {\n      try {\n        this.loadingGroup = true;\n        const res = await this.requestUserGroup({\n          projectId: this.projectId\n        });\n        this.userGroupList = res.map(item => {\n          var _item$users, _item$users2;\n          return {\n            id: item.groupId,\n            name: `${item.groupName} (${((_item$users = item.users) === null || _item$users === void 0 ? void 0 : _item$users.length) ?? 0})`,\n            disabled: !((_item$users2 = item.users) !== null && _item$users2 !== void 0 && _item$users2.length),\n            ...item\n          };\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        this.loadingGroup = false;\n      }\n    },\n    handleTabChange(_) {\n      if (!this.isManual) {\n        this.importType = undefined;\n        this.requestGroups();\n      } else {\n        this.importType = 1;\n      }\n      this.innerUsers = [];\n      this.outerUsers = '';\n      this.innerOrg = null;\n    },\n    handlePageLimitChange(limit) {\n      this.pagination.limit = limit;\n    },\n    handlePageChange(page) {\n      this.pagination.current = page;\n    },\n    handleImportTypeSelected(value) {\n      this.importType = value;\n      const option = this.importTypeList.find(item => item.id === value);\n      if (!this.isManual) {\n        this.innerUsers = option.users;\n        return;\n      }\n      this.innerUsers = [];\n      this.outerUsers = '';\n    },\n    async handleAddUser() {\n      try {\n        switch (this.importType) {\n          case 3:\n            {\n              var _this$$refs$inputComp3, _this$$refs$inputComp4;\n              if (!this.innerOrg) return;\n              if (this.userSet.has(this.innerOrg.name)) {\n                var _this$$refs$inputComp, _this$$refs$inputComp2;\n                this.$bkMessage({\n                  message: `内部组织${this.innerOrg.name}已存在`,\n                  theme: 'error'\n                });\n                (_this$$refs$inputComp = this.$refs.inputComp) === null || _this$$refs$inputComp === void 0 || (_this$$refs$inputComp2 = _this$$refs$inputComp.clear) === null || _this$$refs$inputComp2 === void 0 || _this$$refs$inputComp2.call(_this$$refs$inputComp);\n                this.innerOrg = null;\n                return;\n              }\n              const fullName = this.getOrgFullName(this.innerOrg);\n              this.handleGroupFieldChange('members', [{\n                name: this.innerOrg.name,\n                id: this.innerOrg.id,\n                type: 3,\n                deptFullName: fullName\n              }, ...this.createGroupForm.members]);\n              (_this$$refs$inputComp3 = this.$refs.inputComp) === null || _this$$refs$inputComp3 === void 0 || (_this$$refs$inputComp4 = _this$$refs$inputComp3.clear) === null || _this$$refs$inputComp4 === void 0 || _this$$refs$inputComp4.call(_this$$refs$inputComp3);\n              this.innerOrg = null;\n              break;\n            }\n          case 2:\n            {\n              await this.addOutterUsers(this.outerUsers);\n              this.outerUsers = '';\n              break;\n            }\n          case 1:\n          default:\n            {\n              try {\n                this.adding = true;\n                const list = this.innerUsers.filter(item => !this.userSet.has(item) && item.indexOf('@tai') === -1);\n                if (list.length > 0) {\n                  const res = await this.requestUserOrg({\n                    type: 1,\n                    names: list\n                  });\n                  this.handleGroupFieldChange('members', [...res.map(item => ({\n                    ...item,\n                    id: item.name,\n                    type: 1\n                  })), ...this.createGroupForm.members]);\n                } else if (this.innerUsers.filter(item => item.indexOf('@tai') === -1).length > 0) {\n                  this.$bkMessage({\n                    message: `内部体验人员${this.innerUsers.join(',')}已存在`,\n                    theme: 'error'\n                  });\n                }\n                const outerUsers = this.innerUsers.filter(item => item.indexOf('@tai') > -1).join(',');\n                if (outerUsers) {\n                  await this.addOutterUsers(outerUsers);\n                }\n                this.innerUsers = [];\n                !this.isManual && (this.importType = undefined);\n              } catch (error) {\n                console.error(error);\n              } finally {\n                this.adding = false;\n              }\n            }\n        }\n      } catch (error) {\n        this.$bkMessage({\n          message: error.message || error,\n          theme: 'error'\n        });\n      }\n    },\n    remove(row) {\n      this.handleGroupFieldChange('members', this.createGroupForm.members.filter(item => item.name !== row.name));\n    },\n    getOrgFullName(org) {\n      const arr = [];\n      let temp = org;\n      while (temp.parent !== null) {\n        temp = temp.parent;\n        arr.unshift(temp.name);\n      }\n      return arr.join('/');\n    },\n    async handleSubmit() {\n      let message, theme;\n      try {\n        this.submitting = true;\n        await this.$refs.createGroupForm.validate();\n        const {\n          createGroupForm,\n          editUserGroups\n        } = this;\n        await editUserGroups({\n          projectId: this.projectId,\n          params: createGroupForm\n        });\n        message = '保存成功';\n        theme = 'success';\n        this.$emit('after-submit');\n      } catch (e) {\n        message = e.message || e.content;\n        theme = 'error';\n      } finally {\n        this.submitting = false;\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async addOutterUsers(outerUsers) {\n      const {\n        illegalUserIds,\n        legalUserIds\n      } = await this.isCpValid(outerUsers);\n      const list = legalUserIds.filter(item => !this.userSet.has(item));\n      const conflictUserIds = legalUserIds.filter(item => this.userSet.has(item));\n      this.$bkNotify({\n        title: '添加外部用户结果',\n        limit: 1,\n        message: this.$createElement('div', {}, [list.length > 0 ? this.$createElement('p', {}, `${list.join(',')}用户添加成功`) : null, illegalUserIds.length > 0 ? this.$createElement('p', {}, `${illegalUserIds.join(',')}用户添加失败`) : null, conflictUserIds.length > 0 ? this.$createElement('p', {}, `${conflictUserIds.join(',')}用户已存在`) : null]),\n        theme: illegalUserIds.length > 0 ? 'error' : conflictUserIds.length > 0 ? 'warning' : 'success'\n      });\n      if (list.length > 0) {\n        this.handleGroupFieldChange('members', [...list.map(item => ({\n          name: item,\n          id: item,\n          type: 2,\n          deptFullName: '--'\n        })), ...this.createGroupForm.members]);\n      }\n    },\n    beforeClose() {\n      this.$bkInfo({\n        title: '离开后，新编辑的数据将会丢失',\n        type: 'warning',\n        theme: 'warning',\n        confirmFn: () => {\n          this.cancelFn();\n        }\n      });\n    },\n    clearSort() {\n      this.$refs.filterTable.clearSort();\n    },\n    clearFilter() {\n      this.filters = {};\n      this.$refs.filterTable.clearFilter();\n    },\n    filterMethod(value, row, column) {\n      const property = column.property;\n      return row[property] === value;\n    },\n    handleFilterChange(filter) {\n      const filters = {\n        ...this.filters,\n        ...filter\n      };\n      this.filters = Object.keys(filters).filter(key => {\n        return filters[key].length > 0;\n      }).reduce((acc, key) => {\n        acc[key] = filters[key];\n        return acc;\n      }, {});\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/experience/create_group.vue?vue&type=script&lang=js\n /* harmony default export */ const experience_create_groupvue_type_script_lang_js = (create_groupvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/index.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/experience/create_group.vue?vue&type=style&index=0&id=03b99e54&prod&lang=scss\nvar create_groupvue_type_style_index_0_id_03b99e54_prod_lang_scss = __webpack_require__(4738);\n;// CONCATENATED MODULE: ./src/views/experience/create_group.vue?vue&type=style&index=0&id=03b99e54&prod&lang=scss\n\n;// CONCATENATED MODULE: ./src/views/experience/create_group.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar create_group_component = (0,componentNormalizer/* default */.A)(\n  experience_create_groupvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const create_group = (create_group_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9537\n");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_atomstore"] = globalThis["webpackChunkdevops_atomstore"] || []).push([[863],{

/***/ 7234:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937606679\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIzNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2xvZy5taW4uY3NzP2NkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzYwNjY3OVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7234\n");

/***/ }),

/***/ 9987:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937604347\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTk4Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT82MjFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc2MDQzNDdcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9987\n");

/***/ }),

/***/ 2214:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937599191\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9jZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1OTkxOTFcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2214\n");

/***/ }),

/***/ 1629:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937599241\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYyOS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvZGV0YWlsSW5mby52dWU/ODhiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTk5MjQxXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1629\n");

/***/ }),

/***/ 8113:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937596226\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODExMy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL3ZpZXdzL2ltYWdlUHJvZ3Jlc3MudnVlPzJmYWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU5NjIyNlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8113\n");

/***/ }),

/***/ 7509:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ Log)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=template&id=71848dbc\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"section\", {\n    staticClass: \"pipeline-logs\"\n  }, [_c(\"div\", {\n    ref: \"logContainer\",\n    attrs: {\n      buildNo: _vm.buildNo\n    }\n  })]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=template&id=71848dbc\n\n// EXTERNAL MODULE: ./src/components/Log/log.min.css\nvar log_min = __webpack_require__(7234);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=script&lang=js\n\n/* harmony default export */ const Logvue_type_script_lang_js = ({\n  name: 'pipeline-log',\n  props: {\n    buildNo: {\n      type: String,\n      required: true\n    },\n    buildNum: {\n      type: Number,\n      required: true\n    },\n    buildTag: {\n      type: String,\n      default: ''\n    },\n    showExport: {\n      type: Boolean,\n      default: false\n    },\n    logUrl: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showTime: false\n      // sodaLog: require()\n    };\n  },\n  watch: {\n    buildNo(newVal, oldVal) {\n      newVal && this.renderLog(newVal);\n    },\n    buildTag(newVal, oldVal) {\n      this.renderLog(this.buildNo);\n    },\n    showTime(newVal, oldVal) {\n      this.renderLog(this.buildNo);\n    }\n  },\n  beforeDestroy() {\n    this._destroyLog();\n  },\n  async mounted() {\n    if (!window.SodaLog) {\n      await __webpack_require__.e(/* import() | log */ 723).then(__webpack_require__.bind(__webpack_require__, 2324));\n    }\n    this.SodaLog = window.SodaLog;\n    this.buildNo && this.renderLog(this.buildNo);\n  },\n  methods: {\n    renderLog(buildNo) {\n      this.SodaLog.render(this.$refs.logContainer, `${window.API_URL_PREFIX}/${this.logUrl}`, buildNo, this.showTime, this.buildTag);\n    },\n    _destroyLog() {\n      this.SodaLog.unMount(this.$refs.logContainer);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_Logvue_type_script_lang_js = (Logvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=style&index=0&id=71848dbc&prod&lang=scss\nvar Logvue_type_style_index_0_id_71848dbc_prod_lang_scss = __webpack_require__(9987);\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=style&index=0&id=71848dbc&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/Log/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_Logvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Log = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUwOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTs7Ozs7OztBRUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVFQTs7Ozs7Ozs7QUVBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL0xvZy9pbmRleC52dWU/NzE0ZCIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT9hNWIzIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT8xZWYxIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvLi9zcmMvY29tcG9uZW50cy9Mb2cvaW5kZXgudnVlP2JmMGMiLCJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL0xvZy9pbmRleC52dWU/YWUzMiIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT80OWM3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gIHZhciBfdm0gPSB0aGlzLFxuICAgIF9jID0gX3ZtLl9zZWxmLl9jXG4gIHJldHVybiBfYyhcInNlY3Rpb25cIiwgeyBzdGF0aWNDbGFzczogXCJwaXBlbGluZS1sb2dzXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgcmVmOiBcImxvZ0NvbnRhaW5lclwiLCBhdHRyczogeyBidWlsZE5vOiBfdm0uYnVpbGRObyB9IH0pLFxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTcxODQ4ZGJjXCIiLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBpcGVsaW5lLWxvZ3NcIj5cclxuICAgICAgICA8IS0tIDxkaXYgY2xhc3M9J29wdGlvbnMtbG9nJz5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYmstYnV0dG9uIGJrLWJ1dHRvbi1zbWFsbCBzaG93dGltZS1sb2cnXHJcbiAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7J2JrLXByaW1hcnknOiBzaG93VGltZX1cIlxyXG4gICAgICAgICAgICAgICAgQGNsaWNrLnN0b3A9XCJzaG93VGltZSA9ICFzaG93VGltZVwiPuaYvuekuuaXtumXtDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz0nYmstYnV0dG9uIGJrLWJ1dHRvbi1zbWFsbCBleHBvcnQtbG9nJyB2LWlmPVwic2hvd0V4cG9ydFwiIGRvd25sb2FkIDpocmVmPVwiZG93bmxvYWRVcmxcIj7lr7zlh7rml6Xlv5c8L2E+XHJcbiAgICAgICAgPC9kaXY+IC0tPlxyXG4gICAgICAgIDxkaXYgcmVmPVwibG9nQ29udGFpbmVyXCIgOmJ1aWxkTm89XCJidWlsZE5vXCI+PC9kaXY+XHJcbiAgICA8L3NlY3Rpb24+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG4gICAgaW1wb3J0ICdAL2NvbXBvbmVudHMvTG9nL2xvZy5taW4uY3NzJ1xyXG4gICAgZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgICAgIG5hbWU6ICdwaXBlbGluZS1sb2cnLFxyXG4gICAgICAgIHByb3BzOiB7XHJcbiAgICAgICAgICAgIGJ1aWxkTm86IHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJ1aWxkTnVtOiB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBidWlsZFRhZzoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogJydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2hvd0V4cG9ydDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxvZ1VybDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YSAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBzaG93VGltZTogZmFsc2VcclxuICAgICAgICAgICAgICAgIC8vIHNvZGFMb2c6IHJlcXVpcmUoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB3YXRjaDoge1xyXG4gICAgICAgICAgICBidWlsZE5vIChuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICAgICAgbmV3VmFsICYmIHRoaXMucmVuZGVyTG9nKG5ld1ZhbClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYnVpbGRUYWcgKG5ld1ZhbCwgb2xkVmFsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckxvZyh0aGlzLmJ1aWxkTm8pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNob3dUaW1lIChuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJMb2codGhpcy5idWlsZE5vKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBiZWZvcmVEZXN0cm95ICgpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGVzdHJveUxvZygpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhc3luYyBtb3VudGVkICgpIHtcclxuICAgICAgICAgICAgaWYgKCF3aW5kb3cuU29kYUxvZykge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgaW1wb3J0KFxyXG4gICAgICAgICAgICAgICAgICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICdsb2cnICovXHJcbiAgICAgICAgICAgICAgICAgICAgJ0AvY29tcG9uZW50cy9Mb2cvbG9nLm1pbi5qcydcclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlNvZGFMb2cgPSB3aW5kb3cuU29kYUxvZ1xyXG4gICAgICAgICAgICB0aGlzLmJ1aWxkTm8gJiYgdGhpcy5yZW5kZXJMb2codGhpcy5idWlsZE5vKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWV0aG9kczoge1xyXG4gICAgICAgICAgICByZW5kZXJMb2cgKGJ1aWxkTm8pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU29kYUxvZy5yZW5kZXIodGhpcy4kcmVmcy5sb2dDb250YWluZXIsIGAke3dpbmRvdy5BUElfVVJMX1BSRUZJWH0vJHt0aGlzLmxvZ1VybH1gLCBidWlsZE5vLCB0aGlzLnNob3dUaW1lLCB0aGlzLmJ1aWxkVGFnKVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBfZGVzdHJveUxvZyAoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNvZGFMb2cudW5Nb3VudCh0aGlzLiRyZWZzLmxvZ0NvbnRhaW5lcilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cclxuICAgIEBpbXBvcnQgJ0AvYXNzZXRzL3Njc3MvY29uZi5zY3NzJztcclxuXHJcbiAgICAucGlwZWxpbmUtbG9ncyB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAub3B0aW9ucy1sb2cge1xyXG4gICAgICAgICAgICB0b3A6IC00NHB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgID4gZGl2IHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuPC9zdHlsZT5cclxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P2Nsb25lZFJ1bGVTZXQtMy51c2VbMF0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTcxODQ4ZGJjJnByb2QmbGFuZz1zY3NzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MTg0OGRiY1wiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03MTg0OGRiYyZwcm9kJmxhbmc9c2Nzc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7509\n");

/***/ }),

/***/ 3298:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ bread_crumbs)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"header\", {\n    staticClass: \"store-nav\"\n  }, [_c(\"section\", {\n    staticClass: \"nav-main\"\n  }, [_c(\"icon\", {\n    staticClass: \"title-icon\",\n    attrs: {\n      name: \"color-logo-store\",\n      size: \"22\"\n    }\n  }), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"back-home quick-route\",\n    on: {\n      click: function ($event) {\n        return _vm.changePage({\n          name: \"atomHome\",\n          query: {\n            pipeType: _vm.type\n          }\n        });\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")]), _vm._v(\" \"), _vm._l(_vm.breadCrumbs, function (breadCrumb) {\n    return [_c(\"i\", {\n      key: breadCrumb.name,\n      staticClass: \"right-arrow banner-arrow\"\n    }), _vm._v(\" \"), breadCrumb.to ? _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des quick-route\",\n      on: {\n        click: function ($event) {\n          return _vm.changePage(breadCrumb.to);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")]) : _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des\"\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")])];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=script&lang=js\n/* harmony default export */ const bread_crumbsvue_type_script_lang_js = ({\n  props: {\n    breadCrumbs: Array,\n    type: String\n  },\n  methods: {\n    changePage(to) {\n      this.$router.push(to);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=script&lang=js\n /* harmony default export */ const components_bread_crumbsvue_type_script_lang_js = (bread_crumbsvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\nvar bread_crumbsvue_type_style_index_0_id_5b47cb8d_prod_lang_scss_scoped_true = __webpack_require__(2214);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_bread_crumbsvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b47cb8d\",\n  null\n  \n)\n\n/* harmony default export */ const bread_crumbs = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzI5OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBSUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBRUE7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQUE7QUFBQTtBQUlBO0FBU0E7QUFDQTtBQUNBOzs7OztBRXREQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNCQTs7Ozs7Ozs7QUVBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL2JyZWFkLWNydW1icy52dWU/YWJjZiIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9jMmVlIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT8yMjJhIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvLi9zcmMvY29tcG9uZW50cy9icmVhZC1jcnVtYnMudnVlPzRhOTQiLCJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL2JyZWFkLWNydW1icy52dWU/Y2YwOSIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9lZTY0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gIHZhciBfdm0gPSB0aGlzLFxuICAgIF9jID0gX3ZtLl9zZWxmLl9jXG4gIHJldHVybiBfYyhcbiAgICBcImhlYWRlclwiLFxuICAgIHsgc3RhdGljQ2xhc3M6IFwic3RvcmUtbmF2XCIgfSxcbiAgICBbXG4gICAgICBfYyhcbiAgICAgICAgXCJzZWN0aW9uXCIsXG4gICAgICAgIHsgc3RhdGljQ2xhc3M6IFwibmF2LW1haW5cIiB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJpY29uXCIsIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcInRpdGxlLWljb25cIixcbiAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6IFwiY29sb3ItbG9nby1zdG9yZVwiLCBzaXplOiBcIjIyXCIgfSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImJhY2staG9tZSBxdWljay1yb3V0ZVwiLFxuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNoYW5nZVBhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImF0b21Ib21lXCIsXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiB7IHBpcGVUeXBlOiBfdm0udHlwZSB9LFxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtfdm0uX3YoXCIgXCIgKyBfdm0uX3MoX3ZtLiR0KFwic3RvcmUu56CU5Y+R5ZWG5bqXXCIpKSArIFwiIFwiKV1cbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX3ZtLl9sKF92bS5icmVhZENydW1icywgZnVuY3Rpb24gKGJyZWFkQ3J1bWIpIHtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAga2V5OiBicmVhZENydW1iLm5hbWUsXG4gICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwicmlnaHQtYXJyb3cgYmFubmVyLWFycm93XCIsXG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBicmVhZENydW1iLnRvXG4gICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBrZXk6IGJyZWFkQ3J1bWIubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJiYW5uZXItZGVzIHF1aWNrLXJvdXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY2hhbmdlUGFnZShicmVhZENydW1iLnRvKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KFwiIFwiICsgX3ZtLl9zKGJyZWFkQ3J1bWIubmFtZSkgKyBcIiBcIildXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgIHsga2V5OiBicmVhZENydW1iLm5hbWUsIHN0YXRpY0NsYXNzOiBcImJhbm5lci1kZXNcIiB9LFxuICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KFwiIFwiICsgX3ZtLl9zKGJyZWFkQ3J1bWIubmFtZSkgKyBcIiBcIildXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0pLFxuICAgICAgICBdLFxuICAgICAgICAyXG4gICAgICApLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF92bS5fdChcImRlZmF1bHRcIiksXG4gICAgXSxcbiAgICAyXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/cnVsZVNldFsxXS5ydWxlc1szXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2JyZWFkLWNydW1icy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWI0N2NiOGQmc2NvcGVkPXRydWVcIiIsIjx0ZW1wbGF0ZT5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJzdG9yZS1uYXZcIj5cclxuICAgICAgICA8c2VjdGlvbiBjbGFzcz1cIm5hdi1tYWluXCI+XHJcbiAgICAgICAgICAgIDxpY29uIGNsYXNzPVwidGl0bGUtaWNvblwiIG5hbWU9XCJjb2xvci1sb2dvLXN0b3JlXCIgc2l6ZT1cIjIyXCIgLz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJiYWNrLWhvbWUgcXVpY2stcm91dGVcIiBAY2xpY2s9XCJjaGFuZ2VQYWdlKHsgbmFtZTogJ2F0b21Ib21lJywgcXVlcnk6IHsgcGlwZVR5cGU6IHR5cGUgfSB9KVwiPiB7eyAkdCgnc3RvcmUu56CU5Y+R5ZWG5bqXJykgfX0gPC9zcGFuPlxyXG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9XCJicmVhZENydW1iIGluIGJyZWFkQ3J1bWJzXCI+XHJcbiAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInJpZ2h0LWFycm93IGJhbm5lci1hcnJvd1wiIDprZXk9XCJicmVhZENydW1iLm5hbWVcIj48L2k+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhbm5lci1kZXMgcXVpY2stcm91dGVcIiA6a2V5PVwiYnJlYWRDcnVtYi5uYW1lXCIgdi1pZj1cImJyZWFkQ3J1bWIudG9cIiBAY2xpY2s9XCJjaGFuZ2VQYWdlKGJyZWFkQ3J1bWIudG8pXCI+IHt7IGJyZWFkQ3J1bWIubmFtZSB9fSA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhbm5lci1kZXNcIiA6a2V5PVwiYnJlYWRDcnVtYi5uYW1lXCIgdi1lbHNlPiB7eyBicmVhZENydW1iLm5hbWUgfX0gPC9zcGFuPlxyXG4gICAgICAgICAgICA8L3RlbXBsYXRlPlxyXG4gICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICA8c2xvdD48L3Nsb3Q+XHJcbiAgICA8L2hlYWRlcj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICAgICAgcHJvcHM6IHtcclxuICAgICAgICAgICAgYnJlYWRDcnVtYnM6IEFycmF5LFxyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmdcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgICAgIGNoYW5nZVBhZ2UgKHRvKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0bylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XHJcbiAgICAuc3RvcmUtbmF2IHtcclxuICAgICAgICBoZWlnaHQ6IDUuNnZoO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgcGFkZGluZzogMCAuMzJyZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBjb2xvcjogIzk5OTtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDFweCAwIDAgI2ViZWRmMDtcclxuICAgICAgICAubmF2LW1haW4ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGl0bGUtaWNvbiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAucmlnaHQtYXJyb3cge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDUuNnZoO1xyXG4gICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAtMi41cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICMyNTI5MzU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLnF1aWNrLXJvdXRlIHtcclxuICAgICAgICAgICAgY29sb3I6ICMyMjI7XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbjwvc3R5bGU+XHJcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9icmVhZC1jcnVtYnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9icmVhZC1jcnVtYnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P2Nsb25lZFJ1bGVTZXQtMy51c2VbMF0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2JyZWFkLWNydW1icy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD01YjQ3Y2I4ZCZwcm9kJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZVwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9icmVhZC1jcnVtYnMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTViNDdjYjhkJnNjb3BlZD10cnVlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vYnJlYWQtY3J1bWJzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9icmVhZC1jcnVtYnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vYnJlYWQtY3J1bWJzLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTViNDdjYjhkJnByb2QmbGFuZz1zY3NzJnNjb3BlZD10cnVlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjViNDdjYjhkXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3298\n");

/***/ }),

/***/ 922:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ imageProgress)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/imageProgress.vue?vue&type=template&id=f9114afa&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"article\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    staticClass: \"image-progress-home\"\n  }, [_c(\"bread-crumbs\", {\n    attrs: {\n      \"bread-crumbs\": _vm.navList,\n      type: \"image\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"g-title-work\",\n    attrs: {\n      target: \"_blank\",\n      href: _vm.docsLink\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.镜像指引\")) + \" \")])]), _vm._v(\" \"), !_vm.isLoading ? _c(\"main\", {\n    staticClass: \"image-progress-main\"\n  }, [_c(\"section\", {\n    staticClass: \"image-progress-section\"\n  }, [_c(\"h3\", [_c(\"span\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布进度\")) + \" \")]), _vm._v(\" \"), _c(\"span\", {\n    class: [{\n      disable: !_vm.permission\n    }, \"cancel-release\"],\n    attrs: {\n      title: _vm.permissionMsg\n    },\n    on: {\n      click: _vm.cancelRelease\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.取消发布\")) + \" \")])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"progress-step\"\n  }, [_c(\"div\", {\n    staticClass: \"step-line-box\"\n  }, _vm._l(_vm.progressStatus, function (entry, index) {\n    return _c(\"div\", {\n      key: index,\n      staticClass: \"step-card\",\n      class: {\n        \"processing-status\": entry.status === \"doing\",\n        \"fail-status\": entry.status === \"fail\",\n        \"success-status\": entry.code === \"end\" && entry.status === \"success\"\n      }\n    }, [_c(\"div\", {\n      staticClass: \"card-item\"\n    }, [entry.status === \"success\" ? _c(\"i\", {\n      staticClass: \"devops-icon icon-check-1\"\n    }) : _vm._e(), _vm._v(\" \"), _c(\"p\", {\n      staticClass: \"step-label\"\n    }, [_vm._v(_vm._s(entry.name))])]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"retry-bth\"\n    }, [entry.code === \"check\" && entry.status === \"fail\" || entry.code === \"check\" && entry.status === \"success\" && _vm.progressStatus[index + 1].status === \"doing\" ? _c(\"span\", {\n      class: [{\n        disable: !_vm.permission\n      }, \"rebuild-btn\"],\n      attrs: {\n        title: _vm.permissionMsg\n      },\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.reCheck.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.重新验证\")) + \" \"), _c(\"i\", {\n      staticClass: \"col-line\"\n    })]) : _vm._e(), _vm._v(\" \"), entry.code === \"check\" && entry.status !== \"undo\" ? _c(\"span\", {\n      staticClass: \"log-btn\",\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.readLog.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.日志\")) + \" \")]) : _vm._e(), _vm._v(\" \"), entry.code === \"test\" && entry.status === \"doing\" ? _c(\"span\", {\n      staticClass: \"test-btn\"\n    }, [_c(\"a\", {\n      attrs: {\n        target: \"_blank\",\n        href: `/console/pipeline/${_vm.imageDetail.projectCode}/list`\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.测试\")) + \" \")])]) : _vm._e()]), _vm._v(\" \"), entry.code === \"test\" ? _c(\"bk-button\", {\n      staticClass: \"pass-btn\",\n      attrs: {\n        theme: \"primary\",\n        size: \"small\",\n        disabled: entry.status !== \"doing\" || !_vm.permission,\n        loading: _vm.isTestLoading,\n        title: _vm.permissionMsg\n      },\n      nativeOn: {\n        click: function ($event) {\n          return _vm.passTest.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.继续\")) + \" \")]) : _vm._e(), _vm._v(\" \"), entry.code === \"approve\" && entry.status === \"doing\" ? _c(\"div\", {\n      staticClass: \"audit-tips\"\n    }, [_c(\"i\", {\n      staticClass: \"devops-icon icon-info-circle\"\n    }), _vm._v(\" \" + _vm._s(_vm.$t(\"store.由蓝盾管理员审核\")) + \" \")]) : _vm._e()], 1);\n  }), 0)])]), _vm._v(\" \"), !_vm.isOver ? _c(\"section\", {\n    staticClass: \"image-progress-section\"\n  }, [_c(\"h3\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本详情\")) + \" \")]), _vm._v(\" \"), _c(\"detail-info\", {\n    attrs: {\n      detail: _vm.imageDetail\n    }\n  })], 1) : _c(\"div\", {\n    staticClass: \"released-tips\"\n  }, [_c(\"h3\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.恭喜，成功发布到商店!\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"handle-btn\"\n  }, [_c(\"bk-button\", {\n    staticClass: \"bk-button bk-primary\",\n    attrs: {\n      size: \"small\"\n    },\n    nativeOn: {\n      click: function ($event) {\n        return _vm.toImageList.apply(null, arguments);\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.工作台\")) + \" \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    staticClass: \"bk-button bk-default\",\n    attrs: {\n      size: \"small\"\n    },\n    nativeOn: {\n      click: function ($event) {\n        return _vm.toAtomStore.apply(null, arguments);\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")])], 1)])]) : _vm._e(), _vm._v(\" \"), _c(\"bk-sideslider\", {\n    staticClass: \"build-side-slider\",\n    attrs: {\n      \"is-show\": _vm.sideSliderConfig.show,\n      title: _vm.sideSliderConfig.title,\n      \"quick-close\": _vm.sideSliderConfig.quickClose,\n      width: _vm.sideSliderConfig.width\n    },\n    on: {\n      \"update:isShow\": function ($event) {\n        return _vm.$set(_vm.sideSliderConfig, \"show\", $event);\n      },\n      \"update:is-show\": function ($event) {\n        return _vm.$set(_vm.sideSliderConfig, \"show\", $event);\n      }\n    }\n  }, [_c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.sideSliderConfig.loading.isLoading,\n        title: _vm.sideSliderConfig.loading.title\n      },\n      expression: \"{\\n                    isLoading: sideSliderConfig.loading.isLoading,\\n                    title: sideSliderConfig.loading.title\\n                }\"\n    }],\n    staticStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, [_vm.currentBuildNo ? _c(\"build-log\", {\n    attrs: {\n      \"build-no\": _vm.currentBuildNo,\n      \"log-url\": `store/api/user/store/logs/types/IMAGE/projects/${_vm.currentProjectCode}/pipelines/${_vm.currentPipelineId}/builds`\n    }\n  }) : _vm._e()], 1)])], 2)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/imageProgress.vue?vue&type=template&id=f9114afa&scoped=true\n\n// EXTERNAL MODULE: ./src/components/Log/index.vue + 5 modules\nvar Log = __webpack_require__(7509);\n// EXTERNAL MODULE: ./src/components/bread-crumbs.vue + 5 modules\nvar bread_crumbs = __webpack_require__(3298);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/detailInfo.vue?vue&type=template&id=74267d22&scoped=true\nvar detailInfovue_type_template_id_74267d22_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"bk-container\", {\n    attrs: {\n      flex: \"\",\n      col: 12\n    }\n  }, [_c(\"bk-row\", [_c(\"bk-col\", {\n    attrs: {\n      span: 9\n    }\n  }, [_c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 4.5\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.名称\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.imageName))])]), _vm._v(\" \"), _c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 4.5\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.标识\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.imageCode))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 4.5\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.范畴\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.categoryName))])]), _vm._v(\" \"), _c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 4.5\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.分类\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.classifyName))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 9\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.功能标签\")) + \" :\")]), _vm._v(\" \"), _c(\"section\", {\n    staticClass: \"g-progress-content label-list\"\n  }, _vm._l(_vm.detail.labelList, function (label, index) {\n    return _c(\"span\", {\n      key: index,\n      staticClass: \"label-card\"\n    }, [_vm._v(_vm._s(label.labelName))]);\n  }), 0)])], 1)], 1), _vm._v(\" \"), _c(\"bk-col\", {\n    attrs: {\n      span: 3\n    }\n  }, [_vm.detail.logoUrl ? _c(\"img\", {\n    staticClass: \"g-progress-image\",\n    attrs: {\n      src: _vm.detail.logoUrl\n    }\n  }) : _vm._e()])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.适用机器\")) + \" :\")]), _vm._v(\" \"), _c(\"section\", {\n    staticClass: \"g-progress-content label-list\"\n  }, _vm._l(_vm.filterAgents, function (agent, index) {\n    return _c(\"span\", {\n      key: index,\n      staticClass: \"label-card\"\n    }, [_vm._v(_vm._s(agent))]);\n  }), 0)])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.简介\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.summary))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.详细描述\")) + \" :\")]), _vm._v(\" \"), _c(\"section\", {\n    staticClass: \"g-progress-content\"\n  }, [_c(\"p\", {\n    ref: \"edit\",\n    class: {\n      overflow: !_vm.isDropdownShow\n    }\n  }, [_c(\"mavon-editor\", {\n    ref: \"mdHook\",\n    staticClass: \"image-remark-input\",\n    attrs: {\n      editable: false,\n      \"toolbars-flag\": false,\n      \"default-open\": \"preview\",\n      \"box-shadow\": false,\n      subfield: false,\n      language: _vm.mavenLang,\n      \"preview-back-ground\": \"#fafbfd\"\n    },\n    model: {\n      value: _vm.detail.description,\n      callback: function ($$v) {\n        _vm.$set(_vm.detail, \"description\", $$v);\n      },\n      expression: \"detail.description\"\n    }\n  })], 1), _vm._v(\" \"), _vm.isOverflow ? _c(\"span\", {\n    staticClass: \"toggle-btn\",\n    on: {\n      click: function ($event) {\n        _vm.isDropdownShow = !_vm.isDropdownShow;\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.isDropdownShow ? _vm.$t(\"store.收起\") : _vm.$t(\"store.展开\")) + \"\\n                    \"), _c(\"i\", {\n    class: [\"devops-icon icon-angle-down\", {\n      \"icon-flip\": _vm.isDropdownShow\n    }]\n  })]) : _vm._e()])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.镜像\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s((_vm.detail.imageRepoUrl ? _vm.detail.imageRepoUrl + \"/\" : \"\") + _vm.detail.imageRepoName + \":\" + _vm.detail.imageTag))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.镜像凭证\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.ticketId))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.发布者\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.publisher))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.发布类型\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm._f(\"releaseFilter\")(_vm.detail.releaseType)))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.版本\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_vm._v(_vm._s(_vm.detail.version))])])], 1), _vm._v(\" \"), _c(\"bk-row\", [_c(\"bk-col\", {\n    staticClass: \"g-progress-item\",\n    attrs: {\n      span: 12\n    }\n  }, [_c(\"span\", {\n    staticClass: \"g-progress-label\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.发布描述\")) + \" :\")]), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"g-progress-content\"\n  }, [_c(\"mavon-editor\", {\n    ref: \"mdHook\",\n    staticClass: \"image-remark-input\",\n    attrs: {\n      editable: false,\n      \"toolbars-flag\": false,\n      \"default-open\": \"preview\",\n      \"box-shadow\": false,\n      subfield: false,\n      language: _vm.mavenLang,\n      \"preview-back-ground\": \"#fafbfd\"\n    },\n    model: {\n      value: _vm.detail.versionContent,\n      callback: function ($$v) {\n        _vm.$set(_vm.detail, \"versionContent\", $$v);\n      },\n      expression: \"detail.versionContent\"\n    }\n  })], 1)])], 1)], 1);\n};\nvar detailInfovue_type_template_id_74267d22_scoped_true_staticRenderFns = [];\ndetailInfovue_type_template_id_74267d22_scoped_true_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/detailInfo.vue?vue&type=template&id=74267d22&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/detailInfo.vue?vue&type=script&lang=js\n\n/* harmony default export */ const detailInfovue_type_script_lang_js = ({\n  filters: {\n    releaseFilter(value) {\n      const local = window.devops || {};\n      let res = '';\n      switch (value) {\n        case 'NEW':\n          res = local.$t('store.初始化');\n          break;\n        case 'INCOMPATIBILITY_UPGRADE':\n          res = local.$t('store.非兼容升级');\n          break;\n        case 'COMPATIBILITY_UPGRADE':\n          res = local.$t('store.兼容式功能更新');\n          break;\n        case 'COMPATIBILITY_FIX':\n          res = local.$t('store.兼容式问题修正');\n          break;\n      }\n      return res;\n    }\n  },\n  props: {\n    detail: {\n      type: Object,\n      require: true\n    }\n  },\n  data() {\n    return {\n      isOverflow: false,\n      isDropdownShow: false,\n      agentTypes: []\n    };\n  },\n  computed: {\n    filterAgents() {\n      const AgentNames = [];\n      this.detail.agentTypeScope.forEach(item => {\n        this.agentTypes.forEach(agent => {\n          if (item === agent.code) {\n            AgentNames.push(agent.name);\n          }\n        });\n      });\n      return AgentNames;\n    },\n    mavenLang() {\n      return this.$i18n.locale === 'en-US' ? 'en' : this.$i18n.locale;\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.isOverflow = this.$refs.edit.scrollHeight > 180;\n    }, 1000);\n    this.fetchAgentTypes().then(res => {\n      this.agentTypes = res;\n    });\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('store', ['fetchAgentTypes'])\n  }\n});\n;// CONCATENATED MODULE: ./src/components/detailInfo.vue?vue&type=script&lang=js\n /* harmony default export */ const components_detailInfovue_type_script_lang_js = (detailInfovue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/detailInfo.vue?vue&type=style&index=0&id=74267d22&prod&lang=scss&scoped=true\nvar detailInfovue_type_style_index_0_id_74267d22_prod_lang_scss_scoped_true = __webpack_require__(1629);\n;// CONCATENATED MODULE: ./src/components/detailInfo.vue?vue&type=style&index=0&id=74267d22&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/detailInfo.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_detailInfovue_type_script_lang_js,\n  detailInfovue_type_template_id_74267d22_scoped_true_render,\n  detailInfovue_type_template_id_74267d22_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"74267d22\",\n  null\n  \n)\n\n/* harmony default export */ const detailInfo = (component.exports);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/imageProgress.vue?vue&type=script&lang=js\n\n\n\n\n/* harmony default export */ const imageProgressvue_type_script_lang_js = ({\n  components: {\n    detailInfo: detailInfo,\n    BuildLog: Log/* default */.A,\n    breadCrumbs: bread_crumbs/* default */.A\n  },\n  data() {\n    return {\n      docsLink: this.BKCI_DOCS.IMAGE_GUIDE_DOC,\n      isLoading: false,\n      isTestLoading: false,\n      progressStatus: [],\n      imageDetail: {},\n      storeBuildInfo: {},\n      permission: true,\n      currentProjectId: '',\n      currentBuildNo: '',\n      currentPipelineId: '',\n      sideSliderConfig: {\n        show: false,\n        title: this.$t('store.查看日志'),\n        quickClose: true,\n        width: 820,\n        value: '',\n        loading: {\n          isLoading: false,\n          title: ''\n        }\n      }\n    };\n  },\n  computed: {\n    permissionMsg() {\n      let str = '';\n      if (!this.permission) str = this.$t('store.只有镜像管理员或当前流程创建者可以操作');\n      return str;\n    },\n    isOver() {\n      const lastProgress = this.progressStatus[this.progressStatus.length - 1] || {};\n      return lastProgress.status === 'success';\n    },\n    navList() {\n      return [{\n        name: this.$t('store.工作台')\n      }, {\n        name: this.$t('store.容器镜像'),\n        to: {\n          name: 'imageWork'\n        }\n      }, {\n        name: this.imageDetail.imageCode,\n        to: {\n          name: 'show',\n          params: {\n            code: this.imageDetail.imageCode,\n            type: 'image'\n          }\n        }\n      }, {\n        name: this.$t('store.上架/升级镜像')\n      }];\n    }\n  },\n  watch: {\n    'sideSliderConfig.show'(val) {\n      if (!val) {\n        this.currentProjectCode = '';\n        this.currentBuildNo = '';\n        this.currentPipelineId = '';\n      }\n    }\n  },\n  created() {\n    this.initData();\n    this.loopProgress();\n  },\n  beforeDestroy() {\n    clearTimeout(this.loopProgress.timeId);\n  },\n  methods: {\n    ...(0,external_Vuex_.mapActions)('store', ['requestImageDetail', 'requestImageProcess', 'requestCancelRelease', 'requestImagePassTest', 'requestRecheckImage']),\n    readLog() {\n      this.sideSliderConfig.show = true;\n      this.currentProjectCode = this.storeBuildInfo.projectCode;\n      this.currentBuildNo = this.storeBuildInfo.buildId;\n      this.currentPipelineId = this.storeBuildInfo.pipelineId;\n    },\n    initData() {\n      Promise.all([this.getImageDetail(), this.getImageProcess()]).catch(err => {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    reCheck() {\n      if (!this.permission) return;\n      const params = this.$route.params || {};\n      const imageId = params.imageId || '';\n      this.requestRecheckImage(imageId).then(() => {\n        this.$bkMessage({\n          message: this.$t('store.发起重新验证成功'),\n          theme: 'success'\n        });\n        this.getImageProcess();\n      }).catch(err => {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      });\n    },\n    passTest() {\n      if (!this.permission) return;\n      const params = this.$route.params || {};\n      const imageId = params.imageId || '';\n      this.isTestLoading = true;\n      this.requestImagePassTest(imageId).then(() => {\n        this.getImageProcess();\n      }).catch(err => {\n        this.$bkMessage({\n          message: err.message || err,\n          theme: 'error'\n        });\n      }).finally(() => this.isTestLoading = false);\n    },\n    cancelRelease() {\n      if (!this.permission) return;\n      const confirmFn = () => {\n        const params = this.$route.params || {};\n        const imageId = params.imageId || '';\n        this.requestCancelRelease(imageId).then(() => {\n          this.$bkMessage({\n            message: this.$t('store.取消发布成功'),\n            theme: 'success'\n          });\n          this.toImageList();\n        }).catch(err => {\n          this.$bkMessage({\n            message: err.message || err,\n            theme: 'error'\n          });\n        }).finally(() => this.isLoading = false);\n      };\n      this.$bkInfo({\n        title: this.$t('store.确认要取消发布吗？'),\n        confirmFn\n      });\n    },\n    getImageDetail() {\n      const params = this.$route.params || {};\n      const imageId = params.imageId || '';\n      this.isLoading = true;\n      return this.requestImageDetail(imageId).then(res => {\n        this.imageDetail = res;\n      });\n    },\n    getImageProcess() {\n      const params = this.$route.params || {};\n      const imageId = params.imageId || '';\n      return this.requestImageProcess(imageId).then(res => {\n        this.progressStatus = res.processInfos || {};\n        this.permission = res.opPermission || false;\n        this.storeBuildInfo = res.storeBuildInfo || {};\n      });\n    },\n    loopProgress() {\n      this.getImageProcess().catch(err => this.$bkMessage({\n        message: err.message || err,\n        theme: 'error'\n      }));\n      clearTimeout(this.loopProgress.timeId);\n      if (!this.isOver) this.loopProgress.timeId = setTimeout(this.loopProgress, 5000);\n    },\n    toImageList() {\n      this.$router.push({\n        name: 'imageWork'\n      });\n    },\n    toAtomStore() {\n      this.$router.push({\n        name: 'atomHome',\n        query: {\n          pipeType: 'image'\n        }\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/imageProgress.vue?vue&type=script&lang=js\n /* harmony default export */ const views_imageProgressvue_type_script_lang_js = (imageProgressvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/imageProgress.vue?vue&type=style&index=0&id=f9114afa&prod&lang=scss&scoped=true\nvar imageProgressvue_type_style_index_0_id_f9114afa_prod_lang_scss_scoped_true = __webpack_require__(8113);\n;// CONCATENATED MODULE: ./src/views/imageProgress.vue?vue&type=style&index=0&id=f9114afa&prod&lang=scss&scoped=true\n\n;// CONCATENATED MODULE: ./src/views/imageProgress.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar imageProgress_component = (0,componentNormalizer/* default */.A)(\n  views_imageProgressvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f9114afa\",\n  null\n  \n)\n\n/* harmony default export */ const imageProgress = (imageProgress_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///922\n");

/***/ })

}]);
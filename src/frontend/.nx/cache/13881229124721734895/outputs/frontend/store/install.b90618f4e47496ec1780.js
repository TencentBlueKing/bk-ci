/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_atomstore"] = globalThis["webpackChunkdevops_atomstore"] || []).push([[848],{

/***/ 990:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wellKnownSymbol = __webpack_require__(7166);\nvar create = __webpack_require__(3981);\nvar defineProperty = (__webpack_require__(7614).f);\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMuanM/Nzc5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxudmFyIFVOU0NPUEFCTEVTID0gd2VsbEtub3duU3ltYm9sKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmlmIChBcnJheVByb3RvdHlwZVtVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSB7XG4gIGRlZmluZVByb3BlcnR5KEFycmF5UHJvdG90eXBlLCBVTlNDT1BBQkxFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogY3JlYXRlKG51bGwpXG4gIH0pO1xufVxuXG4vLyBhZGQgYSBrZXkgdG8gQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgQXJyYXlQcm90b3R5cGVbVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///990\n");

/***/ }),

/***/ 7406:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar $ = __webpack_require__(5689);\nvar $includes = (__webpack_require__(5254).includes);\nvar fails = __webpack_require__(8462);\nvar addToUnscopables = __webpack_require__(990);\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQwNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanM/MjJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXMnKS5pbmNsdWRlcztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzJyk7XG5cbi8vIEZGOTkrIGJ1Z1xudmFyIEJST0tFTl9PTl9TUEFSU0UgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhQXJyYXkoMSkuaW5jbHVkZXMoKTtcbn0pO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBCUk9LRU5fT05fU1BBUlNFIH0sIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmFkZFRvVW5zY29wYWJsZXMoJ2luY2x1ZGVzJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7406\n");

/***/ }),

/***/ 2214:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937599191\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9jZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1OTkxOTFcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2214\n");

/***/ }),

/***/ 8228:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937596118\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIyOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL3ZpZXdzL2luc3RhbGwudnVlP2Q5MzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzU5NjExOFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8228\n");

/***/ }),

/***/ 3298:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ bread_crumbs)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"header\", {\n    staticClass: \"store-nav\"\n  }, [_c(\"section\", {\n    staticClass: \"nav-main\"\n  }, [_c(\"icon\", {\n    staticClass: \"title-icon\",\n    attrs: {\n      name: \"color-logo-store\",\n      size: \"22\"\n    }\n  }), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"back-home quick-route\",\n    on: {\n      click: function ($event) {\n        return _vm.changePage({\n          name: \"atomHome\",\n          query: {\n            pipeType: _vm.type\n          }\n        });\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")]), _vm._v(\" \"), _vm._l(_vm.breadCrumbs, function (breadCrumb) {\n    return [_c(\"i\", {\n      key: breadCrumb.name,\n      staticClass: \"right-arrow banner-arrow\"\n    }), _vm._v(\" \"), breadCrumb.to ? _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des quick-route\",\n      on: {\n        click: function ($event) {\n          return _vm.changePage(breadCrumb.to);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")]) : _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des\"\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")])];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=script&lang=js\n/* harmony default export */ const bread_crumbsvue_type_script_lang_js = ({\n  props: {\n    breadCrumbs: Array,\n    type: String\n  },\n  methods: {\n    changePage(to) {\n      this.$router.push(to);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=script&lang=js\n /* harmony default export */ const components_bread_crumbsvue_type_script_lang_js = (bread_crumbsvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\nvar bread_crumbsvue_type_style_index_0_id_5b47cb8d_prod_lang_scss_scoped_true = __webpack_require__(2214);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_bread_crumbsvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b47cb8d\",\n  null\n  \n)\n\n/* harmony default export */ const bread_crumbs = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3298\n");

/***/ }),

/***/ 6091:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ install)\n});\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/install.vue?vue&type=template&id=986abe14\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.isLoading\n      },\n      expression: \"{ isLoading }\"\n    }],\n    staticClass: \"install-atom-wrapper\"\n  }, [_c(\"bread-crumbs\", {\n    attrs: {\n      \"bread-crumbs\": _vm.navList,\n      type: _vm.type\n    }\n  }), _vm._v(\" \"), !_vm.isLoading ? _c(\"div\", {\n    staticClass: \"install-atom-content\"\n  }, [!_vm.isINstallSuccess ? _c(\"div\", {\n    staticClass: \"sub-view-port\"\n  }, [_c(\"div\", {\n    staticClass: \"atom-name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.请选择项目：\")) + \" \")]), _vm._v(\" \"), _c(\"bk-select\", {\n    attrs: {\n      searchable: \"\",\n      multiple: \"\",\n      \"show-select-all\": \"\",\n      placeholder: _vm.$t(\"store.请选择\"),\n      loading: _vm.projectListLoading,\n      \"enable-virtual-scroll\": _vm.projectList && _vm.projectList.length > 3000,\n      list: _vm.projectList,\n      \"id-key\": \"projectCode\",\n      \"display-key\": \"projectName\"\n    },\n    on: {\n      selected: _vm.selectProject\n    },\n    model: {\n      value: _vm.project,\n      callback: function ($$v) {\n        _vm.project = $$v;\n      },\n      expression: \"project\"\n    }\n  }, [_vm._l(_vm.projectList, function (item) {\n    return _c(\"bk-option\", {\n      directives: [{\n        name: \"bk-tooltips\",\n        rawName: \"v-bk-tooltips\",\n        value: {\n          content: _vm.$t(\"store.无该项目的模板安装权限\"),\n          disabled: item.pipelineTemplateInstallPerm\n        },\n        expression: \"{\\n                        content: $t('store.无该项目的模板安装权限'),\\n                        disabled: item.pipelineTemplateInstallPerm\\n                    }\"\n      }],\n      key: item.projectCode,\n      attrs: {\n        id: item.projectCode,\n        name: item.projectName,\n        disabled: !item.pipelineTemplateInstallPerm\n      }\n    });\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticStyle: {\n      cursor: \"pointer\"\n    },\n    attrs: {\n      slot: \"extension\"\n    },\n    slot: \"extension\"\n  }, [_c(\"a\", {\n    attrs: {\n      href: \"/console/pm\",\n      target: \"_blank\"\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-plus-circle\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"store.新建项目\")) + \" \")])])], 2), _vm._v(\" \"), _vm.type === \"template\" ? _c(\"p\", {\n    staticClass: \"template-tip\"\n  }, [_vm._v(_vm._s(_vm.$t(\"store.若模版中有未安装的插件，将自动安装\")))]) : _vm._e(), _vm._v(\" \"), _vm.installError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.项目不能为空\")) + \" \")]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-footer\"\n  }, [_c(\"button\", {\n    staticClass: \"bk-button bk-primary\",\n    attrs: {\n      type: \"button\"\n    },\n    on: {\n      click: _vm.confirm\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.安装\")) + \" \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"bk-button bk-default\",\n    attrs: {\n      type: \"button\"\n    },\n    on: {\n      click: _vm.toBack\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.取消\")) + \" \")])]), _vm._v(\" \"), _vm.installedProject.length ? _c(\"section\", [_c(\"p\", {\n    staticClass: \"project-title\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.$t(\"store.该 {0} 已安装至以下项目：\", [_vm.type || _vm.typeFilter])) + \"\\n                \")]), _vm._v(\" \"), _c(\"table\", {\n    staticClass: \"bk-table project-table\"\n  }, [_c(\"thead\"), _vm._v(\" \"), _c(\"tbody\", _vm._l(_vm.installedProject, function (row, index) {\n    return _c(\"tr\", {\n      key: index\n    }, [_c(\"td\", [_vm._v(_vm._s(row.projectName))])]);\n  }), 0)])]) : _vm._e()], 1) : _c(\"div\", {\n    staticClass: \"install-success-tips\"\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-check-circle\"\n  }), _vm._v(\" \"), _c(\"h3\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.恭喜，已安装成功！\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"handle-btn\"\n  }, [_c(\"bk-button\", {\n    staticClass: \"bk-button bk-primary\",\n    attrs: {\n      size: \"small\"\n    },\n    on: {\n      click: _vm.backConsole\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.工作台\")) + \" \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    staticClass: \"bk-button bk-default\",\n    attrs: {\n      size: \"small\"\n    },\n    on: {\n      click: _vm.backToStore\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")]), _vm._v(\" \"), [\"atom\", \"template\", \"image\"].includes(_vm.type) ? _c(\"bk-button\", {\n    staticClass: \"bk-button bk-default\",\n    attrs: {\n      size: \"small\"\n    },\n    on: {\n      click: _vm.toPipeline\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.流水线\")) + \" \")]) : _vm._e()], 1)])]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/install.vue?vue&type=template&id=986abe14\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(8102);\n// EXTERNAL MODULE: external \"Vuex\"\nvar external_Vuex_ = __webpack_require__(9335);\n// EXTERNAL MODULE: ./src/components/bread-crumbs.vue + 5 modules\nvar bread_crumbs = __webpack_require__(3298);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/install.vue?vue&type=script&lang=js\n\n\n\n/* harmony default export */ const installvue_type_script_lang_js = ({\n  components: {\n    breadCrumbs: bread_crumbs/* default */.A\n  },\n  data() {\n    return {\n      type: this.$route.query.type,\n      code: this.$route.query.code,\n      from: this.$route.query.from,\n      name: '',\n      id: '',\n      installError: false,\n      projectListLoading: false,\n      isINstallSuccess: false,\n      project: [],\n      projectList: [],\n      installedProject: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    ...(0,external_Vuex_.mapGetters)('store', {\n      markerQuey: 'getMarketQuery'\n    }),\n    navList() {\n      let name;\n      switch (this.type) {\n        case 'atom':\n          name = this.$t('store.流水线插件');\n          break;\n        case 'template':\n          name = this.$t('store.流水线模板');\n          break;\n        case 'service':\n          name = this.$t('store.微扩展');\n          break;\n        default:\n          name = this.$t('store.容器镜像');\n          break;\n      }\n      (0,esm_extends/* default */.A)(this.markerQuey, {\n        pipeType: this.type\n      });\n      return [{\n        name,\n        to: {\n          name: 'atomHome',\n          query: this.markerQuey\n        }\n      }, {\n        name: this.fromFilter(this.from),\n        to: {\n          name: this.from,\n          params: {\n            type: this.type,\n            code: this.code\n          }\n        }\n      }, {\n        name: this.$t('store.安装') + name\n      }];\n    }\n  },\n  created() {\n    this.isLoading = true;\n    Promise.all([this.requestDetail(), this.requestRelativeProject()]).then(() => {\n      this.requestProjectList();\n    }).catch(err => {\n      this.$bkMessage({\n        message: err.messgae || err,\n        theme: 'error'\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    fromFilter(val) {\n      let res = '';\n      switch (val) {\n        case 'details':\n          res = this.name;\n          break;\n        default:\n          res = this.$t('store.工作台');\n          break;\n      }\n      return res;\n    },\n    requestDetail() {\n      const methods = {\n        atom: this.getAtomDetail,\n        template: this.getTemplateDetail,\n        image: this.getImageDetail,\n        service: this.getServiceDetail\n      };\n      return methods[this.type]();\n    },\n    getAtomDetail() {\n      return this.$store.dispatch('store/requestAtom', this.code).then(res => {\n        this.name = res.name;\n        this.id = res.atomId;\n      });\n    },\n    getTemplateDetail() {\n      return this.$store.dispatch('store/requestTemplate', this.code).then(res => {\n        this.name = res.templateName;\n        this.id = res.templateId;\n      });\n    },\n    getImageDetail() {\n      return this.$store.dispatch('store/requestImageDetailByCode', this.code).then(res => {\n        this.name = res.imageName;\n        this.id = res.imageId;\n      });\n    },\n    getServiceDetail() {\n      return this.$store.dispatch('store/requestServiceDetailByCode', this.code).then(res => {\n        this.name = res.serviceName;\n        this.id = res.serviceId;\n      });\n    },\n    requestRelativeProject() {\n      const methods = {\n        atom: 'store/requestRelativeProject',\n        template: 'store/requestRelativeTplProject',\n        image: 'store/requestRelativeImageProject',\n        service: 'store/requestRelativeServiceProject'\n      };\n      return this.$store.dispatch(methods[this.type], this.code).then(res => {\n        this.installedProject = res;\n      });\n    },\n    requestProjectList() {\n      this.projectListLoading = true;\n      this.$store.dispatch('store/requestProjectList').then(res => {\n        res.forEach(item => {\n          const isInstalled = this.installedProject.some(project => project.projectCode === item.projectCode);\n          if (!isInstalled) this.projectList.push(item);\n        });\n      }).catch(err => {\n        this.$bkMessage({\n          message: err.messgae || err,\n          theme: 'error'\n        });\n      }).finally(() => this.projectListLoading = false);\n    },\n    toBack() {\n      this.$router.push({\n        name: this.from,\n        params: {\n          type: this.type,\n          code: this.code\n        }\n      });\n    },\n    backConsole() {\n      const name = `${this.type}Work`;\n      this.$router.push({\n        name\n      });\n    },\n    backToStore() {\n      const pipeType = this.type;\n      (0,esm_extends/* default */.A)(this.markerQuey, {\n        pipeType\n      });\n      this.$router.push({\n        name: 'atomHome',\n        query: this.markerQuey\n      });\n    },\n    toPipeline() {\n      window.open('/console/pipeline', '_self');\n    },\n    selectProject(data) {\n      this.installError = !(Array.isArray(data) && data.length > 0);\n    },\n    confirm() {\n      if (!this.project.length) {\n        this.installError = true;\n        return;\n      }\n      const methods = {\n        atom: this.installAtom,\n        template: this.installTemplate,\n        image: this.installImage,\n        service: this.installService\n      };\n      this.isLoading = true;\n      methods[this.type]().then(() => {\n        this.isINstallSuccess = true;\n        this.$bkMessage({\n          message: this.$t('store.安装成功'),\n          theme: 'success'\n        });\n      }).catch(err => {\n        if (err.httpStatus === 200) {\n          const h = this.$createElement;\n          const subHeader = h('p', {\n            style: {\n              textAlign: 'left',\n              'text-overflow': 'ellipsis',\n              'white-space': 'nowrap',\n              overflow: 'hidden'\n            },\n            attrs: {\n              title: err.message || err\n            }\n          }, err.message || err);\n          this.$bkInfo({\n            type: 'error',\n            title: this.$t('store.安装失败'),\n            subHeader\n          });\n        } else {\n          this.$bkMessage({\n            message: err.message || err,\n            theme: 'error'\n          });\n        }\n      }).finally(() => this.isLoading = false);\n    },\n    installAtom() {\n      const params = {\n        atomCode: this.code,\n        projectCode: this.project\n      };\n      return this.$store.dispatch('store/installAtom', {\n        params\n      });\n    },\n    installTemplate() {\n      const params = {\n        templateCode: this.code,\n        projectCodeList: this.project\n      };\n      return this.$store.dispatch('store/installTemplate', {\n        params\n      });\n    },\n    installImage() {\n      const params = {\n        imageCode: this.code,\n        projectCodeList: this.project\n      };\n      return this.$store.dispatch('store/installImage', params);\n    },\n    installService() {\n      const params = {\n        serviceCode: this.code,\n        projectCodeList: this.project\n      };\n      return this.$store.dispatch('store/installService', params);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/install.vue?vue&type=script&lang=js\n /* harmony default export */ const views_installvue_type_script_lang_js = (installvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/install.vue?vue&type=style&index=0&id=986abe14&prod&lang=scss\nvar installvue_type_style_index_0_id_986abe14_prod_lang_scss = __webpack_require__(8228);\n;// CONCATENATED MODULE: ./src/views/install.vue?vue&type=style&index=0&id=986abe14&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/views/install.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  views_installvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const install = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6091\n");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdevops_atomstore"] = self["webpackChunkdevops_atomstore"] || []).push([[137],{

/***/ 7551:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ list)\n});\n\n;// CONCATENATED MODULE: ../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/market/list.vue?vue&type=template&id=f1113c32&scoped=true&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"article\",\n    {\n      directives: [\n        {\n          name: \"bkloading\",\n          rawName: \"v-bkloading\",\n          value: { isLoading: _vm.isLoading, opacity: 1 },\n          expression: \"{ isLoading, opacity: 1 }\",\n        },\n      ],\n    },\n    [\n      _c(\n        \"h3\",\n        {\n          directives: [\n            {\n              name: \"bk-clickoutside\",\n              rawName: \"v-bk-clickoutside\",\n              value: _vm.closeOrderList,\n              expression: \"closeOrderList\",\n            },\n          ],\n          staticClass: \"list-type\",\n        },\n        [\n          _c(\"span\", { staticClass: \"list-count\" }, [\n            _vm._v(\" \" + _vm._s(_vm.$t(\"store.总数 :\")) + \" \"),\n            _c(\"strong\", [_vm._v(_vm._s(_vm.count))]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { staticClass: \"list-sort\" }, [\n            _vm._v(\" \" + _vm._s(_vm.$t(\"store.排序：\")) + \" \"),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            {\n              class: [{ \"show-type\": _vm.showOrderList }, \"list-order\"],\n              on: {\n                click: function ($event) {\n                  $event.stopPropagation()\n                  _vm.showOrderList = !_vm.showOrderList\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.orderType.name))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"ul\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.showOrderList,\n                  expression: \"showOrderList\",\n                },\n              ],\n              staticClass: \"list-menu\",\n            },\n            _vm._l(_vm.orderList, function (order, index) {\n              return _c(\n                \"li\",\n                {\n                  key: index,\n                  on: {\n                    click: function ($event) {\n                      $event.stopPropagation()\n                      return _vm.chooseOrderType(order)\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(order.name))]\n              )\n            }),\n            0\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      !_vm.isLoading\n        ? _c(\n            \"hgroup\",\n            { staticClass: \"list-cards\" },\n            _vm._l(_vm.cards, function (card) {\n              return _c(\"card\", {\n                key: card.atomCode,\n                staticClass: \"list-card\",\n                attrs: { atom: card, \"has-summary\": true },\n              })\n            }),\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.cards.length <= 0\n        ? _c(\"p\", { staticClass: \"g-empty list-empty\" }, [\n            _vm._v(\" \" + _vm._s(_vm.$t(\"store.没找到相关结果\")) + \" \"),\n          ])\n        : _vm._e(),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./src/views/market/list.vue?vue&type=template&id=f1113c32&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js\nvar es_promise = __webpack_require__(8674);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.finally.js\nvar es_promise_finally = __webpack_require__(7727);\n// EXTERNAL MODULE: ./src/components/common/card/index.vue + 9 modules\nvar card = __webpack_require__(61);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/market/list.vue?vue&type=script&lang=js&\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const listvue_type_script_lang_js_ = ({\n  components: {\n    card: card/* default */.Z\n  },\n  data() {\n    return {\n      pageSize: 40,\n      page: 1,\n      isLoadingMore: false,\n      loadEnd: false,\n      isLoading: true,\n      cards: [],\n      count: 0,\n      orderType: {\n        id: 'DOWNLOAD_COUNT',\n        name: this.$t('store.按热度')\n      },\n      showOrderList: false\n    };\n  },\n  computed: {\n    orderList() {\n      const orderMap = {\n        atom: [{\n          id: 'NAME',\n          name: this.$t('store.按名称A-Z')\n        }, {\n          id: 'CREATE_TIME',\n          name: this.$t('store.按创建时间')\n        }, {\n          id: 'UPDATE_TIME',\n          name: this.$t('store.按修改时间')\n        }, {\n          id: 'PUBLISHER',\n          name: this.$t('store.按发布者')\n        }, {\n          id: 'RECENT_EXECUTE_NUM',\n          name: this.$t('store.按热度')\n        }]\n      };\n      const defaultOrder = [{\n        id: 'NAME',\n        name: this.$t('store.按名称A-Z')\n      }, {\n        id: 'CREATE_TIME',\n        name: this.$t('store.按创建时间')\n      }, {\n        id: 'UPDATE_TIME',\n        name: this.$t('store.按修改时间')\n      }, {\n        id: 'PUBLISHER',\n        name: this.$t('store.按发布者')\n      }, {\n        id: 'DOWNLOAD_COUNT',\n        name: this.$t('store.按热度')\n      }];\n      const type = this.$route.query.pipeType || 'atom';\n      return orderMap[type] || defaultOrder;\n    }\n  },\n  watch: {\n    '$route.query': {\n      handler() {\n        this.initData();\n        this.resetListData();\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    this.addScrollLoadMore();\n  },\n  beforeDestroy() {\n    this.removeScrollLoadMore();\n  },\n  methods: {\n    closeOrderList() {\n      this.showOrderList = false;\n    },\n    initData() {\n      const {\n        sortType,\n        pipeType\n      } = this.$route.query;\n      const defaultOrderTypeMap = {\n        atom: 'RECENT_EXECUTE_NUM'\n      };\n      const orderType = sortType || defaultOrderTypeMap[pipeType] || 'DOWNLOAD_COUNT';\n      const order = this.orderList.find(order => order.id === orderType);\n      this.orderType = order;\n    },\n    resetListData() {\n      this.page = 1;\n      this.isLoading = true;\n      this.loadEnd = false;\n      this.getListData(true);\n    },\n    getListData() {\n      let isReset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.isLoadingMore = true;\n      const {\n        searchStr,\n        classifyKey,\n        classifyValue,\n        score,\n        features,\n        pipeType\n      } = this.$route.query || {};\n      const featureObj = {};\n      if (features) {\n        const featuresArray = features.split(';');\n        featuresArray.forEach(feature => {\n          feature = feature.split('-');\n          featureObj[feature[0]] = feature[1];\n        });\n      }\n      const postData = {\n        sortType: this.orderType.id,\n        score,\n        page: this.page,\n        pageSize: this.pageSize,\n        keyword: searchStr,\n        ...featureObj\n      };\n      if (classifyValue !== 'all') postData[classifyKey] = classifyValue;\n      const apiFun = {\n        atom: () => this.$store.dispatch('store/requestMarketAtom', postData),\n        template: () => this.$store.dispatch('store/requestMarketTemplate', postData),\n        image: () => this.$store.dispatch('store/requestMarketImage', postData),\n        ide: () => this.$store.dispatch('store/requestMarketIDE', postData),\n        service: () => this.$store.dispatch('store/requestMarketService', postData)\n      };\n      apiFun[pipeType]().then(res => {\n        this.cards = isReset ? res.records : this.cards.concat(res.records || []);\n        this.count = res.count || 0;\n        this.page++;\n        this.loadEnd = res.count <= this.cards.length;\n      }).catch(err => this.$bkMessage({\n        message: err.message || err,\n        theme: 'error'\n      })).finally(() => {\n        this.isLoading = false;\n        this.isLoadingMore = false;\n      });\n    },\n    chooseOrderType(order) {\n      const oldId = this.orderType.id;\n      this.orderType = order;\n      this.$parent.filterData.sortType = this.orderType.id;\n      this.showOrderList = false;\n      if (oldId !== order.id) this.resetListData();\n    },\n    scrollLoadMore(event) {\n      const target = event.target;\n      const bottomDis = target.scrollHeight - target.clientHeight - target.scrollTop;\n      if (bottomDis <= 500 && !this.loadEnd && !this.isLoadingMore) this.getListData();\n    },\n    addScrollLoadMore() {\n      const mainBody = document.querySelector('.store-main');\n      if (mainBody) mainBody.addEventListener('scroll', this.scrollLoadMore, {\n        passive: true\n      });\n    },\n    removeScrollLoadMore() {\n      const mainBody = document.querySelector('.store-main');\n      if (mainBody) mainBody.removeEventListener('scroll', this.scrollLoadMore, {\n        passive: true\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/market/list.vue?vue&type=script&lang=js&\n /* harmony default export */ const market_listvue_type_script_lang_js_ = (listvue_type_script_lang_js_); \n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(810);\n;// CONCATENATED MODULE: ./src/views/market/list.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  market_listvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f1113c32\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/views/market/list.vue\"\n/* harmony default export */ const list = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7551\n");

/***/ })

}]);
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_atomstore"] = globalThis["webpackChunkdevops_atomstore"] || []).push([[372],{

/***/ 2251:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst Vue = window.Vue;\nconst vue = new Vue();\nconst prefix = 'store/api';\nconst processPerfix = 'process/api';\nconst qualityPerfix = 'quality/api';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getMemberView(params) {\n    return vue.$ajax.get(`${prefix}/user/market/desk/store/member/view`, {\n      params\n    });\n  },\n  getMemberList(params) {\n    return vue.$ajax.get(`${prefix}/user/market/desk/store/member/list`, {\n      params\n    });\n  },\n  requestDeleteMember(params) {\n    return vue.$ajax.delete(`${prefix}/user/market/desk/store/member/delete`, {\n      params\n    });\n  },\n  requestAddMember(params) {\n    return vue.$ajax.post(`${prefix}/user/market/desk/store/member/add`, params);\n  },\n  requestChangeProject(params) {\n    return vue.$ajax.put(`${prefix}/user/market/desk/store/member/test/project/change?projectCode=${params.projectCode}&storeCode=${params.storeCode}&storeType=${params.storeType}&storeMember=${params.storeMember}`);\n  },\n  getAllEnv(_ref) {\n    let {\n      storeType,\n      storeCode,\n      scope,\n      varName\n    } = _ref;\n    return vue.$ajax.get(`${prefix}/user/store/env/var/latest/types/${storeType}/codes/${storeCode}?scope=${scope}&varName=${varName}`);\n  },\n  getEnvChangeList(_ref2) {\n    let {\n      storeType,\n      storeCode,\n      varName,\n      scope\n    } = _ref2;\n    return vue.$ajax.get(`${prefix}/user/store/env/var/change/log/types/${storeType}/codes/${storeCode}/vars/${varName}?scope=${scope}`);\n  },\n  addEnv(params) {\n    const {\n      variableId,\n      option\n    } = params;\n    delete params.option;\n    if (option === 'update') {\n      delete params.variableId;\n      return vue.$ajax.post(`${prefix}/user/store/env/var/${option}?variableId=${variableId}`, params);\n    }\n    return vue.$ajax.post(`${prefix}/user/store/env/var/${option}`, params);\n  },\n  deleteEnv(_ref3) {\n    let {\n      storeType,\n      storeCode,\n      varNames,\n      scope\n    } = _ref3;\n    return vue.$ajax.delete(`${prefix}/user/store/env/var/types/${storeType}/codes/${storeCode}?varNames=${varNames}&scope=${scope}`);\n  },\n  getCodeScore(storeType, storeCode, params) {\n    return vue.$ajax.get(`${prefix}/user/store/codecc/types/${storeType}/codes/${storeCode}/measurement`, {\n      params\n    });\n  },\n  startCodecc(storeType, storeCode, storeId) {\n    const queryStr = storeId ? `?storeId=${storeId}` : '';\n    return vue.$ajax.post(`${prefix}/user/store/codecc/types/${storeType}/codes/${storeCode}/task/start${queryStr}`);\n  },\n  requestStaticChartData(storeType, storeCode, params) {\n    return vue.$ajax.get(`${prefix}/user/store/statistic/types/${storeType}/codes/${storeCode}/trend/data`, {\n      params\n    });\n  },\n  requestSensitiveApiList(storeType, storeCode, params) {\n    return vue.$ajax.get(`${prefix}/user/sdk/${storeType}/${storeCode}/sensitiveApi/list`, {\n      params\n    });\n  },\n  requestUnApprovalApiList(storeType, storeCode, params) {\n    return vue.$ajax.get(`${prefix}/user/sdk/${storeType}/${storeCode}/sensitiveApi/unApprovalApiList`, {\n      params\n    });\n  },\n  requestApplySensitiveApi(storeType, storeCode, postData) {\n    return vue.$ajax.post(`${prefix}/user/sdk/${storeType}/${storeCode}/sensitiveApi/apply`, postData);\n  },\n  requestCancelSensitiveApi(storeType, storeCode, id) {\n    return vue.$ajax.put(`${prefix}/user/sdk/${storeType}/${storeCode}/sensitiveApi/cancel/${id}`);\n  },\n  requestStatisticPipeline(code, params) {\n    return vue.$ajax.get(`${processPerfix}/user/pipeline/atoms/${code}/rel/list`, {\n      params\n    });\n  },\n  requestSavePipelinesAsCsv(code, params) {\n    const query = [];\n    for (const key in params) {\n      const val = params[key];\n      if (val) query.push(`${key}=${val}`);\n    }\n    return fetch(`${processPerfix}/user/pipeline/atoms/${code}/rel/csv/export?${query.join('&')}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  },\n  requestAtomQuality(code) {\n    return vue.$ajax.get(`${qualityPerfix}/user/metadata/market/atom/${code}/indicator/list`);\n  },\n  requestAtomOutputList(code) {\n    return vue.$ajax.get(`${prefix}/user/market/atoms/${code}/output`);\n  },\n  requestAtomVersionDetail(code) {\n    return vue.$ajax.get(`${prefix}/user/market/atoms/${code}/showVersionInfo`);\n  },\n  requestAtomErrorCode(storeType, storeCode) {\n    return vue.$ajax.get(`${prefix}/user/store/statistic/types/${storeType}/codes/${storeCode}/errorCode`);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI1MS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvLi9zcmMvYXBpL2luZGV4LmpzPzM2NWMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVnVlID0gd2luZG93LlZ1ZVxyXG5jb25zdCB2dWUgPSBuZXcgVnVlKClcclxuY29uc3QgcHJlZml4ID0gJ3N0b3JlL2FwaSdcclxuY29uc3QgcHJvY2Vzc1BlcmZpeCA9ICdwcm9jZXNzL2FwaSdcclxuY29uc3QgcXVhbGl0eVBlcmZpeCA9ICdxdWFsaXR5L2FwaSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGdldE1lbWJlclZpZXcgKHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9tYXJrZXQvZGVzay9zdG9yZS9tZW1iZXIvdmlld2AsIHsgcGFyYW1zIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIGdldE1lbWJlckxpc3QgKHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9tYXJrZXQvZGVzay9zdG9yZS9tZW1iZXIvbGlzdGAsIHsgcGFyYW1zIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIHJlcXVlc3REZWxldGVNZW1iZXIgKHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZGVsZXRlKGAke3ByZWZpeH0vdXNlci9tYXJrZXQvZGVzay9zdG9yZS9tZW1iZXIvZGVsZXRlYCwgeyBwYXJhbXMgfSlcclxuICAgIH0sXHJcblxyXG4gICAgcmVxdWVzdEFkZE1lbWJlciAocGFyYW1zKSB7XHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5wb3N0KGAke3ByZWZpeH0vdXNlci9tYXJrZXQvZGVzay9zdG9yZS9tZW1iZXIvYWRkYCwgcGFyYW1zKVxyXG4gICAgfSxcclxuXHJcbiAgICByZXF1ZXN0Q2hhbmdlUHJvamVjdCAocGFyYW1zKSB7XHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5wdXQoYCR7cHJlZml4fS91c2VyL21hcmtldC9kZXNrL3N0b3JlL21lbWJlci90ZXN0L3Byb2plY3QvY2hhbmdlP3Byb2plY3RDb2RlPSR7cGFyYW1zLnByb2plY3RDb2RlfSZzdG9yZUNvZGU9JHtwYXJhbXMuc3RvcmVDb2RlfSZzdG9yZVR5cGU9JHtwYXJhbXMuc3RvcmVUeXBlfSZzdG9yZU1lbWJlcj0ke3BhcmFtcy5zdG9yZU1lbWJlcn1gKVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRBbGxFbnYgKHsgc3RvcmVUeXBlLCBzdG9yZUNvZGUsIHNjb3BlLCB2YXJOYW1lIH0pIHtcclxuICAgICAgICByZXR1cm4gdnVlLiRhamF4LmdldChgJHtwcmVmaXh9L3VzZXIvc3RvcmUvZW52L3Zhci9sYXRlc3QvdHlwZXMvJHtzdG9yZVR5cGV9L2NvZGVzLyR7c3RvcmVDb2RlfT9zY29wZT0ke3Njb3BlfSZ2YXJOYW1lPSR7dmFyTmFtZX1gKVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRFbnZDaGFuZ2VMaXN0ICh7IHN0b3JlVHlwZSwgc3RvcmVDb2RlLCB2YXJOYW1lLCBzY29wZSB9KSB7XHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5nZXQoYCR7cHJlZml4fS91c2VyL3N0b3JlL2Vudi92YXIvY2hhbmdlL2xvZy90eXBlcy8ke3N0b3JlVHlwZX0vY29kZXMvJHtzdG9yZUNvZGV9L3ZhcnMvJHt2YXJOYW1lfT9zY29wZT0ke3Njb3BlfWApXHJcbiAgICB9LFxyXG5cclxuICAgIGFkZEVudiAocGFyYW1zKSB7XHJcbiAgICAgICAgY29uc3QgeyB2YXJpYWJsZUlkLCBvcHRpb24gfSA9IHBhcmFtc1xyXG4gICAgICAgIGRlbGV0ZSBwYXJhbXMub3B0aW9uXHJcbiAgICAgICAgaWYgKG9wdGlvbiA9PT0gJ3VwZGF0ZScpIHtcclxuICAgICAgICAgICAgZGVsZXRlIHBhcmFtcy52YXJpYWJsZUlkXHJcbiAgICAgICAgICAgIHJldHVybiB2dWUuJGFqYXgucG9zdChgJHtwcmVmaXh9L3VzZXIvc3RvcmUvZW52L3Zhci8ke29wdGlvbn0/dmFyaWFibGVJZD0ke3ZhcmlhYmxlSWR9YCwgcGFyYW1zKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdnVlLiRhamF4LnBvc3QoYCR7cHJlZml4fS91c2VyL3N0b3JlL2Vudi92YXIvJHtvcHRpb259YCwgcGFyYW1zKVxyXG4gICAgfSxcclxuXHJcbiAgICBkZWxldGVFbnYgKHsgc3RvcmVUeXBlLCBzdG9yZUNvZGUsIHZhck5hbWVzLCBzY29wZSB9KSB7XHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5kZWxldGUoYCR7cHJlZml4fS91c2VyL3N0b3JlL2Vudi92YXIvdHlwZXMvJHtzdG9yZVR5cGV9L2NvZGVzLyR7c3RvcmVDb2RlfT92YXJOYW1lcz0ke3Zhck5hbWVzfSZzY29wZT0ke3Njb3BlfWApXHJcbiAgICB9LFxyXG5cclxuICAgIGdldENvZGVTY29yZSAoc3RvcmVUeXBlLCBzdG9yZUNvZGUsIHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9zdG9yZS9jb2RlY2MvdHlwZXMvJHtzdG9yZVR5cGV9L2NvZGVzLyR7c3RvcmVDb2RlfS9tZWFzdXJlbWVudGAsIHsgcGFyYW1zIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0Q29kZWNjIChzdG9yZVR5cGUsIHN0b3JlQ29kZSwgc3RvcmVJZCkge1xyXG4gICAgICAgIGNvbnN0IHF1ZXJ5U3RyID0gc3RvcmVJZCA/IGA/c3RvcmVJZD0ke3N0b3JlSWR9YCA6ICcnXHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5wb3N0KGAke3ByZWZpeH0vdXNlci9zdG9yZS9jb2RlY2MvdHlwZXMvJHtzdG9yZVR5cGV9L2NvZGVzLyR7c3RvcmVDb2RlfS90YXNrL3N0YXJ0JHtxdWVyeVN0cn1gKVxyXG4gICAgfSxcclxuXHJcbiAgICByZXF1ZXN0U3RhdGljQ2hhcnREYXRhIChzdG9yZVR5cGUsIHN0b3JlQ29kZSwgcGFyYW1zKSB7XHJcbiAgICAgICAgcmV0dXJuIHZ1ZS4kYWpheC5nZXQoYCR7cHJlZml4fS91c2VyL3N0b3JlL3N0YXRpc3RpYy90eXBlcy8ke3N0b3JlVHlwZX0vY29kZXMvJHtzdG9yZUNvZGV9L3RyZW5kL2RhdGFgLCB7IHBhcmFtcyB9KVxyXG4gICAgfSxcclxuXHJcbiAgICByZXF1ZXN0U2Vuc2l0aXZlQXBpTGlzdCAoc3RvcmVUeXBlLCBzdG9yZUNvZGUsIHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9zZGsvJHtzdG9yZVR5cGV9LyR7c3RvcmVDb2RlfS9zZW5zaXRpdmVBcGkvbGlzdGAsIHsgcGFyYW1zIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIHJlcXVlc3RVbkFwcHJvdmFsQXBpTGlzdCAoc3RvcmVUeXBlLCBzdG9yZUNvZGUsIHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9zZGsvJHtzdG9yZVR5cGV9LyR7c3RvcmVDb2RlfS9zZW5zaXRpdmVBcGkvdW5BcHByb3ZhbEFwaUxpc3RgLCB7IHBhcmFtcyB9KVxyXG4gICAgfSxcclxuXHJcbiAgICByZXF1ZXN0QXBwbHlTZW5zaXRpdmVBcGkgKHN0b3JlVHlwZSwgc3RvcmVDb2RlLCBwb3N0RGF0YSkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXgucG9zdChgJHtwcmVmaXh9L3VzZXIvc2RrLyR7c3RvcmVUeXBlfS8ke3N0b3JlQ29kZX0vc2Vuc2l0aXZlQXBpL2FwcGx5YCwgcG9zdERhdGEpXHJcbiAgICB9LFxyXG5cclxuICAgIHJlcXVlc3RDYW5jZWxTZW5zaXRpdmVBcGkgKHN0b3JlVHlwZSwgc3RvcmVDb2RlLCBpZCkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXgucHV0KGAke3ByZWZpeH0vdXNlci9zZGsvJHtzdG9yZVR5cGV9LyR7c3RvcmVDb2RlfS9zZW5zaXRpdmVBcGkvY2FuY2VsLyR7aWR9YClcclxuICAgIH0sXHJcblxyXG4gICAgcmVxdWVzdFN0YXRpc3RpY1BpcGVsaW5lIChjb2RlLCBwYXJhbXMpIHtcclxuICAgICAgICByZXR1cm4gdnVlLiRhamF4LmdldChgJHtwcm9jZXNzUGVyZml4fS91c2VyL3BpcGVsaW5lL2F0b21zLyR7Y29kZX0vcmVsL2xpc3RgLCB7IHBhcmFtcyB9KVxyXG4gICAgfSxcclxuXHJcbiAgICByZXF1ZXN0U2F2ZVBpcGVsaW5lc0FzQ3N2IChjb2RlLCBwYXJhbXMpIHtcclxuICAgICAgICBjb25zdCBxdWVyeSA9IFtdXHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gcGFyYW1zKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbCA9IHBhcmFtc1trZXldXHJcbiAgICAgICAgICAgIGlmICh2YWwpIHF1ZXJ5LnB1c2goYCR7a2V5fT0ke3ZhbH1gKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7cHJvY2Vzc1BlcmZpeH0vdXNlci9waXBlbGluZS9hdG9tcy8ke2NvZGV9L3JlbC9jc3YvZXhwb3J0PyR7cXVlcnkuam9pbignJicpfWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIHJlcXVlc3RBdG9tUXVhbGl0eSAoY29kZSkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3F1YWxpdHlQZXJmaXh9L3VzZXIvbWV0YWRhdGEvbWFya2V0L2F0b20vJHtjb2RlfS9pbmRpY2F0b3IvbGlzdGApXHJcbiAgICB9LFxyXG5cclxuICAgIHJlcXVlc3RBdG9tT3V0cHV0TGlzdCAoY29kZSkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9tYXJrZXQvYXRvbXMvJHtjb2RlfS9vdXRwdXRgKVxyXG4gICAgfSxcclxuICAgIHJlcXVlc3RBdG9tVmVyc2lvbkRldGFpbCAoY29kZSkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9tYXJrZXQvYXRvbXMvJHtjb2RlfS9zaG93VmVyc2lvbkluZm9gKVxyXG4gICAgfSxcclxuICAgIHJlcXVlc3RBdG9tRXJyb3JDb2RlIChzdG9yZVR5cGUsIHN0b3JlQ29kZSkge1xyXG4gICAgICAgIHJldHVybiB2dWUuJGFqYXguZ2V0KGAke3ByZWZpeH0vdXNlci9zdG9yZS9zdGF0aXN0aWMvdHlwZXMvJHtzdG9yZVR5cGV9L2NvZGVzLyR7c3RvcmVDb2RlfS9lcnJvckNvZGVgKVxyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2251\n");

/***/ }),

/***/ 6834:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ toolbars)\n/* harmony export */ });\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nconst toolbars = {\n  bold: true,\n  // 粗体\n  italic: true,\n  // 斜体\n  header: true,\n  // 标题\n  underline: true,\n  // 下划线\n  strikethrough: true,\n  // 中划线\n  mark: true,\n  // 标记\n  superscript: true,\n  // 上角标\n  subscript: true,\n  // 下角标\n  quote: true,\n  // 引用\n  ol: true,\n  // 有序列表\n  ul: true,\n  // 无序列表\n  // link: true, // 链接\n  imagelink: true,\n  // 图片链接\n  code: true,\n  // code\n  table: true,\n  // 表格\n  fullscreen: true,\n  // 全屏编辑\n  readmodel: true,\n  // 沉浸式阅读\n  htmlcode: true,\n  // 展示html源码\n  help: true,\n  // 帮助\n  /* 1.3.5 */\n  undo: true,\n  // 上一步\n  redo: true,\n  // 下一步\n  trash: true,\n  // 清空\n  // save: true, // 保存（触发events中的save事件）\n  /* 1.4.2 */\n  navigation: true,\n  // 导航目录\n  /* 2.1.8 */\n  alignleft: true,\n  // 左对齐\n  aligncenter: true,\n  // 居中\n  alignright: true,\n  // 右对齐\n  /* 2.2.1 */\n  subfield: true,\n  // 单双栏模式\n  preview: true // 预览\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjgzNC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL3V0aWxzL2VkaXRvci1vcHRpb25zLmpzP2IzMTgiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogVGVuY2VudCBpcyBwbGVhc2VkIHRvIHN1cHBvcnQgdGhlIG9wZW4gc291cmNlIGNvbW11bml0eSBieSBtYWtpbmcgQkstQ0kg6JOd6bK45oyB57ut6ZuG5oiQ5bmz5Y+wIGF2YWlsYWJsZS5cclxuICpcclxuICogQ29weXJpZ2h0IChDKSAyMDE5IFRITCBBMjkgTGltaXRlZCwgYSBUZW5jZW50IGNvbXBhbnkuICBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBCSy1DSSDok53psrjmjIHnu63pm4bmiJDlubPlj7AgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxyXG4gKlxyXG4gKiBBIGNvcHkgb2YgdGhlIE1JVCBMaWNlbnNlIGlzIGluY2x1ZGVkIGluIHRoaXMgZmlsZS5cclxuICpcclxuICpcclxuICogVGVybXMgb2YgdGhlIE1JVCBMaWNlbnNlOlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuICpcclxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXHJcbiAqXHJcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjb25zdCB0b29sYmFycyA9IHtcclxuICAgIGJvbGQ6IHRydWUsIC8vIOeyl+S9k1xyXG4gICAgaXRhbGljOiB0cnVlLCAvLyDmlpzkvZNcclxuICAgIGhlYWRlcjogdHJ1ZSwgLy8g5qCH6aKYXHJcbiAgICB1bmRlcmxpbmU6IHRydWUsIC8vIOS4i+WIkue6v1xyXG4gICAgc3RyaWtldGhyb3VnaDogdHJ1ZSwgLy8g5Lit5YiS57q/XHJcbiAgICBtYXJrOiB0cnVlLCAvLyDmoIforrBcclxuICAgIHN1cGVyc2NyaXB0OiB0cnVlLCAvLyDkuIrop5LmoIdcclxuICAgIHN1YnNjcmlwdDogdHJ1ZSwgLy8g5LiL6KeS5qCHXHJcbiAgICBxdW90ZTogdHJ1ZSwgLy8g5byV55SoXHJcbiAgICBvbDogdHJ1ZSwgLy8g5pyJ5bqP5YiX6KGoXHJcbiAgICB1bDogdHJ1ZSwgLy8g5peg5bqP5YiX6KGoXHJcbiAgICAvLyBsaW5rOiB0cnVlLCAvLyDpk77mjqVcclxuICAgIGltYWdlbGluazogdHJ1ZSwgLy8g5Zu+54mH6ZO+5o6lXHJcbiAgICBjb2RlOiB0cnVlLCAvLyBjb2RlXHJcbiAgICB0YWJsZTogdHJ1ZSwgLy8g6KGo5qC8XHJcbiAgICBmdWxsc2NyZWVuOiB0cnVlLCAvLyDlhajlsY/nvJbovpFcclxuICAgIHJlYWRtb2RlbDogdHJ1ZSwgLy8g5rKJ5rW45byP6ZiF6K+7XHJcbiAgICBodG1sY29kZTogdHJ1ZSwgLy8g5bGV56S6aHRtbOa6kOeggVxyXG4gICAgaGVscDogdHJ1ZSwgLy8g5biu5YqpXHJcbiAgICAvKiAxLjMuNSAqL1xyXG4gICAgdW5kbzogdHJ1ZSwgLy8g5LiK5LiA5q2lXHJcbiAgICByZWRvOiB0cnVlLCAvLyDkuIvkuIDmraVcclxuICAgIHRyYXNoOiB0cnVlLCAvLyDmuIXnqbpcclxuICAgIC8vIHNhdmU6IHRydWUsIC8vIOS/neWtmO+8iOinpuWPkWV2ZW50c+S4reeahHNhdmXkuovku7bvvIlcclxuICAgIC8qIDEuNC4yICovXHJcbiAgICBuYXZpZ2F0aW9uOiB0cnVlLCAvLyDlr7zoiKrnm67lvZVcclxuICAgIC8qIDIuMS44ICovXHJcbiAgICBhbGlnbmxlZnQ6IHRydWUsIC8vIOW3puWvuem9kFxyXG4gICAgYWxpZ25jZW50ZXI6IHRydWUsIC8vIOWxheS4rVxyXG4gICAgYWxpZ25yaWdodDogdHJ1ZSwgLy8g5Y+z5a+56b2QXHJcbiAgICAvKiAyLjIuMSAqL1xyXG4gICAgc3ViZmllbGQ6IHRydWUsIC8vIOWNleWPjOagj+aooeW8j1xyXG4gICAgcHJldmlldzogdHJ1ZSAvLyDpooTop4hcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6834\n");

/***/ }),

/***/ 990:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wellKnownSymbol = __webpack_require__(7166);\nvar create = __webpack_require__(3981);\nvar defineProperty = (__webpack_require__(7614).f);\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  defineProperty(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMuanM/Nzc5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxudmFyIFVOU0NPUEFCTEVTID0gd2VsbEtub3duU3ltYm9sKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmlmIChBcnJheVByb3RvdHlwZVtVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSB7XG4gIGRlZmluZVByb3BlcnR5KEFycmF5UHJvdG90eXBlLCBVTlNDT1BBQkxFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogY3JlYXRlKG51bGwpXG4gIH0pO1xufVxuXG4vLyBhZGQgYSBrZXkgdG8gQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgQXJyYXlQcm90b3R5cGVbVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///990\n");

/***/ }),

/***/ 7406:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar $ = __webpack_require__(5689);\nvar $includes = (__webpack_require__(5254).includes);\nvar fails = __webpack_require__(8462);\nvar addToUnscopables = __webpack_require__(990);\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQwNi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanM/MjJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXMnKS5pbmNsdWRlcztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzJyk7XG5cbi8vIEZGOTkrIGJ1Z1xudmFyIEJST0tFTl9PTl9TUEFSU0UgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhQXJyYXkoMSkuaW5jbHVkZXMoKTtcbn0pO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBCUk9LRU5fT05fU1BBUlNFIH0sIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmFkZFRvVW5zY29wYWJsZXMoJ2luY2x1ZGVzJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7406\n");

/***/ }),

/***/ 2214:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937599191\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9jZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1OTkxOTFcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2214\n");

/***/ }),

/***/ 9040:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937604729\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTA0MC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL3NlbGVjdExvZ28vaW5kZXgudnVlP2NmZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzYwNDcyOVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9040\n");

/***/ }),

/***/ 4955:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937596264\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDk1NS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL3ZpZXdzL2VkaXRfYXRvbS52dWU/MGE0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzEzOTM3NTk2MjY0XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkU6L2JrLWNpL3NyYy9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4955\n");

/***/ }),

/***/ 3298:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ bread_crumbs)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"header\", {\n    staticClass: \"store-nav\"\n  }, [_c(\"section\", {\n    staticClass: \"nav-main\"\n  }, [_c(\"icon\", {\n    staticClass: \"title-icon\",\n    attrs: {\n      name: \"color-logo-store\",\n      size: \"22\"\n    }\n  }), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"back-home quick-route\",\n    on: {\n      click: function ($event) {\n        return _vm.changePage({\n          name: \"atomHome\",\n          query: {\n            pipeType: _vm.type\n          }\n        });\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")]), _vm._v(\" \"), _vm._l(_vm.breadCrumbs, function (breadCrumb) {\n    return [_c(\"i\", {\n      key: breadCrumb.name,\n      staticClass: \"right-arrow banner-arrow\"\n    }), _vm._v(\" \"), breadCrumb.to ? _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des quick-route\",\n      on: {\n        click: function ($event) {\n          return _vm.changePage(breadCrumb.to);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")]) : _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des\"\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")])];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=script&lang=js\n/* harmony default export */ const bread_crumbsvue_type_script_lang_js = ({\n  props: {\n    breadCrumbs: Array,\n    type: String\n  },\n  methods: {\n    changePage(to) {\n      this.$router.push(to);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=script&lang=js\n /* harmony default export */ const components_bread_crumbsvue_type_script_lang_js = (bread_crumbsvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\nvar bread_crumbsvue_type_style_index_0_id_5b47cb8d_prod_lang_scss_scoped_true = __webpack_require__(2214);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_bread_crumbsvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b47cb8d\",\n  null\n  \n)\n\n/* harmony default export */ const bread_crumbs = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3298\n");

/***/ }),

/***/ 1498:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ selectLogo)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/selectLogo/index.vue?vue&type=template&id=37f819b2&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"section\", [_c(\"section\", {\n    ref: \"selectLogo\",\n    staticClass: \"select-logo\",\n    style: `top: ${_vm.top}px; right: ${_vm.right}px`\n  }, [_vm.form.logoUrl || _vm.form.iconData ? _c(\"section\", {\n    staticClass: \"has-upload\",\n    on: {\n      click: _vm.uploadLogo\n    }\n  }, [_c(\"img\", {\n    attrs: {\n      src: _vm.form.logoUrl || _vm.form.iconData,\n      title: _vm.$t(\"store.选择logo\")\n    }\n  }), _vm._v(\" \"), _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"store.editLogo\")))])]) : _c(\"section\", {\n    class: [{\n      \"logo-error\": _vm.isErr\n    }, \"un-upload\"],\n    on: {\n      click: _vm.uploadLogo\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-plus\"\n  }), _vm._v(\" \"), _c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.上传LOGO\")) + \" \")])]), _vm._v(\" \"), _vm.isErr ? _c(\"p\", {\n    staticClass: \"is-err\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.Logo必填\")) + \" \")]) : _vm._e()]), _vm._v(\" \"), _c(\"bk-dialog\", {\n    staticClass: \"logo-dialog\",\n    attrs: {\n      \"header-position\": \"left\",\n      width: \"615\",\n      title: _vm.$t(\"store.修改Logo\")\n    },\n    on: {\n      cancel: _vm.toCloseDialog\n    },\n    model: {\n      value: _vm.showDialog,\n      callback: function ($$v) {\n        _vm.showDialog = $$v;\n      },\n      expression: \"showDialog\"\n    }\n  }, [_c(\"main\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading\n      },\n      expression: \"{ isLoading: loading }\"\n    }],\n    staticClass: \"logo-main\"\n  }, [_c(\"figure\", {\n    staticClass: \"logo-pic\"\n  }, [_vm.selectedUrl ? _c(\"img\", {\n    staticClass: \"pic-img\",\n    attrs: {\n      src: _vm.selectedUrl\n    }\n  }) : _c(\"icon\", {\n    staticClass: \"pic-img\",\n    staticStyle: {\n      fill: \"#dcdee5\"\n    },\n    attrs: {\n      name: \"placeholder\",\n      size: \"88\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"section\", {\n    staticClass: \"logo-choose\"\n  }, [_c(\"h3\", {\n    staticClass: \"choose-upload\"\n  }, [_c(\"input\", {\n    staticClass: \"input-file\",\n    attrs: {\n      type: \"file\",\n      name: \"file\",\n      id: \"inputfile\",\n      accept: \"image/png, image/jpeg\"\n    },\n    on: {\n      change: _vm.fileChange\n    }\n  }), _vm._v(\" \"), _c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\"\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.自定义\")) + \" \")]), _vm._v(\" \"), _c(\"p\", {\n    directives: [{\n      name: \"bk-tooltips\",\n      rawName: \"v-bk-tooltips\",\n      value: _vm.$t(\"store.只允许上传png、jpg，尺寸为大于200*200的正方形，大小不超过2M\"),\n      expression: \"$t('store.只允许上传png、jpg，尺寸为大于200*200的正方形，大小不超过2M')\"\n    }],\n    staticClass: \"upload-info\"\n  }, [_vm._v(\"\\n                        \" + _vm._s(_vm.$t(\"store.只允许上传png、jpg，尺寸为大于200*200的正方形，大小不超过2M\")) + \"\\n                    \")])], 1), _vm._v(\" \"), _c(\"h3\", {\n    staticClass: \"sys-title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.系统自带\")) + \" \")]), _vm._v(\" \"), _c(\"hgroup\", {\n    staticClass: \"choose-sys\"\n  }, _vm._l(_vm.imgs, function (img) {\n    return _c(\"h3\", {\n      key: img.id,\n      class: [{\n        \"select-icon\": _vm.selectedUrl === img.logoUrl\n      }, \"sys-icon\"],\n      on: {\n        click: function ($event) {\n          return _vm.chooseSysImg(img.logoUrl);\n        }\n      }\n    }, [_c(\"img\", {\n      staticClass: \"icon\",\n      attrs: {\n        src: img.logoUrl\n      }\n    })]);\n  }), 0)])]), _vm._v(\" \"), _c(\"template\", {\n    slot: \"footer\"\n  }, [_c(\"div\", {\n    staticClass: \"bk-dialog-outer\"\n  }, [_c(\"bk-button\", {\n    staticClass: \"bk-dialog-btn bk-dialog-btn-confirm bk-btn-primary\",\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: _vm.toConfirmLogo\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.确定\")) + \" \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    staticClass: \"bk-dialog-btn bk-dialog-btn-cancel\",\n    attrs: {\n      type: \"button\"\n    },\n    on: {\n      click: _vm.toCloseDialog\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.取消\")) + \" \")])], 1)])], 2)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/common/selectLogo/index.vue?vue&type=template&id=37f819b2&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/selectLogo/index.vue?vue&type=script&lang=js\n\n/* harmony default export */ const selectLogovue_type_script_lang_js = ({\n  props: {\n    form: Object,\n    type: String,\n    isErr: Boolean,\n    label: String,\n    right: {\n      type: Number,\n      default: 0\n    },\n    top: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      imgs: [],\n      showDialog: false,\n      selectedUrl: '',\n      iconData: '',\n      loading: false\n    };\n  },\n  created() {\n    this.getImgs();\n  },\n  methods: {\n    scrollIntoView() {\n      this.$refs.selectLogo.scrollIntoView();\n    },\n    getImgs() {\n      this.loading = true;\n      this.$store.dispatch('store/getLogoUrl', {\n        type: this.type\n      }).then(res => {\n        this.imgs = res || [];\n      }).catch(err => this.$bkMessage({\n        message: err.message || err,\n        theme: 'error'\n      })).finally(() => {\n        this.loading = false;\n      });\n    },\n    chooseSysImg(url) {\n      this.selectedUrl = url;\n      this.iconData = '';\n      this.resetUploadInput();\n    },\n    fileChange(e) {\n      const file = e.target.files[0];\n      if (file) {\n        let message = '';\n        if (!['image/jpeg', 'image/png'].includes(file.type)) message = this.$t('store.请上传png、jpg格式的图片');\n        if (file.size > 2 * 1024 * 1024) message = this.$t('store.请上传大小不超过2M的图片');\n        if (message) {\n          this.$bkMessage({\n            theme: 'error',\n            message\n          });\n        } else {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = evts => {\n            const img = new Image();\n            img.src = evts.target.result;\n            img.onload = evt => {\n              if (img.width === img.height && img.height >= 200) {\n                this.uploadHandle(file);\n              } else {\n                this.$bkMessage({\n                  theme: 'error',\n                  message: this.$t('store.请上传宽高大于等于200的正方形图片')\n                });\n              }\n            };\n          };\n        }\n      }\n    },\n    /**\r\n     * 清空input file的值\r\n     */\n    resetUploadInput() {\n      this.$nextTick(() => {\n        const inputElement = document.getElementById('inputfile');\n        inputElement.value = '';\n      });\n    },\n    async uploadHandle(file) {\n      const formData = new FormData();\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      let message, theme;\n      formData.append('logo', file);\n      try {\n        const res = await this.$store.dispatch('store/uploadLogo', {\n          formData,\n          config\n        });\n        this.selectedUrl = res.logoUrl;\n        this.iconData = res.iconData;\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    uploadLogo() {\n      this.showDialog = true;\n      this.selectedUrl = this.form.logoUrl;\n      this.iconData = this.form.iconData;\n    },\n    async toConfirmLogo() {\n      if (this.selectedUrl || this.iconData) {\n        this.form.logoUrl = this.selectedUrl;\n        this.form.iconData = this.iconData;\n        this.showDialog = false;\n        this.isErr = false;\n      } else if (!this.selectedUrl) {\n        this.$bkMessage({\n          message: this.$t('store.请选择要上传的图片'),\n          theme: 'error'\n        });\n      }\n      this.resetUploadInput();\n    },\n    toCloseDialog() {\n      this.showDialog = false;\n      this.resetUploadInput();\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/common/selectLogo/index.vue?vue&type=script&lang=js\n /* harmony default export */ const common_selectLogovue_type_script_lang_js = (selectLogovue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/common/selectLogo/index.vue?vue&type=style&index=0&id=37f819b2&prod&lang=scss&scoped=true\nvar selectLogovue_type_style_index_0_id_37f819b2_prod_lang_scss_scoped_true = __webpack_require__(9040);\n;// CONCATENATED MODULE: ./src/components/common/selectLogo/index.vue?vue&type=style&index=0&id=37f819b2&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/common/selectLogo/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  common_selectLogovue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"37f819b2\",\n  null\n  \n)\n\n/* harmony default export */ const selectLogo = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1498\n");

/***/ }),

/***/ 7691:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ edit_atom)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/edit_atom.vue?vue&type=template&id=7c36be27&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{ isLoading: loading.isLoading, title: loading.title }\"\n    }],\n    staticClass: \"edit-atom-wrapper\"\n  }, [_c(\"bread-crumbs\", {\n    attrs: {\n      \"bread-crumbs\": _vm.navList,\n      type: \"atom\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"g-title-work\",\n    attrs: {\n      target: \"_blank\",\n      href: _vm.docsLink\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.插件指引\")) + \" \")])]), _vm._v(\" \"), _vm.showContent ? _c(\"div\", {\n    staticClass: \"edit-atom-content\"\n  }, [_c(\"div\", {\n    class: {\n      \"bk-form\": true,\n      \"edit-atom-form\": true,\n      \"g-form-radio\": true,\n      \"edit-atom-form-en\": !_vm.isZH\n    }\n  }, [_c(\"div\", {\n    staticClass: \"bk-form-item name-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.名称\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips\"\n  }, [_c(\"div\", {\n    staticStyle: {\n      width: \"40%\"\n    }\n  }, [_c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.atomForm.name,\n      expression: \"atomForm.name\"\n    }, {\n      name: \"validate\",\n      rawName: \"v-validate\",\n      value: {\n        required: true,\n        max: 40\n      },\n      expression: \"{\\n                                required: true,\\n                                max: 40\\n                            }\"\n    }],\n    ref: \"atomName\",\n    staticClass: \"bk-form-input atom-name-input\",\n    class: {\n      \"is-danger\": _vm.errors.has(\"atomName\")\n    },\n    attrs: {\n      type: \"text\",\n      placeholder: _vm.$t(\"store.请输入中英文名称\"),\n      name: \"atomName\"\n    },\n    domProps: {\n      value: _vm.atomForm.name\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.atomForm, \"name\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"p\", {\n    class: _vm.errors.has(\"atomName\") ? \"error-tips\" : \"normal-tips\"\n  }, [_vm._v(_vm._s(_vm.errors.first(\"atomName\")))])]), _vm._v(\" \"), _c(\"bk-popover\", {\n    attrs: {\n      placement: \"right\"\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-info-circle\"\n  }), _vm._v(\" \"), _c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.插件名称不超过40个字符\")) + \" \")])])], 2)], 1)]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"categoryError\",\n    staticClass: \"bk-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label category-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.范畴\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content\"\n  }, [_c(\"bk-radio-group\", {\n    staticClass: \"radio-group\",\n    model: {\n      value: _vm.atomForm.category,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"category\", $$v);\n      },\n      expression: \"atomForm.category\"\n    }\n  }, _vm._l(_vm.categoryList, function (entry, key) {\n    return _c(\"bk-radio\", {\n      key: key,\n      attrs: {\n        value: entry.value\n      },\n      nativeOn: {\n        click: function ($event) {\n          _vm.formErrors.categoryError = false;\n        }\n      }\n    }, [_vm._v(_vm._s(entry.label))]);\n  }), 1), _vm._v(\" \"), _vm.formErrors.categoryError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.字段有误，请重新选择\")) + \" \")]) : _vm._e()], 1)]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"sortError\",\n    staticClass: \"bk-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.分类\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content atom-classify-content\"\n  }, [_c(\"bk-select\", {\n    staticStyle: {\n      width: \"40%\"\n    },\n    attrs: {\n      searchable: \"\",\n      clearable: false\n    },\n    on: {\n      selected: _vm.changeClassify\n    },\n    model: {\n      value: _vm.atomForm.classifyCode,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"classifyCode\", $$v);\n      },\n      expression: \"atomForm.classifyCode\"\n    }\n  }, _vm._l(_vm.sortList, function (option, index) {\n    return _c(\"bk-option\", {\n      key: index,\n      attrs: {\n        id: option.classifyCode,\n        name: option.classifyName\n      }\n    });\n  }), 1), _vm._v(\" \"), _vm.formErrors.sortError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.分类不能为空\")) + \" \")]) : _vm._e()], 1)]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"jobError\",\n    staticClass: \"bk-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label env-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.适用Job类型\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content\"\n  }, [_c(\"bk-radio-group\", {\n    staticClass: \"radio-group\",\n    model: {\n      value: _vm.atomForm.jobType,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"jobType\", $$v);\n      },\n      expression: \"atomForm.jobType\"\n    }\n  }, _vm._l(_vm.jobTypeList, function (entry, key) {\n    return _c(\"span\", {\n      key: key\n    }, [_c(\"bk-radio\", {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: entry.isShow,\n        expression: \"entry.isShow\"\n      }],\n      attrs: {\n        value: entry.value\n      },\n      nativeOn: {\n        click: function ($event) {\n          return _vm.changeJobType.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(_vm._s(entry.label))])], 1);\n  }), 0), _vm._v(\" \"), _vm.formErrors.jobError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.字段有误，请重新选择\")) + \" \")]) : _vm._e()], 1)]), _vm._v(\" \"), _vm.atomForm.jobType === \"AGENT\" ? _c(\"bk-checkbox-group\", {\n    ref: \"envError\",\n    staticClass: \"bk-form-content atom-os\",\n    model: {\n      value: _vm.atomForm.os,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"os\", $$v);\n      },\n      expression: \"atomForm.os\"\n    }\n  }, _vm._l(_vm.envList, function (entry, key) {\n    return _c(\"bk-checkbox\", {\n      key: key,\n      attrs: {\n        value: entry.value\n      },\n      nativeOn: {\n        click: function ($event) {\n          return _vm.changeOs(entry.value);\n        }\n      }\n    }, [_c(\"p\", {\n      staticClass: \"os-checkbox-label\"\n    }, [_c(\"i\", {\n      class: {\n        \"devops-icon\": true,\n        [`icon-${entry.icon}`]: true\n      }\n    }), _vm._v(\" \"), _c(\"span\", {\n      staticClass: \"bk-checkbox-text\"\n    }, [_vm._v(_vm._s(entry.label))])])]);\n  }), 1) : _vm._e(), _vm._v(\" \"), _vm.formErrors.envError ? _c(\"div\", {\n    staticClass: \"error-tips env-error\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.字段有误，请重新选择\")) + \" \")]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.功能标签\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content template-item-content\"\n  }, [_c(\"bk-select\", {\n    attrs: {\n      placeholder: _vm.$t(\"store.请选择功能标签\"),\n      \"show-select-all\": \"\",\n      searchable: \"\",\n      multiple: \"\"\n    },\n    on: {\n      selected: _vm.changeClassify\n    },\n    model: {\n      value: _vm.atomForm.labelIdList,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"labelIdList\", $$v);\n      },\n      expression: \"atomForm.labelIdList\"\n    }\n  }, _vm._l(_vm.labelList, function (option, index) {\n    return _c(\"bk-option\", {\n      key: index,\n      attrs: {\n        id: option.id,\n        name: option.labelName\n      }\n    });\n  }), 1)], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item introduction-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.简介\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips\"\n  }, [_c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.atomForm.summary,\n      expression: \"atomForm.summary\"\n    }, {\n      name: \"validate\",\n      rawName: \"v-validate\",\n      value: {\n        required: true,\n        max: 256\n      },\n      expression: \"{\\n                            required: true,\\n                            max: 256\\n                        }\"\n    }],\n    staticClass: \"bk-form-input atom-introduction-input\",\n    class: {\n      \"is-danger\": _vm.errors.has(\"introduction\")\n    },\n    attrs: {\n      type: \"text\",\n      placeholder: _vm.$t(\"store.插件一句话简介，不超过256个字符\"),\n      name: \"introduction\",\n      maxlength: \"256\"\n    },\n    domProps: {\n      value: _vm.atomForm.summary\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.atomForm, \"summary\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"bk-popover\", {\n    attrs: {\n      placement: \"left\"\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-info-circle\"\n  }), _vm._v(\" \"), _c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.插件一句话简介，不超过256个字符。\")) + \" \")]), _vm._v(\" \"), _c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.展示在插件市场以及流水线选择插件页面。\")) + \" \")])])], 2)], 1), _vm._v(\" \"), _c(\"p\", {\n    class: _vm.errors.has(\"introduction\") ? \"error-tips\" : \"normal-tips\"\n  }, [_vm._v(_vm._s(_vm.errors.first(\"introduction\")))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item remark-form-item\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.详细描述\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips\"\n  }, [_c(\"mavon-editor\", {\n    ref: \"mdHook\",\n    staticClass: \"atom-remark-input\",\n    attrs: {\n      placeholder: _vm.descTemplate,\n      toolbars: _vm.toolbarOptions,\n      \"external-link\": false,\n      \"box-shadow\": false,\n      \"preview-background\": \"#fff\",\n      language: _vm.mavenLang\n    },\n    on: {\n      imgAdd: function ($event) {\n        return _vm.addImage(\"mdHook\", ...arguments);\n      },\n      imgDel: _vm.delImage,\n      change: _vm.changeData\n    },\n    model: {\n      value: _vm.atomForm.description,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"description\", $$v);\n      },\n      expression: \"atomForm.description\"\n    }\n  }), _vm._v(\" \"), _c(\"bk-popover\", {\n    attrs: {\n      placement: \"left\"\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-info-circle\"\n  }), _vm._v(\" \"), _c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.atomRemark\")) + \" \")]), _vm._v(\" \"), _c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.展示在插件市场查看插件详情界面，帮助用户快速了解插件和解决遇到的问题。\")) + \" \")])])], 2)], 1)]), _vm._v(\" \"), _c(\"section\", [_c(\"div\", {\n    staticClass: \"version-msg\"\n  }, [_c(\"p\", {\n    staticClass: \"form-title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.配置\")) + \" \")]), _vm._v(\" \"), _c(\"hr\", {\n    staticClass: \"cut-line\"\n  })]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"categoryError\",\n    staticClass: \"bk-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label category-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.自定义前端UI\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content\"\n  }, [_c(\"bk-radio-group\", {\n    staticClass: \"radio-group\",\n    model: {\n      value: _vm.atomForm.frontendType,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"frontendType\", $$v);\n      },\n      expression: \"atomForm.frontendType\"\n    }\n  }, _vm._l(_vm.frontendTypeList, function (entry, key) {\n    return _c(\"bk-radio\", {\n      key: key,\n      attrs: {\n        value: entry.value,\n        title: entry.title\n      }\n    }, [_vm._v(_vm._s(entry.label))]);\n  }), 1)], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"version-msg\"\n  }, [_c(\"p\", {\n    staticClass: \"form-title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本信息\")) + \" \")]), _vm._v(\" \"), _c(\"hr\", {\n    staticClass: \"cut-line\"\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item name-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布者\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content\"\n  }, [_c(\"bk-select\", {\n    model: {\n      value: _vm.atomForm.publisher,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"publisher\", $$v);\n      },\n      expression: \"atomForm.publisher\"\n    }\n  }, _vm._l(_vm.publishersList, function (publisher) {\n    return _c(\"bk-option\", {\n      key: publisher.id,\n      attrs: {\n        id: publisher.publisherCode,\n        name: publisher.publisherName\n      }\n    });\n  }), 1)], 1)]), _vm._v(\" \"), _vm.atomForm.releaseType !== \"CANCEL_RE_RELEASE\" ? _c(\"div\", {\n    ref: \"releaseTypeError\",\n    staticClass: \"bk-form-item publish-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label publish-type-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布类型\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips radio-flex\"\n  }, [_vm.atomForm.releaseType !== \"NEW\" ? _c(\"section\", {\n    staticStyle: {\n      \"min-width\": \"100%\"\n    }\n  }, [_c(\"bk-radio-group\", {\n    staticClass: \"radio-group\",\n    model: {\n      value: _vm.atomForm.releaseType,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"releaseType\", $$v);\n      },\n      expression: \"atomForm.releaseType\"\n    }\n  }, _vm._l(_vm.publishTypeList, function (entry, key) {\n    return _c(\"bk-radio\", {\n      key: key,\n      attrs: {\n        value: entry.value\n      },\n      nativeOn: {\n        click: function ($event) {\n          _vm.formErrors.releaseTypeError = false;\n        }\n      }\n    }, [_c(\"bk-popover\", {\n      staticStyle: {\n        \"margin-top\": \"0\",\n        \"margin-left\": \"0\"\n      },\n      attrs: {\n        placement: \"top\",\n        delay: 800\n      }\n    }, [_c(\"span\", {\n      staticClass: \"bk-radio-text\"\n    }, [_vm._v(_vm._s(entry.label))]), _vm._v(\" \"), _c(\"template\", {\n      slot: \"content\"\n    }, [_c(\"p\", [_vm._v(_vm._s(entry.desc))])])], 2)], 1);\n  }), 1), _vm._v(\" \"), _vm.formErrors.releaseTypeError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布类型不能为空\")) + \" \")]) : _vm._e()], 1) : _c(\"section\", {\n    staticStyle: {\n      \"min-width\": \"100%\"\n    }\n  }, [_c(\"bk-radio-group\", {\n    staticClass: \"radio-group\",\n    model: {\n      value: _vm.atomForm.releaseType,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"releaseType\", $$v);\n      },\n      expression: \"atomForm.releaseType\"\n    }\n  }, _vm._l(_vm.publishShelf, function (entry, key) {\n    return _c(\"bk-radio\", {\n      key: key,\n      attrs: {\n        value: entry.value\n      },\n      nativeOn: {\n        click: function ($event) {\n          _vm.formErrors.releaseTypeError = false;\n        }\n      }\n    }, [_vm._v(_vm._s(entry.label))]);\n  }), 1), _vm._v(\" \"), _vm.formErrors.releaseTypeError ? _c(\"div\", {\n    staticClass: \"error-tips\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布类型不能为空\")) + \" \")]) : _vm._e()], 1)])]) : _vm._e(), _vm._v(\" \"), _vm.atomForm.releaseType === \"HIS_VERSION_UPGRADE\" ? _c(\"bk-alert\", {\n    staticClass: \"history-version-tip\",\n    attrs: {\n      type: \"warning\",\n      title: _vm.$t(\"store.hisUpgradeTips\")\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item version-num-form-item is-required\",\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本号\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips\"\n  }, [_vm.atomForm.releaseType === \"HIS_VERSION_UPGRADE\" ? _c(\"bk-input\", {\n    model: {\n      value: _vm.curVersion,\n      callback: function ($$v) {\n        _vm.curVersion = $$v;\n      },\n      expression: \"curVersion\"\n    }\n  }) : [_c(\"p\", {\n    staticClass: \"version-num-content\",\n    staticStyle: {\n      \"min-width\": \"100%\"\n    }\n  }, [_c(\"span\", {\n    staticClass: \"version-prompt\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.semverType\", [_vm.curVersion])) + \" \")]), _vm._v(\" \"), _vm.atomForm.releaseType === \"CANCEL_RE_RELEASE\" ? _c(\"span\", {\n    staticClass: \"version-modify\",\n    on: {\n      click: function ($event) {\n        _vm.atomForm.releaseType = \"COMPATIBILITY_FIX\";\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.修改\")) + \" \")]) : _vm._e()]), _vm._v(\" \"), _c(\"bk-popover\", {\n    attrs: {\n      placement: \"left\"\n    }\n  }, [_c(\"i\", {\n    staticClass: \"devops-icon icon-info-circle\"\n  }), _vm._v(\" \"), _c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"p\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.根据发布类型自动生成\")) + \" \")])])], 2)]], 2)]), _vm._v(\" \"), _vm.atomForm.releaseType === \"HIS_VERSION_UPGRADE\" ? _c(\"div\", {\n    staticClass: \"bk-form-item version-num-form-item is-required\",\n    staticStyle: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.分支\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content is-tooltips\"\n  }, [_c(\"bk-input\", {\n    model: {\n      value: _vm.atomForm.branch,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"branch\", $$v);\n      },\n      expression: \"atomForm.branch\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-item versionlog-form-item is-required\"\n  }, [_c(\"label\", {\n    staticClass: \"bk-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本日志\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"bk-form-content atom-item-content\"\n  }, [_c(\"mavon-editor\", {\n    directives: [{\n      name: \"validate\",\n      rawName: \"v-validate\",\n      value: {\n        required: true\n      },\n      expression: \"{ required: true }\"\n    }],\n    ref: \"versionMd\",\n    class: {\n      \"is-danger\": _vm.errors.has(\"versionContent\"),\n      \"atom-remark-input\": true\n    },\n    attrs: {\n      toolbars: _vm.toolbarOptions,\n      \"external-link\": false,\n      \"box-shadow\": false,\n      \"preview-background\": \"#fff\",\n      name: \"versionContent\",\n      language: _vm.mavenLang\n    },\n    on: {\n      imgAdd: function ($event) {\n        return _vm.addImage(\"versionMd\", ...arguments);\n      },\n      imgDel: _vm.delImage,\n      change: _vm.changeData\n    },\n    model: {\n      value: _vm.atomForm.versionContent,\n      callback: function ($$v) {\n        _vm.$set(_vm.atomForm, \"versionContent\", $$v);\n      },\n      expression: \"atomForm.versionContent\"\n    }\n  }), _vm._v(\" \"), _c(\"p\", {\n    class: _vm.errors.has(\"versionContent\") ? \"error-tips\" : \"normal-tips\"\n  }, [_vm._v(_vm._s(_vm.errors.first(\"versionContent\")))])], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-footer\"\n  }, [_c(\"bk-button\", {\n    attrs: {\n      theme: \"primary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.submit();\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.提交\")) + \" \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    on: {\n      click: function ($event) {\n        return _vm.$router.back();\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.取消\")) + \" \")])], 1), _vm._v(\" \"), _c(\"select-logo\", {\n    ref: \"logoUrlError\",\n    attrs: {\n      form: _vm.atomForm,\n      type: \"ATOM\",\n      \"is-err\": _vm.formErrors.logoUrlError\n    }\n  })], 1)]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/edit_atom.vue?vue&type=template&id=7c36be27&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(8102);\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n// EXTERNAL MODULE: ./src/api/index.js\nvar api = __webpack_require__(2251);\n// EXTERNAL MODULE: ./src/components/bread-crumbs.vue + 5 modules\nvar bread_crumbs = __webpack_require__(3298);\n// EXTERNAL MODULE: ./src/components/common/selectLogo/index.vue + 5 modules\nvar selectLogo = __webpack_require__(1498);\n// EXTERNAL MODULE: ./src/utils/editor-options.js\nvar editor_options = __webpack_require__(6834);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/edit_atom.vue?vue&type=script&lang=js\n\n\n\n\n\n\n/* harmony default export */ const edit_atomvue_type_script_lang_js = ({\n  components: {\n    selectLogo: selectLogo/* default */.A,\n    breadCrumbs: bread_crumbs/* default */.A\n  },\n  data() {\n    return {\n      curVersion: '',\n      atomName: 'landun-atom-codecc',\n      initJobType: '',\n      initReleaseType: '',\n      descTemplate: '',\n      docsLink: this.BKCI_DOCS.PLUGIN_GUIDE_DOC,\n      showContent: false,\n      isUploading: false,\n      initOs: [],\n      categoryList: [{\n        label: this.$t('store.流水线插件'),\n        value: 'TASK'\n      }\n      // { label: '流水线触发器', value: 'TRIGGER' }\n      ],\n      jobTypeList: [{\n        label: this.$t('store.编译环境'),\n        value: 'AGENT',\n        isShow: true\n      }, {\n        label: this.$t('store.无编译环境'),\n        value: 'AGENT_LESS',\n        isShow: true\n      }],\n      envList: [{\n        label: 'Linux',\n        value: 'LINUX',\n        icon: 'linux-view'\n      }, {\n        label: 'Windows',\n        value: 'WINDOWS',\n        icon: 'windows'\n      }, {\n        label: 'macOS',\n        value: 'MACOS',\n        icon: 'macos'\n      }],\n      publishShelf: [{\n        label: this.$t('store.新上架'),\n        value: 'NEW'\n      }],\n      publishTypeList: [{\n        label: this.$t('store.非兼容式升级'),\n        value: 'INCOMPATIBILITY_UPGRADE',\n        desc: this.$t('store.当新版本输入输出不兼容旧版本时，使用非兼容式升级方式，发布后用户需修改流水线中的插件版本号才能使用新版本。')\n      }, {\n        label: this.$t('store.兼容式功能更新'),\n        value: 'COMPATIBILITY_UPGRADE',\n        desc: this.$t('store.当新版本输入输出兼容旧版本，仅更新功能时，使用兼容式升级方式，发布后用户无需修改流水线中的插件版本号，默认使用最新版本。')\n      }, {\n        label: this.$t('store.兼容式问题修正'),\n        value: 'COMPATIBILITY_FIX',\n        desc: this.$t('store.当新版本为bug fix时，使用兼容式问题修正方式，发布后用户无需修改流水线中的插件版本号，默认使用最新版本。')\n      }, {\n        label: this.$t('store.历史大版本问题修复'),\n        value: 'HIS_VERSION_UPGRADE',\n        desc: this.$t('store.当历史大版本下发现 bug 时，使用此方式进行 fix。不建议在此场景下新增/删除入参。')\n      }],\n      frontendTypeList: [{\n        label: this.$t('store.是'),\n        value: 'SPECIAL',\n        title: this.$t('store.需自行开发插件输入页面,详见插件开发指引')\n      }, {\n        label: this.$t('store.否'),\n        value: 'NORMAL',\n        title: this.$t('store.仅需按照规范定义好输入字段，系统将自动渲染页面')\n      }],\n      sortList: [],\n      labelList: [],\n      img_file: {},\n      loading: {\n        isLoading: false,\n        title: ''\n      },\n      atomForm: {\n        name: '',\n        atomCode: '',\n        logoUrl: '',\n        category: 'TASK',\n        classifyCode: '',\n        classifyName: '',\n        jobType: 'AGENT',\n        os: [],\n        labelIdList: [],\n        summary: '',\n        description: `#### ${this.$t('store.插件功能')}\\n\\n#### ${this.$t('store.适用场景')}\\n\\n#### ${this.$t('store[\"使用限制和受限解决方案[可选]\"]')}\\n\\n#### ${this.$t('store.常见的失败原因和解决方案')}`,\n        publisher: '',\n        frontendType: 'NORMAL',\n        version: '1.0.0',\n        releaseType: 'NEW',\n        versionContent: '',\n        branch: ''\n      },\n      formErrors: {\n        categoryError: false,\n        jobError: false,\n        openSourceError: false,\n        logoUrlError: false,\n        sortError: false,\n        envError: false,\n        releaseTypeError: false\n      },\n      versionMap: {},\n      publishersList: [],\n      containerList: [],\n      isZH: true\n    };\n  },\n  computed: {\n    atomId() {\n      return this.$route.params.atomId;\n    },\n    curTitle() {\n      return this.$route.name === 'shelfAtom' ? this.$t('store.上架插件') : this.$t('store.升级插件');\n    },\n    toolbarOptions() {\n      return editor_options/* toolbars */.B;\n    },\n    navList() {\n      const name = `${this.curTitle}（${this.atomForm.atomCode}）`;\n      return [{\n        name: this.$t('store.工作台'),\n        to: {\n          name: 'atomWork'\n        }\n      }, {\n        name\n      }];\n    },\n    userName() {\n      return this.$store.state.user.username;\n    },\n    mavenLang() {\n      return this.$i18n.locale === 'en-US' ? 'en' : this.$i18n.locale;\n    }\n  },\n  watch: {\n    'atomForm.jobType'(val) {\n      if (this.$route.name === 'upgradeAtom' && this.atomForm.releaseType !== 'CANCEL_RE_RELEASE') {\n        const isEqualType = val === this.initJobType;\n        const isEqualOs = this.initOs.every(item => this.atomForm.os.indexOf(item) > -1);\n        if (this.initJobType === 'AGENT') {\n          this.atomForm.releaseType = isEqualType && isEqualOs ? this.initReleaseType : 'INCOMPATIBILITY_UPGRADE';\n        } else {\n          this.atomForm.releaseType = isEqualType ? this.initReleaseType : 'INCOMPATIBILITY_UPGRADE';\n        }\n      }\n    },\n    'atomForm.os'(val) {\n      if (this.$route.name === 'upgradeAtom' && this.initJobType === 'AGENT' && this.atomForm.releaseType !== 'CANCEL_RE_RELEASE') {\n        const isEqualOs = this.initOs.every(item => this.atomForm.os.indexOf(item) > -1);\n        this.atomForm.releaseType = isEqualOs ? this.initReleaseType : 'INCOMPATIBILITY_UPGRADE';\n      }\n    },\n    'atomForm.releaseType'(val) {\n      this.curVersion = this.versionMap[val] || '';\n      this.formErrors.releaseTypeError = false;\n    }\n  },\n  async created() {\n    this.isZH = ['zh-CN', 'zh', 'zh_cn'].includes(document.documentElement.lang);\n    await this.fetchContainerList();\n    await this.requestAtomlabels();\n    await this.requestAtomDetail(this.$route.params.atomId);\n    await this.fetchPublishersList(this.atomForm.atomCode);\n    this.requestAtomClassify();\n  },\n  methods: {\n    fetchContainerList() {\n      this.$store.dispatch('store/getContainerList').then(res => {\n        this.containerList = res;\n        this.jobTypeList[1].isShow = !!this.containerList.find(i => i.type === 'normal');\n      });\n    },\n    toPublishProgress(type, id) {\n      this.$router.push({\n        name: 'releaseProgress',\n        params: {\n          releaseType: type,\n          atomId: id\n        }\n      });\n    },\n    toAtomStore() {\n      this.$router.push({\n        name: 'atomHome'\n      });\n    },\n    fetchPublishersList(atomCode) {\n      this.$store.dispatch('store/getPublishersList', {\n        atomCode\n      }).then(res => {\n        this.publishersList = res;\n        const result = this.publishersList.find(i => i.publisherCode === this.userName);\n        if (!result) {\n          this.publishersList.push({\n            publisherCode: this.userName,\n            publisherName: this.userName\n          });\n        }\n      }).catch(() => []);\n    },\n    async requestAtomlabels() {\n      try {\n        const res = await this.$store.dispatch('store/requestAtomLables');\n        this.labelList = res || [];\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async requestAtomDetail(atomId) {\n      this.loading.isLoading = true;\n      try {\n        const res = await this.$store.dispatch('store/requestAtomDetail', {\n          atomId: atomId\n        });\n        const {\n          showVersionList\n        } = await api/* default */.A.requestAtomVersionDetail(res.atomCode);\n        if (res) {\n          (0,esm_extends/* default */.A)(this.atomForm, res, {});\n          this.atomForm.jobType = !this.atomForm.jobType ? 'AGENT' : this.atomForm.jobType;\n          this.initJobType = this.atomForm.jobType;\n          this.atomForm.labelIdList = (this.atomForm.labelList || []).map(item => {\n            return item.id;\n          });\n          this.initOs = JSON.parse(JSON.stringify(this.atomForm.os));\n          // init version\n          showVersionList.forEach(versionInfo => {\n            this.versionMap[versionInfo.releaseType] = versionInfo.version;\n            if (versionInfo.defaultFlag) {\n              this.curVersion = versionInfo.version;\n              this.atomForm.releaseType = versionInfo.releaseType;\n              this.initReleaseType = versionInfo.releaseType;\n            }\n          });\n        }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        setTimeout(() => {\n          this.loading.isLoading = false;\n          this.showContent = true;\n          this.autoFocus();\n        }, 500);\n      }\n    },\n    async requestAtomClassify() {\n      try {\n        const res = await this.$store.dispatch('store/requestAtomClassify');\n        this.sortList = res;\n        this.sortList = this.sortList.filter(item => item.classifyCode !== 'trigger');\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    changeClassify() {\n      this.formErrors.sortError = false;\n    },\n    changeOs(data) {\n      this.formErrors.envError = false;\n    },\n    changeJobType() {\n      this.formErrors.envError = false;\n      this.formErrors.jobError = false;\n      this.atomForm.os = [];\n    },\n    autoFocus() {\n      this.$nextTick(() => {\n        this.$refs.atomName.focus();\n      });\n    },\n    addImage(ref, pos, file) {\n      this.uploadimg(ref, pos, file);\n    },\n    delImage(pos) {},\n    changeData(value, render) {\n      // console.log(value, render)\n    },\n    async uploadimg(ref, pos, file) {\n      const formData = new FormData();\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      let message, theme;\n      formData.append('file', file);\n      try {\n        const res = await this.$store.dispatch('store/uploadFile', {\n          formData,\n          config\n        });\n        this.$refs[ref].$img2Url(pos, res);\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n        this.$refs[ref].$refs.toolbar_left.$imgDel(pos);\n      }\n    },\n    checkValid() {\n      let errorCount = 0;\n      let ref = '';\n      if (!this.atomForm.logoUrl && !this.atomForm.iconData) {\n        this.formErrors.logoUrlError = true;\n        ref = ref || 'logoUrlError';\n        errorCount++;\n      }\n      if (this.categoryList.findIndex(x => x.value === this.atomForm.category) < 0) {\n        this.formErrors.categoryError = true;\n        ref = ref || 'categoryError';\n        errorCount++;\n      }\n      if (!this.atomForm.classifyCode) {\n        this.formErrors.sortError = true;\n        ref = ref || 'sortError';\n        errorCount++;\n      }\n      if (this.jobTypeList.findIndex(x => x.value === this.atomForm.jobType) < 0) {\n        this.formErrors.jobError = true;\n        ref = ref || 'jobError';\n        errorCount++;\n      }\n      if (this.atomForm.jobType === 'AGENT' && !this.atomForm.os.length) {\n        this.formErrors.envError = true;\n        ref = ref || 'envError';\n        errorCount++;\n      }\n      if (!this.atomForm.releaseType) {\n        this.formErrors.releaseTypeError = true;\n        ref = ref || 'releaseTypeError';\n        errorCount++;\n      }\n      if (errorCount > 0) {\n        const errorEle = this.$refs[ref];\n        if (errorEle) errorEle.$el.scrollIntoView();\n        return false;\n      }\n      return true;\n    },\n    checkJobType() {\n      let message = '';\n      const isEqualOs = this.initOs.every(item => this.atomForm.os.indexOf(item) > -1);\n      if (this.atomForm.releaseType !== 'INCOMPATIBILITY_UPGRADE' && this.atomForm.jobType !== this.initJobType && this.$route.name === 'upgradeAtom') {\n        message = this.$t('store.适用Job类型发生变更，发布类型请选择非兼容式升级，避免影响已有流水线的使用。');\n      } else if (this.atomForm.releaseType !== 'INCOMPATIBILITY_UPGRADE' && this.$route.name === 'upgradeAtom' && this.atomForm.jobType === 'AGENT' && this.initJobType === 'AGENT' && !isEqualOs) {\n        message = this.$t('store.操作系统发生变更，发布类型请选择非兼容式升级，避免影响已有流水线的使用。');\n      }\n      return message;\n    },\n    validate() {\n      return new Promise((resolve, reject) => {\n        const isCheckValid = this.checkValid();\n        const message = this.checkJobType();\n        this.$validator.validate().then(valid => {\n          if (isCheckValid && !message && valid) resolve();\n          // else reject(new Error(message || this.$t('store.校验不通过，请修改后再试')))\n        });\n      });\n    },\n    submit(fieldCheckConfirmFlag) {\n      this.validate().then(() => {\n        this.loading.isLoading = true;\n        const params = {\n          atomCode: this.atomForm.atomCode,\n          name: this.atomForm.name,\n          category: this.atomForm.category,\n          classifyCode: this.atomForm.classifyCode,\n          version: this.curVersion,\n          releaseType: this.atomForm.releaseType,\n          jobType: this.atomForm.jobType,\n          os: this.atomForm.jobType === 'AGENT' ? this.atomForm.os : [],\n          labelIdList: this.atomForm.labelIdList.filter(i => i !== 'null' && i !== ' ' && i),\n          publisher: this.atomForm.publisher,\n          versionContent: this.atomForm.versionContent,\n          logoUrl: this.atomForm.logoUrl || undefined,\n          iconData: this.atomForm.iconData || undefined,\n          summary: this.atomForm.summary || undefined,\n          description: this.atomForm.description || undefined,\n          visibilityLevel: this.atomForm.visibilityLevel,\n          frontendType: this.atomForm.frontendType,\n          fieldCheckConfirmFlag,\n          branch: this.atomForm.branch\n        };\n        return this.$store.dispatch('store/editAtom', {\n          projectCode: this.atomForm.projectCode,\n          params: params,\n          initProject: this.atomForm.initProjectCode\n        }).then(res => {\n          this.$bkMessage({\n            message: this.$t('store.提交成功'),\n            theme: 'success'\n          });\n          if (res) this.toPublishProgress(this.$route.name === 'shelfAtom' ? 'shelf' : 'upgrade', res);\n        });\n      }).catch(err => {\n        if (err.httpStatus === 200) {\n          const h = this.$createElement;\n          const subHeader = h('p', {\n            style: {\n              textDecoration: 'none',\n              cursor: 'pointer',\n              whiteSpace: 'normal',\n              textAlign: 'left',\n              lineHeight: '24px'\n            }\n          }, err.message || err);\n          if ([2120030, 2120031].includes(err.code)) {\n            const confirmFn = () => this.submit(true);\n            this.$bkInfo({\n              type: 'warning',\n              subHeader,\n              width: 440,\n              okText: this.$t('store.已确认兼容新增参数，继续'),\n              confirmFn\n            });\n          } else {\n            this.$bkInfo({\n              type: 'error',\n              title: this.$t('store.提交失败'),\n              showFooter: false,\n              subHeader\n            });\n          }\n        } else if (err) {\n          this.$bkMessage({\n            message: err.message || err,\n            theme: 'error'\n          });\n        }\n      }).finally(() => {\n        this.loading.isLoading = false;\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/edit_atom.vue?vue&type=script&lang=js\n /* harmony default export */ const views_edit_atomvue_type_script_lang_js = (edit_atomvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/edit_atom.vue?vue&type=style&index=0&id=7c36be27&prod&lang=scss&scoped=true\nvar edit_atomvue_type_style_index_0_id_7c36be27_prod_lang_scss_scoped_true = __webpack_require__(4955);\n;// CONCATENATED MODULE: ./src/views/edit_atom.vue?vue&type=style&index=0&id=7c36be27&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/views/edit_atom.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  views_edit_atomvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c36be27\",\n  null\n  \n)\n\n/* harmony default export */ const edit_atom = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7691\n");

/***/ })

}]);
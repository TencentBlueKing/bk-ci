"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkdevops_atomstore"] = globalThis["webpackChunkdevops_atomstore"] || []).push([[363],{

/***/ 7234:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937606679\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIzNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2xvZy5taW4uY3NzP2NkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzYwNjY3OVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7234\n");

/***/ }),

/***/ 9987:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937604347\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTk4Ny5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT82MjFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc2MDQzNDdcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9987\n");

/***/ }),

/***/ 2214:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937599191\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvYnJlYWQtY3J1bWJzLnZ1ZT9jZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3MTM5Mzc1OTkxOTFcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiRTovYmstY2kvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImxvY2Fsc1wiOmZhbHNlfSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2214\n");

/***/ }),

/***/ 4744:
/***/ ((module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1713937607950\n      var cssReload = __webpack_require__(4736)(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDc0NC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL3ZpZXdzL3JlbGVhc2VfcHJvZ3Jlc3MudnVlPzJkZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcxMzkzNzYwNzk1MFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJFOi9iay1jaS9zcmMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wibG9jYWxzXCI6ZmFsc2V9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgbW9kdWxlLmhvdC5hY2NlcHQodW5kZWZpbmVkLCBjc3NSZWxvYWQpO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4744\n");

/***/ }),

/***/ 7509:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ Log)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=template&id=71848dbc\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"section\", {\n    staticClass: \"pipeline-logs\"\n  }, [_c(\"div\", {\n    ref: \"logContainer\",\n    attrs: {\n      buildNo: _vm.buildNo\n    }\n  })]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=template&id=71848dbc\n\n// EXTERNAL MODULE: ./src/components/Log/log.min.css\nvar log_min = __webpack_require__(7234);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=script&lang=js\n\n/* harmony default export */ const Logvue_type_script_lang_js = ({\n  name: 'pipeline-log',\n  props: {\n    buildNo: {\n      type: String,\n      required: true\n    },\n    buildNum: {\n      type: Number,\n      required: true\n    },\n    buildTag: {\n      type: String,\n      default: ''\n    },\n    showExport: {\n      type: Boolean,\n      default: false\n    },\n    logUrl: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showTime: false\n      // sodaLog: require()\n    };\n  },\n  watch: {\n    buildNo(newVal, oldVal) {\n      newVal && this.renderLog(newVal);\n    },\n    buildTag(newVal, oldVal) {\n      this.renderLog(this.buildNo);\n    },\n    showTime(newVal, oldVal) {\n      this.renderLog(this.buildNo);\n    }\n  },\n  beforeDestroy() {\n    this._destroyLog();\n  },\n  async mounted() {\n    if (!window.SodaLog) {\n      await __webpack_require__.e(/* import() | log */ 723).then(__webpack_require__.bind(__webpack_require__, 2324));\n    }\n    this.SodaLog = window.SodaLog;\n    this.buildNo && this.renderLog(this.buildNo);\n  },\n  methods: {\n    renderLog(buildNo) {\n      this.SodaLog.render(this.$refs.logContainer, `${window.API_URL_PREFIX}/${this.logUrl}`, buildNo, this.showTime, this.buildTag);\n    },\n    _destroyLog() {\n      this.SodaLog.unMount(this.$refs.logContainer);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=script&lang=js\n /* harmony default export */ const components_Logvue_type_script_lang_js = (Logvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Log/index.vue?vue&type=style&index=0&id=71848dbc&prod&lang=scss\nvar Logvue_type_style_index_0_id_71848dbc_prod_lang_scss = __webpack_require__(9987);\n;// CONCATENATED MODULE: ./src/components/Log/index.vue?vue&type=style&index=0&id=71848dbc&prod&lang=scss\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/Log/index.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_Logvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Log = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUwOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTs7Ozs7OztBRUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVFQTs7Ozs7Ozs7QUVBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL0xvZy9pbmRleC52dWU/NzE0ZCIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT9hNWIzIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT8xZWYxIiwid2VicGFjazovL2Rldm9wcy1hdG9tc3RvcmUvLi9zcmMvY29tcG9uZW50cy9Mb2cvaW5kZXgudnVlP2JmMGMiLCJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uL3NyYy9jb21wb25lbnRzL0xvZy9pbmRleC52dWU/YWUzMiIsIndlYnBhY2s6Ly9kZXZvcHMtYXRvbXN0b3JlLy4vc3JjL2NvbXBvbmVudHMvTG9nL2luZGV4LnZ1ZT80OWM3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gIHZhciBfdm0gPSB0aGlzLFxuICAgIF9jID0gX3ZtLl9zZWxmLl9jXG4gIHJldHVybiBfYyhcInNlY3Rpb25cIiwgeyBzdGF0aWNDbGFzczogXCJwaXBlbGluZS1sb2dzXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgcmVmOiBcImxvZ0NvbnRhaW5lclwiLCBhdHRyczogeyBidWlsZE5vOiBfdm0uYnVpbGRObyB9IH0pLFxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTcxODQ4ZGJjXCIiLCI8dGVtcGxhdGU+XHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cInBpcGVsaW5lLWxvZ3NcIj5cclxuICAgICAgICA8IS0tIDxkaXYgY2xhc3M9J29wdGlvbnMtbG9nJz5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYmstYnV0dG9uIGJrLWJ1dHRvbi1zbWFsbCBzaG93dGltZS1sb2cnXHJcbiAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7J2JrLXByaW1hcnknOiBzaG93VGltZX1cIlxyXG4gICAgICAgICAgICAgICAgQGNsaWNrLnN0b3A9XCJzaG93VGltZSA9ICFzaG93VGltZVwiPuaYvuekuuaXtumXtDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz0nYmstYnV0dG9uIGJrLWJ1dHRvbi1zbWFsbCBleHBvcnQtbG9nJyB2LWlmPVwic2hvd0V4cG9ydFwiIGRvd25sb2FkIDpocmVmPVwiZG93bmxvYWRVcmxcIj7lr7zlh7rml6Xlv5c8L2E+XHJcbiAgICAgICAgPC9kaXY+IC0tPlxyXG4gICAgICAgIDxkaXYgcmVmPVwibG9nQ29udGFpbmVyXCIgOmJ1aWxkTm89XCJidWlsZE5vXCI+PC9kaXY+XHJcbiAgICA8L3NlY3Rpb24+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG4gICAgaW1wb3J0ICdAL2NvbXBvbmVudHMvTG9nL2xvZy5taW4uY3NzJ1xyXG4gICAgZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgICAgIG5hbWU6ICdwaXBlbGluZS1sb2cnLFxyXG4gICAgICAgIHByb3BzOiB7XHJcbiAgICAgICAgICAgIGJ1aWxkTm86IHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJ1aWxkTnVtOiB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBidWlsZFRhZzoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogJydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2hvd0V4cG9ydDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxvZ1VybDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YSAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBzaG93VGltZTogZmFsc2VcclxuICAgICAgICAgICAgICAgIC8vIHNvZGFMb2c6IHJlcXVpcmUoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB3YXRjaDoge1xyXG4gICAgICAgICAgICBidWlsZE5vIChuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICAgICAgbmV3VmFsICYmIHRoaXMucmVuZGVyTG9nKG5ld1ZhbClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYnVpbGRUYWcgKG5ld1ZhbCwgb2xkVmFsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckxvZyh0aGlzLmJ1aWxkTm8pXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNob3dUaW1lIChuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJMb2codGhpcy5idWlsZE5vKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBiZWZvcmVEZXN0cm95ICgpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGVzdHJveUxvZygpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBhc3luYyBtb3VudGVkICgpIHtcclxuICAgICAgICAgICAgaWYgKCF3aW5kb3cuU29kYUxvZykge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgaW1wb3J0KFxyXG4gICAgICAgICAgICAgICAgICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICdsb2cnICovXHJcbiAgICAgICAgICAgICAgICAgICAgJ0AvY29tcG9uZW50cy9Mb2cvbG9nLm1pbi5qcydcclxuICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlNvZGFMb2cgPSB3aW5kb3cuU29kYUxvZ1xyXG4gICAgICAgICAgICB0aGlzLmJ1aWxkTm8gJiYgdGhpcy5yZW5kZXJMb2codGhpcy5idWlsZE5vKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWV0aG9kczoge1xyXG4gICAgICAgICAgICByZW5kZXJMb2cgKGJ1aWxkTm8pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU29kYUxvZy5yZW5kZXIodGhpcy4kcmVmcy5sb2dDb250YWluZXIsIGAke3dpbmRvdy5BUElfVVJMX1BSRUZJWH0vJHt0aGlzLmxvZ1VybH1gLCBidWlsZE5vLCB0aGlzLnNob3dUaW1lLCB0aGlzLmJ1aWxkVGFnKVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBfZGVzdHJveUxvZyAoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNvZGFMb2cudW5Nb3VudCh0aGlzLiRyZWZzLmxvZ0NvbnRhaW5lcilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cclxuICAgIEBpbXBvcnQgJ0AvYXNzZXRzL3Njc3MvY29uZi5zY3NzJztcclxuXHJcbiAgICAucGlwZWxpbmUtbG9ncyB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAub3B0aW9ucy1sb2cge1xyXG4gICAgICAgICAgICB0b3A6IC00NHB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgID4gZGl2IHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuPC9zdHlsZT5cclxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P2Nsb25lZFJ1bGVTZXQtMy51c2VbMF0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTcxODQ4ZGJjJnByb2QmbGFuZz1zY3NzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MTg0OGRiY1wiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03MTg0OGRiYyZwcm9kJmxhbmc9c2Nzc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7509\n");

/***/ }),

/***/ 3298:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ bread_crumbs)\n});\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"header\", {\n    staticClass: \"store-nav\"\n  }, [_c(\"section\", {\n    staticClass: \"nav-main\"\n  }, [_c(\"icon\", {\n    staticClass: \"title-icon\",\n    attrs: {\n      name: \"color-logo-store\",\n      size: \"22\"\n    }\n  }), _vm._v(\" \"), _c(\"span\", {\n    staticClass: \"back-home quick-route\",\n    on: {\n      click: function ($event) {\n        return _vm.changePage({\n          name: \"atomHome\",\n          query: {\n            pipeType: _vm.type\n          }\n        });\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")]), _vm._v(\" \"), _vm._l(_vm.breadCrumbs, function (breadCrumb) {\n    return [_c(\"i\", {\n      key: breadCrumb.name,\n      staticClass: \"right-arrow banner-arrow\"\n    }), _vm._v(\" \"), breadCrumb.to ? _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des quick-route\",\n      on: {\n        click: function ($event) {\n          return _vm.changePage(breadCrumb.to);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")]) : _c(\"span\", {\n      key: breadCrumb.name,\n      staticClass: \"banner-des\"\n    }, [_vm._v(\" \" + _vm._s(breadCrumb.name) + \" \")])];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=template&id=5b47cb8d&scoped=true\n\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=script&lang=js\n/* harmony default export */ const bread_crumbsvue_type_script_lang_js = ({\n  props: {\n    breadCrumbs: Array,\n    type: String\n  },\n  methods: {\n    changePage(to) {\n      this.$router.push(to);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=script&lang=js\n /* harmony default export */ const components_bread_crumbsvue_type_script_lang_js = (bread_crumbsvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\nvar bread_crumbsvue_type_style_index_0_id_5b47cb8d_prod_lang_scss_scoped_true = __webpack_require__(2214);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue?vue&type=style&index=0&id=5b47cb8d&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/components/bread-crumbs.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  components_bread_crumbsvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b47cb8d\",\n  null\n  \n)\n\n/* harmony default export */ const bread_crumbs = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3298\n");

/***/ }),

/***/ 5418:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ release_progress)\n});\n\n// EXTERNAL MODULE: ../node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(7406);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/release_progress.vue?vue&type=template&id=5691fff8&scoped=true\n\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.loading.isLoading,\n        title: _vm.loading.title\n      },\n      expression: \"{\\n        isLoading: loading.isLoading,\\n        title: loading.title\\n    }\"\n    }],\n    staticClass: \"release-progress-wrapper\"\n  }, [_c(\"bread-crumbs\", {\n    attrs: {\n      \"bread-crumbs\": _vm.navList,\n      type: \"atom\"\n    }\n  }, [_c(\"a\", {\n    staticClass: \"g-title-work\",\n    attrs: {\n      target: \"_blank\",\n      href: _vm.docsLink\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.插件指引\")) + \" \")])]), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showContent,\n      expression: \"showContent\"\n    }],\n    staticClass: \"release-progress-content\"\n  }, [_c(\"div\", {\n    staticClass: \"atom-release-msg\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-title release-progress-title\"\n  }, [_c(\"p\", {\n    staticClass: \"form-title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布进度\")) + \" \"), !_vm.isOver ? _c(\"span\", {\n    class: [{\n      disable: !_vm.permission\n    }, \"cancel-release-btn\"],\n    attrs: {\n      title: _vm.permissionMsg\n    },\n    on: {\n      click: _vm.handlerCancel\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.取消发布\")) + \" \")]) : _vm._e()]), _vm._v(\" \"), _c(\"hr\", {\n    staticClass: \"cut-line\"\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"progress-step\"\n  }, [_c(\"div\", {\n    staticClass: \"step-line-box\"\n  }, _vm._l(_vm.progressStatus, function (entry, index) {\n    return _c(\"div\", {\n      key: index,\n      staticClass: \"step-card\",\n      class: {\n        \"processing-status\": entry.status === \"doing\",\n        \"fail-status\": entry.status === \"fail\",\n        \"success-status\": entry.code === \"end\" && entry.status === \"success\"\n      }\n    }, [_c(\"div\", {\n      staticClass: \"card-item\"\n    }, [entry.status === \"success\" ? _c(\"i\", {\n      staticClass: \"devops-icon icon-check-1\"\n    }) : _vm._e(), _vm._v(\" \"), _c(\"p\", {\n      staticClass: \"step-label\"\n    }, [_vm._v(_vm._s(entry.name))])]), _vm._v(\" \"), _vm.isEnterprise ? _c(\"div\", {\n      staticClass: \"retry-bth\"\n    }, [entry.code === \"commit\" && [\"doing\", \"success\"].includes(entry.status) && !_vm.isOver ? _c(\"span\", {\n      staticClass: \"test-btn\"\n    }, [_c(\"span\", {\n      on: {\n        click: function ($event) {\n          return _vm.$refs.upload[0].click();\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.$t(\"store.重新传包\")))]), _vm._v(\" \"), _c(\"span\", {\n      staticClass: \"retry-pkgName\"\n    }, [_vm._v(_vm._s(_vm.versionDetail.pkgName))]), _vm._v(\" \"), _c(\"input\", {\n      ref: \"upload\",\n      refInFor: true,\n      staticClass: \"upload-input\",\n      attrs: {\n        type: \"file\",\n        title: \"\",\n        accept: \"application/zip\"\n      },\n      on: {\n        change: _vm.selectFile\n      }\n    })]) : _vm._e()]) : _c(\"div\", {\n      staticClass: \"retry-bth\"\n    }, [entry.code === \"build\" && entry.status === \"fail\" || entry.code === \"build\" && entry.status === \"success\" && _vm.progressStatus[index + 1].status === \"doing\" || entry.code === \"build\" && _vm.curStep.status === \"fail\" && _vm.curStep.code === \"codecc\" ? _c(\"span\", {\n      class: [{\n        disable: !_vm.permission\n      }, \"rebuild-btn\"],\n      attrs: {\n        title: _vm.permissionMsg\n      },\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.rebuild(false);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.重新构建\")) + \" \"), !_vm.isEnterprise ? _c(\"i\", {\n      staticClass: \"col-line\"\n    }) : _vm._e()]) : _vm._e(), _vm._v(\" \"), entry.code === \"build\" && entry.status !== \"undo\" && !_vm.isEnterprise ? _c(\"span\", {\n      staticClass: \"log-btn\",\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.readLog.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.日志\")) + \" \")]) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"retry-bth\"\n    }, [entry.code === \"test\" && entry.status === \"doing\" ? _c(\"span\", {\n      staticClass: \"test-btn\"\n    }, [_c(\"a\", {\n      attrs: {\n        target: \"_blank\",\n        href: `/console/pipeline/${_vm.versionDetail.projectCode}/list`\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.测试\")) + \" \")])]) : _vm._e()]), _vm._v(\" \"), entry.code === \"test\" ? _c(\"bk-button\", {\n      class: [{\n        \"small-left\": _vm.progressStatus.length === 6\n      }, \"pass-btn\"],\n      attrs: {\n        theme: \"primary\",\n        size: \"small\",\n        disabled: entry.status !== \"doing\" || !_vm.permission,\n        title: _vm.permissionMsg\n      },\n      on: {\n        click: function ($event) {\n          $event.stopPropagation();\n          return _vm.passTest.apply(null, arguments);\n        }\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.继续\")) + \" \")]) : _vm._e(), _vm._v(\" \"), entry.code === \"approve\" && entry.status === \"doing\" && !_vm.isEnterprise ? _c(\"div\", {\n      staticClass: \"audit-tips\"\n    }, [_c(\"i\", {\n      staticClass: \"devops-icon icon-info-circle\"\n    }), _vm._v(\" \" + _vm._s(_vm.$t(\"store.由蓝盾管理员审核\")) + \"\\n                            \")]) : _vm._e()], 1);\n  }), 0)])]), _vm._v(\" \"), !_vm.isOver ? _c(\"div\", {\n    staticClass: \"detail-title version-detail-title\"\n  }, [_vm.curStep.code === \"codecc\" && _vm.versionDetail.atomCode ? _c(\"code-check\", {\n    ref: \"codecheck\",\n    staticClass: \"detail-code-check\",\n    attrs: {\n      id: _vm.versionDetail.atomId,\n      code: _vm.versionDetail.atomCode,\n      type: \"ATOM\"\n    },\n    on: {\n      startCodeCC: _vm.handleRelease\n    }\n  }) : [_c(\"p\", {\n    staticClass: \"form-title\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本详情\")) + \" \")]), _vm._v(\" \"), _c(\"hr\", {\n    staticClass: \"cut-line\"\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"atom-version-detail\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-form-item multi-item\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.名称：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.name))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.标识：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.atomCode))])])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item multi-item\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.范畴：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.categoryMap[_vm.versionDetail.category]))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.分类：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.classifyName))])])]), _vm._v(\" \"), _vm.isEnterprise ? _c(\"div\", {\n    staticClass: \"detail-form-item multi-item\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.操作系统：\")) + \" \")]), _vm._v(\" \"), _vm.versionDetail.os ? _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm.versionDetail.jobType === \"AGENT\" ? _c(\"span\", [_vm.versionDetail.os.indexOf(\"LINUX\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-linux-view\"\n  }) : _vm._e(), _vm._v(\" \"), _vm.versionDetail.os.indexOf(\"WINDOWS\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-windows\"\n  }) : _vm._e(), _vm._v(\" \"), _vm.versionDetail.os.indexOf(\"MACOS\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-macos\"\n  }) : _vm._e()]) : _vm._e()]) : _vm._e()])]) : _c(\"div\", {\n    staticClass: \"detail-form-item multi-item\"\n  }, [_c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.适用Job类型：\")) + \" \")]), _vm._v(\" \"), _vm.versionDetail.os ? _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.jobTypeMap[_vm.versionDetail.jobType]) + \"\\n                                    \"), _vm.versionDetail.jobType === \"AGENT\" ? _c(\"span\", [_vm._v(\"（\\n                                        \"), _vm.versionDetail.os.indexOf(\"LINUX\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-linux-view\"\n  }) : _vm._e(), _vm._v(\" \"), _vm.versionDetail.os.indexOf(\"WINDOWS\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-windows\"\n  }) : _vm._e(), _vm._v(\" \"), _vm.versionDetail.os.indexOf(\"MACOS\") !== -1 ? _c(\"i\", {\n    staticClass: \"devops-icon icon-macos\"\n  }) : _vm._e(), _vm._v(\"）\\n                                    \")]) : _vm._e()]) : _vm._e()]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item is-open\"\n  }, [_c(\"label\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.是否开源\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm._f(\"levelFilter\")(_vm.versionDetail.visibilityLevel)))])])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.功能标签：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value feature-label\"\n  }, _vm._l(_vm.versionDetail.labels, function (label, index) {\n    return _c(\"div\", {\n      key: index,\n      staticClass: \"label-card\"\n    }, [_vm._v(_vm._s(label))]);\n  }), 0)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.简介：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.summary))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.详细描述：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    ref: \"editor\",\n    staticClass: \"info-value markdown-editor-show\",\n    class: {\n      overflow: !_vm.isDropdownShow\n    }\n  }, [_c(\"mavon-editor\", {\n    attrs: {\n      editable: false,\n      \"default-open\": \"preview\",\n      subfield: false,\n      \"toolbars-flag\": false,\n      \"external-link\": false,\n      \"box-shadow\": false,\n      \"preview-background\": \"#fafbfd\"\n    },\n    model: {\n      value: _vm.versionDetail.description,\n      callback: function ($$v) {\n        _vm.$set(_vm.versionDetail, \"description\", $$v);\n      },\n      expression: \"versionDetail.description\"\n    }\n  })], 1)]), _vm._v(\" \"), _vm.isOverflow ? _c(\"div\", {\n    staticClass: \"toggle-btn\",\n    on: {\n      click: function ($event) {\n        return _vm.toggleShow();\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.isDropdownShow ? _vm.$t(\"store.收起\") : _vm.$t(\"store.展开\")) + \"\\n                            \"), _c(\"i\", {\n    class: [\"devops-icon icon-angle-down\", {\n      \"icon-flip\": _vm.isDropdownShow\n    }]\n  })]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布者：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.publisher))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布类型：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.releaseMap[_vm.versionDetail.releaseType]))])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.版本：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.version))])]), _vm._v(\" \"), _vm.isEnterprise ? _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布包：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_vm._v(_vm._s(_vm.versionDetail.pkgName))])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"detail-form-item\"\n  }, [_c(\"div\", {\n    staticClass: \"info-label\"\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.发布描述：\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"info-value\"\n  }, [_c(\"mavon-editor\", {\n    attrs: {\n      editable: false,\n      \"default-open\": \"preview\",\n      subfield: false,\n      \"toolbars-flag\": false,\n      \"external-link\": false,\n      \"box-shadow\": false,\n      \"preview-background\": \"#fafbfd\"\n    },\n    model: {\n      value: _vm.versionDetail.versionContent,\n      callback: function ($$v) {\n        _vm.$set(_vm.versionDetail, \"versionContent\", $$v);\n      },\n      expression: \"versionDetail.versionContent\"\n    }\n  })], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"atom-logo-box\"\n  }, [_vm.versionDetail.logoUrl ? _c(\"img\", {\n    attrs: {\n      src: _vm.versionDetail.logoUrl\n    }\n  }) : _c(\"i\", {\n    staticClass: \"devops-icon icon-placeholder atom-logo\"\n  })])]], 2) : _vm._e(), _vm._v(\" \"), _vm.isOver ? _c(\"div\", {\n    staticClass: \"released-tips\"\n  }, [_c(\"h3\", [_vm._v(\" \" + _vm._s(_vm.$t(\"store.恭喜，成功发布到商店!\")) + \" \")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"handle-btn\"\n  }, [_c(\"bk-button\", {\n    staticClass: \"bk-button bk-primary\",\n    attrs: {\n      size: \"small\"\n    },\n    on: {\n      click: _vm.toAtomList\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.工作台\")) + \" \")]), _vm._v(\" \"), _c(\"bk-button\", {\n    staticClass: \"bk-button bk-default\",\n    attrs: {\n      size: \"small\"\n    },\n    on: {\n      click: _vm.toAtomStore\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t(\"store.研发商店\")) + \" \")])], 1)]) : _vm._e()])]), _vm._v(\" \"), _c(\"bk-sideslider\", {\n    staticClass: \"build-side-slider\",\n    attrs: {\n      \"is-show\": _vm.sideSliderConfig.show,\n      title: _vm.sideSliderConfig.title,\n      \"quick-close\": _vm.sideSliderConfig.quickClose,\n      width: _vm.sideSliderConfig.width\n    },\n    on: {\n      \"update:isShow\": function ($event) {\n        return _vm.$set(_vm.sideSliderConfig, \"show\", $event);\n      },\n      \"update:is-show\": function ($event) {\n        return _vm.$set(_vm.sideSliderConfig, \"show\", $event);\n      }\n    }\n  }, [_c(\"template\", {\n    slot: \"content\"\n  }, [_c(\"div\", {\n    directives: [{\n      name: \"bkloading\",\n      rawName: \"v-bkloading\",\n      value: {\n        isLoading: _vm.sideSliderConfig.loading.isLoading,\n        title: _vm.sideSliderConfig.loading.title\n      },\n      expression: \"{\\n                    isLoading: sideSliderConfig.loading.isLoading,\\n                    title: sideSliderConfig.loading.title\\n                }\"\n    }],\n    staticStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, [_vm.currentBuildNo ? _c(\"build-log\", {\n    attrs: {\n      \"build-no\": _vm.currentBuildNo,\n      \"log-url\": `store/api/user/store/logs/types/ATOM/projects/${_vm.currentProjectCode}/pipelines/${_vm.currentPipelineId}/builds`\n    }\n  }) : _vm._e()], 1)])], 2)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./src/views/release_progress.vue?vue&type=template&id=5691fff8&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(8102);\n// EXTERNAL MODULE: ./src/components/bread-crumbs.vue + 5 modules\nvar bread_crumbs = __webpack_require__(3298);\n// EXTERNAL MODULE: ./src/components/code-check/index.vue + 35 modules\nvar code_check = __webpack_require__(7045);\n// EXTERNAL MODULE: ./src/components/Log/index.vue + 5 modules\nvar Log = __webpack_require__(7509);\n;// CONCATENATED MODULE: ./src/utils/webSocketMessage.js\n/*\r\n * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.\r\n *\r\n * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\r\n *\r\n * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.\r\n *\r\n * A copy of the MIT License is included in this file.\r\n *\r\n *\r\n * Terms of the MIT License:\r\n * ---------------------------------------------------\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\n/* harmony default export */ const webSocketMessage = ({\n  callBack: () => {},\n  installWsMessage(callBack) {\n    this.callBack = res => {\n      const data = res.data;\n      const type = data.webSocketType;\n      if (type === 'AMD') {\n        const message = JSON.parse(data.message);\n        callBack(message);\n      }\n    };\n    window.addEventListener('message', this.callBack);\n  },\n  unInstallWsMessage() {\n    window.removeEventListener('message', this.callBack);\n    this.callBack = () => {};\n  }\n});\n// EXTERNAL MODULE: ../node_modules/js-cookie/dist/js.cookie.mjs\nvar js_cookie = __webpack_require__(2137);\n;// CONCATENATED MODULE: ../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/release_progress.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\nconst CSRFToken = js_cookie/* default */.A.get('paas_perm_csrftoken');\n/* harmony default export */ const release_progressvue_type_script_lang_js = ({\n  components: {\n    BuildLog: Log/* default */.A,\n    breadCrumbs: bread_crumbs/* default */.A,\n    codeCheck: code_check/* default */.A\n  },\n  filters: {\n    levelFilter(val) {\n      const local = window.devops || {};\n      if (val === 'LOGIN_PUBLIC') return local.$t('store.是');else return local.$t('store.否');\n    }\n  },\n  data() {\n    return {\n      permission: true,\n      atomlogoUrl: '',\n      currentProjectCode: '',\n      currentBuildNo: '',\n      currentPipelineId: '',\n      timer: -1,\n      docsLink: this.BKCI_DOCS.PLUGIN_GUIDE_DOC,\n      showContent: false,\n      isOverflow: false,\n      isDropdownShow: false,\n      progressStatus: [],\n      storeBuildInfo: {},\n      loading: {\n        isLoading: false,\n        title: ''\n      },\n      categoryMap: {\n        TASK: this.$t('store.流水线插件'),\n        TRIGGER: this.$t('store.流水线触发器')\n      },\n      jobTypeMap: {\n        AGENT: this.$t('store.编译环境'),\n        AGENT_LESS: this.$t('store.无编译环境')\n      },\n      osMap: {\n        LINUX: 'Linux',\n        WINDOWS: 'Windows',\n        MACOS: 'macOS'\n        // 'NONE': '无构建环境'\n      },\n      releaseMap: {\n        NEW: this.$t('store.新上架'),\n        INCOMPATIBILITY_UPGRADE: this.$t('store.非兼容式升级'),\n        COMPATIBILITY_UPGRADE: this.$t('store.兼容式功能更新'),\n        COMPATIBILITY_FIX: this.$t('store.兼容式问题修正'),\n        HIS_VERSION_UPGRADE: this.$t('store.历史大版本问题修复')\n      },\n      versionDetail: {\n        atomCode: '',\n        description: '',\n        visibilityLevel: ''\n      },\n      sideSliderConfig: {\n        show: false,\n        title: this.$t('store.查看日志'),\n        quickClose: true,\n        width: 820,\n        value: '',\n        loading: {\n          isLoading: false,\n          title: ''\n        }\n      }\n    };\n  },\n  computed: {\n    routerParams() {\n      return this.$route.params;\n    },\n    curTitle() {\n      return this.routerParams.releaseType === 'shelf' ? this.$t('store.上架插件') : this.$t('store.升级插件');\n    },\n    isOver() {\n      return this.progressStatus.length && this.progressStatus[this.progressStatus.length - 1].status === 'success';\n    },\n    permissionMsg() {\n      let str = '';\n      if (!this.permission) str = this.$t('store.只有插件管理员或当前流程创建者可以操作');\n      return str;\n    },\n    isEnterprise() {\n      return \"tencent\" === 'ee';\n    },\n    postUrl() {\n      return `${API_URL_PREFIX}/artifactory/api/user/artifactories/projects/${this.versionDetail.projectCode}/ids/${this.versionDetail.atomId}/codes/${this.versionDetail.atomCode}/versions/${this.versionDetail.version}/re/archive`;\n    },\n    navList() {\n      return [{\n        name: this.$t('store.工作台')\n      }, {\n        name: this.$t('store.流水线插件'),\n        to: {\n          name: 'atomWork'\n        }\n      }, {\n        name: this.versionDetail.atomCode,\n        to: {\n          name: 'statisticData',\n          params: {\n            code: this.versionDetail.atomCode,\n            type: 'atom'\n          }\n        }\n      }, {\n        name: this.curTitle\n      }];\n    },\n    curStep() {\n      return this.progressStatus.find(step => ['fail', 'doing'].includes(step.status)) || this.progressStatus.length && this.progressStatus[this.progressStatus.length - 1] || {};\n    },\n    mavenLang() {\n      return this.$i18n.locale === 'en-US' ? 'en' : this.$i18n.locale;\n    }\n  },\n  watch: {\n    'sideSliderConfig.show'(val) {\n      if (!val) {\n        this.currentProjectCode = '';\n        this.currentBuildNo = '';\n        this.currentPipelineId = '';\n      }\n    }\n  },\n  async created() {\n    await this.requestRelease(this.routerParams.atomId);\n    await this.requestAtomDetail(this.routerParams.atomId);\n    webSocketMessage.installWsMessage(this.handleRelease);\n  },\n  beforeDestroy() {\n    // clearTimeout(this.timer)\n    webSocketMessage.unInstallWsMessage();\n  },\n  methods: {\n    toAtomList() {\n      this.$router.push({\n        name: 'atomWork'\n      });\n    },\n    toAtomStore() {\n      this.$router.push({\n        name: 'atomHome'\n      });\n    },\n    async requestAtomDetail(atomId) {\n      this.loading.isLoading = true;\n      try {\n        const res = await this.$store.dispatch('store/requestAtomDetail', {\n          atomId: atomId\n        });\n        (0,esm_extends/* default */.A)(this.versionDetail, res);\n        this.versionDetail.labels = res.labelList.map(item => {\n          return item.labelName;\n        });\n        this.$nextTick(() => {\n          setTimeout(() => {\n            this.isOverflow = this.$refs.editor && this.$refs.editor.scrollHeight > 180;\n          }, 1000);\n        });\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      } finally {\n        setTimeout(() => {\n          this.loading.isLoading = false;\n        }, 500);\n        this.showContent = true;\n      }\n    },\n    handleRelease(res) {\n      const curStatus = this.progressStatus.find(step => step.status === 'doing') || {};\n      const nextStatus = res.processInfos.find(step => step.status === 'doing') || {};\n      const time = curStatus.code === 'codecc' && ['end', 'approve', undefined].includes(nextStatus.code) ? 3000 : 0;\n      if (curStatus.code === 'codecc' && nextStatus.code === 'codecc') this.$refs.codecheck && this.$refs.codecheck.getCodeScore();\n      setTimeout(() => {\n        this.progressStatus = res.processInfos;\n        this.permission = res.opPermission;\n        if (res.storeBuildInfo) {\n          this.storeBuildInfo = res.storeBuildInfo;\n        }\n      }, time);\n    },\n    async requestRelease(atomId) {\n      try {\n        const res = await this.$store.dispatch('store/requestRelease', {\n          atomId: atomId\n        });\n        this.handleRelease(res);\n        // if (!this.isOver) {\n        //     this.loopCheck()\n        // }\n      } catch (err) {\n        const message = err.message ? err.message : err;\n        const theme = 'error';\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async passTest() {\n      if (!this.permission) return;\n      let message, theme;\n      try {\n        await this.$store.dispatch('store/passTest', {\n          atomId: this.routerParams.atomId\n        });\n        message = this.$t('store.操作成功');\n        theme = 'success';\n        // this.requestRelease(this.routerParams.atomId)\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        this.$bkMessage({\n          message,\n          theme\n        });\n      }\n    },\n    async rebuild(fieldCheckConfirmFlag) {\n      if (!this.permission) return;\n      let message, theme;\n      try {\n        await this.$store.dispatch('store/rebuild', {\n          atomId: this.routerParams.atomId,\n          projectId: this.versionDetail.projectCode,\n          initProject: this.versionDetail.initProjectCode,\n          fieldCheckConfirmFlag\n        });\n        message = this.$t('store.操作成功');\n        theme = 'success';\n        // this.requestRelease(this.routerParams.atomId)\n      } catch (err) {\n        if ([2120030, 2120031].includes(err.code)) {\n          this.confirmSubmit(err.message, () => this.rebuild(true));\n          return;\n        }\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        if (message) {\n          this.$bkMessage({\n            message,\n            theme\n          });\n        }\n      }\n    },\n    readLog() {\n      this.sideSliderConfig.show = true;\n      this.currentProjectCode = this.storeBuildInfo.projectCode;\n      this.currentBuildNo = this.storeBuildInfo.buildId;\n      this.currentPipelineId = this.storeBuildInfo.pipelineId;\n    },\n    handlerCancel() {\n      if (!this.permission) return;\n      const h = this.$createElement;\n      const subHeader = h('p', {\n        style: {\n          textAlign: 'center'\n        }\n      }, `${this.$t('store.确定取消发布该插件？')}`);\n      this.$bkInfo({\n        title: this.$t('store.取消发布'),\n        subHeader,\n        maskClose: true,\n        confirmFn: async () => {\n          this.cancelRelease();\n        }\n      });\n    },\n    async cancelRelease() {\n      let message, theme;\n      this.loading.isLoading = true;\n      try {\n        await this.$store.dispatch('store/cancelRelease', {\n          atomId: this.routerParams.atomId\n        });\n        message = this.$t('store.取消成功');\n        theme = 'success';\n        this.toAtomList();\n      } catch (err) {\n        message = err.message ? err.message : err;\n        theme = 'error';\n      } finally {\n        this.$bkMessage({\n          message,\n          theme\n        });\n        setTimeout(() => {\n          this.loading.isLoading = false;\n        }, 1000);\n      }\n    },\n    selectFile() {\n      const target = event.target;\n      const files = target.files;\n      if (!files.length) return;\n      for (const file of files) {\n        const fileObj = {\n          name: file.name,\n          size: file.size / 1000 / 1000,\n          type: file.type,\n          origin: file\n        };\n        const pos = fileObj.name.lastIndexOf('.');\n        const lastname = fileObj.name.substring(pos, fileObj.name.length);\n        if (lastname.toLowerCase() !== '.zip') {\n          this.$bkMessage({\n            message: this.$t('store.只允许上传 zip 格式的文件'),\n            theme: 'error'\n          });\n        } else {\n          this.uploadFile(fileObj);\n        }\n      }\n    },\n    uploadFile(fileObj) {\n      let fieldCheckConfirmFlag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const formData = new FormData();\n      formData.append('file', fileObj.origin);\n      formData.append('os', `[\"${this.versionDetail.os.join('\",\"')}\"]`);\n      const xhr = new XMLHttpRequest();\n      fileObj.xhr = xhr; // 保存，用于中断请求\n\n      xhr.withCredentials = true;\n      const url = this.postUrl + `?fieldCheckConfirmFlag=${fieldCheckConfirmFlag}`;\n      xhr.open('POST', url, true);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          let theme, message;\n          if (xhr.status === 200) {\n            const response = JSON.parse(xhr.responseText);\n            if (response.status === 0) {\n              theme = 'success';\n              message = this.$t('store.上传成功');\n              this.requestRelease(this.routerParams.atomId);\n              this.requestAtomDetail(this.routerParams.atomId);\n            } else if ([2120030, 2120031].includes(response.status)) {\n              this.confirmSubmit(response.message, () => this.uploadFile(fileObj, true));\n              return;\n            } else {\n              theme = 'error';\n              message = response.message;\n            }\n          } else {\n            const errResponse = JSON.parse(xhr.responseText);\n            theme = 'error';\n            message = errResponse.message;\n          }\n          this.$bkMessage({\n            message,\n            theme\n          });\n        }\n      };\n      if (xhr.upload) {\n        xhr.upload.onprogress = event => {\n          if (event.lengthComputable) {\n            const progress = Math.floor(event.loaded / event.total * 100);\n            this.progress = progress >= 1 ? progress - 1 : 0;\n          }\n        };\n      }\n      xhr.setRequestHeader('X-CSRFToken', CSRFToken);\n      xhr.send(formData);\n      document.querySelector('.upload-input').value = '';\n    },\n    confirmSubmit(message, confirmFn) {\n      const h = this.$createElement;\n      const subHeader = h('p', {\n        style: {\n          textDecoration: 'none',\n          cursor: 'pointer',\n          whiteSpace: 'normal',\n          textAlign: 'left',\n          lineHeight: '24px'\n        }\n      }, message);\n      this.$bkInfo({\n        type: 'warning',\n        subHeader,\n        width: 440,\n        okText: this.$t('store.已确认兼容新增参数，继续'),\n        confirmFn\n      });\n    },\n    atomOs(os) {\n      const target = [];\n      os.forEach(item => {\n        target.push(this.osMap[item]);\n      });\n      return target.join('，');\n    },\n    toggleShow() {\n      this.isDropdownShow = !this.isDropdownShow;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/views/release_progress.vue?vue&type=script&lang=js\n /* harmony default export */ const views_release_progressvue_type_script_lang_js = (release_progressvue_type_script_lang_js); \n// EXTERNAL MODULE: ../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-3.use[0]!./node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/dist/cjs.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./src/views/release_progress.vue?vue&type=style&index=0&id=5691fff8&prod&lang=scss&scoped=true\nvar release_progressvue_type_style_index_0_id_5691fff8_prod_lang_scss_scoped_true = __webpack_require__(4744);\n;// CONCATENATED MODULE: ./src/views/release_progress.vue?vue&type=style&index=0&id=5691fff8&prod&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ../node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(7658);\n;// CONCATENATED MODULE: ./src/views/release_progress.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.A)(\n  views_release_progressvue_type_script_lang_js,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5691fff8\",\n  null\n  \n)\n\n/* harmony default export */ const release_progress = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5418\n");

/***/ }),

/***/ 2137:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEzNy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGV2b3BzLWF0b21zdG9yZS8uLi9ub2RlX21vZHVsZXMvanMtY29va2llL2Rpc3QvanMuY29va2llLm1qcz8wMjJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBqcy1jb29raWUgdjMuMC41IHwgTUlUICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbmZ1bmN0aW9uIGFzc2lnbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXZhciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbnZhciBkZWZhdWx0Q29udmVydGVyID0ge1xuICByZWFkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAodmFsdWVbMF0gPT09ICdcIicpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMSwgLTEpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvKCVbXFxkQS1GXXsyfSkrL2dpLCBkZWNvZGVVUklDb21wb25lbnQpXG4gIH0sXG4gIHdyaXRlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKS5yZXBsYWNlKFxuICAgICAgLyUoMlszNDZCRl18M1tBQy1GXXw0MHw1W0JERV18NjB8N1tCQ0RdKS9nLFxuICAgICAgZGVjb2RlVVJJQ29tcG9uZW50XG4gICAgKVxuICB9XG59O1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG5cbmZ1bmN0aW9uIGluaXQgKGNvbnZlcnRlciwgZGVmYXVsdEF0dHJpYnV0ZXMpIHtcbiAgZnVuY3Rpb24gc2V0IChuYW1lLCB2YWx1ZSwgYXR0cmlidXRlcykge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBhdHRyaWJ1dGVzID0gYXNzaWduKHt9LCBkZWZhdWx0QXR0cmlidXRlcywgYXR0cmlidXRlcyk7XG5cbiAgICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMuZXhwaXJlcyA9PT0gJ251bWJlcicpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IG5ldyBEYXRlKERhdGUubm93KCkgKyBhdHRyaWJ1dGVzLmV4cGlyZXMgKiA4NjRlNSk7XG4gICAgfVxuICAgIGlmIChhdHRyaWJ1dGVzLmV4cGlyZXMpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IGF0dHJpYnV0ZXMuZXhwaXJlcy50b1VUQ1N0cmluZygpO1xuICAgIH1cblxuICAgIG5hbWUgPSBlbmNvZGVVUklDb21wb25lbnQobmFtZSlcbiAgICAgIC5yZXBsYWNlKC8lKDJbMzQ2Ql18NUV8NjB8N0MpL2csIGRlY29kZVVSSUNvbXBvbmVudClcbiAgICAgIC5yZXBsYWNlKC9bKCldL2csIGVzY2FwZSk7XG5cbiAgICB2YXIgc3RyaW5naWZpZWRBdHRyaWJ1dGVzID0gJyc7XG4gICAgZm9yICh2YXIgYXR0cmlidXRlTmFtZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICBpZiAoIWF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0pIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc3RyaW5naWZpZWRBdHRyaWJ1dGVzICs9ICc7ICcgKyBhdHRyaWJ1dGVOYW1lO1xuXG4gICAgICBpZiAoYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXSA9PT0gdHJ1ZSkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyBDb25zaWRlcnMgUkZDIDYyNjUgc2VjdGlvbiA1LjI6XG4gICAgICAvLyAuLi5cbiAgICAgIC8vIDMuICBJZiB0aGUgcmVtYWluaW5nIHVucGFyc2VkLWF0dHJpYnV0ZXMgY29udGFpbnMgYSAleDNCIChcIjtcIilcbiAgICAgIC8vICAgICBjaGFyYWN0ZXI6XG4gICAgICAvLyBDb25zdW1lIHRoZSBjaGFyYWN0ZXJzIG9mIHRoZSB1bnBhcnNlZC1hdHRyaWJ1dGVzIHVwIHRvLFxuICAgICAgLy8gbm90IGluY2x1ZGluZywgdGhlIGZpcnN0ICV4M0IgKFwiO1wiKSBjaGFyYWN0ZXIuXG4gICAgICAvLyAuLi5cbiAgICAgIHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnPScgKyBhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdLnNwbGl0KCc7JylbMF07XG4gICAgfVxuXG4gICAgcmV0dXJuIChkb2N1bWVudC5jb29raWUgPVxuICAgICAgbmFtZSArICc9JyArIGNvbnZlcnRlci53cml0ZSh2YWx1ZSwgbmFtZSkgKyBzdHJpbmdpZmllZEF0dHJpYnV0ZXMpXG4gIH1cblxuICBmdW5jdGlvbiBnZXQgKG5hbWUpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJyB8fCAoYXJndW1lbnRzLmxlbmd0aCAmJiAhbmFtZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXlcbiAgICAvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC5cbiAgICB2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdO1xuICAgIHZhciBqYXIgPSB7fTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwYXJ0cyA9IGNvb2tpZXNbaV0uc3BsaXQoJz0nKTtcbiAgICAgIHZhciB2YWx1ZSA9IHBhcnRzLnNsaWNlKDEpLmpvaW4oJz0nKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGZvdW5kID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzBdKTtcbiAgICAgICAgamFyW2ZvdW5kXSA9IGNvbnZlcnRlci5yZWFkKHZhbHVlLCBmb3VuZCk7XG5cbiAgICAgICAgaWYgKG5hbWUgPT09IGZvdW5kKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZSkge31cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZSA/IGphcltuYW1lXSA6IGphclxuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5jcmVhdGUoXG4gICAge1xuICAgICAgc2V0LFxuICAgICAgZ2V0LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAobmFtZSwgYXR0cmlidXRlcykge1xuICAgICAgICBzZXQoXG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICAnJyxcbiAgICAgICAgICBhc3NpZ24oe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgICAgICAgIGV4cGlyZXM6IC0xXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICB3aXRoQXR0cmlidXRlczogZnVuY3Rpb24gKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIGluaXQodGhpcy5jb252ZXJ0ZXIsIGFzc2lnbih7fSwgdGhpcy5hdHRyaWJ1dGVzLCBhdHRyaWJ1dGVzKSlcbiAgICAgIH0sXG4gICAgICB3aXRoQ29udmVydGVyOiBmdW5jdGlvbiAoY29udmVydGVyKSB7XG4gICAgICAgIHJldHVybiBpbml0KGFzc2lnbih7fSwgdGhpcy5jb252ZXJ0ZXIsIGNvbnZlcnRlciksIHRoaXMuYXR0cmlidXRlcylcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGF0dHJpYnV0ZXM6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoZGVmYXVsdEF0dHJpYnV0ZXMpIH0sXG4gICAgICBjb252ZXJ0ZXI6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoY29udmVydGVyKSB9XG4gICAgfVxuICApXG59XG5cbnZhciBhcGkgPSBpbml0KGRlZmF1bHRDb252ZXJ0ZXIsIHsgcGF0aDogJy8nIH0pO1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuZXhwb3J0IHsgYXBpIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2137\n");

/***/ })

}]);
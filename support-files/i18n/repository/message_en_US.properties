2115001=Failed to create GIT code base. Please try again later.
2115002=Failed to update GIT code base. Please try again later.
2115003=Failed to add member {0} in GIT code. Please try again later
2115004=Failed to migrate code base to {0} project group. Please try again later.
2115005=Failed to delete member {0} from GIT code base. Please try again later
2115006=Invalid GIT warehouse
2115007=Invalid TGIT warehouse
2115008=Invalid SVN warehouse
2115009=Invalid GITHUB warehouse
2115010=Get credential exception
2115011=User private key is empty
2115012=Unauthorized access to the code repository
2115013=The code warehouse path is incorrect. The warehouse path should start with {0}
2115014=Code base alias {0} already exists
2115015=User ({0}) does not have code base ({2}) view permission under project ({1})
2115016=User ({0}) does not have code base ({2}) edit permission under project ({1})
2115017=User ({0}) does not have permission to delete code base ({2}) under project ({1})
2115018=Code base {0} does not support locking
2115019=Code base type {0} does not require authentication
2115020=Failed to create tag
2115021=Invalid p4 warehouse
2115022=Code base {0} does not exist
2115023=User {0} does not have permission to create a code base under project {1}
2115024=Warehouse ID and warehouse name are empty
2115025=User ({0}) does not have ({1}) project permissions
2115026=The user [{0}] has not been authorized by OAUTH, please authorize it first.
2115027=Cannot switch repository url
2115028=Failed to enabled repository pac
2115029=Failed to disable repository pac,ci folder exists on the default branch
2115030=Failed to enable PAC, possible reasons are:\n\
  1) The repository [{0}] does not exist, please confirm whether the repository has been deleted\n\
  2) The authorizer [{1}] does not have access rights to the repository, \
  please reset authorization before enabling PAC
2115031=The repository has already enabled PAC in project [{0}]
2115032=The repository has not enabled PAC
2115033=To enable PAC, you need to use OAuth authorization type.
2115034=The repository member {0} does not exist
2115035=Enabling PAC requires the OAuth user [{0}] of the code repository to have repository access at or above the 'master' level.
2115036=The code repository has not been initialized, and there is no branch information. Please initialize the code repository before enabling PAC.
2115037=The repository has already enabled pac
2115038=The code repository has PAC enabled and cannot be deleted
2115039=The code repository has PAC enabled and cannot be renamed
2115040=Unable to edit the repository associated with the plugin
2115041=Unable to delete the repository associated with the plugin
2115042=User Have not used oauth
2115043=User ({0}) does not have pull access to the (<a href="{1}" target="_blank">{2}</a>) repository
2115044=User [{0}] has not authorized Github Oauth yet. Please authorize first
2115045=({0}) type of code repository does not currently support OAUTH authorization
2115049=OAuth auth info occupied, can't delete
2100054=User ({0}) does not have permission to {2} repository {3} under project ({1}).
2115048=Failed to get open copilot token, failure details: {0}
2115050=No code change record
2115051=The current repository does not support generating AI summarie
2115052=The webhook parsing result should not have an empty fullName
2115053=The code source provider {0} does not exist
2115054=The code source {0} does not exist
2115055=Unsupported authorization type: {0} by the code source provider.
2115056=Scm proxy service [{0}] not found.
2115057=The method [{0}] does not exist in the scm proxy service [{0}]
2115058=Unsupported code source provider type: {0}
2115059=Unsupported credential type: {0}
2115060=The code source [{0}] is already associated with a code repository and cannot be deleted
2115061=Unsupported repository authentication method
2115062=Only Git repositories are supported for enabling PAC
bkRequestFileSizeLimit=The request file cannot exceed 1m
OperationAddCheckRuns=Add a detection task
OperationUpdateCheckRuns=Update the detection task
OperationGetRepos=Get a list of repositories
OperationGetBranch=Gets the specified branch
OperationGetTag=Gets the specified Tag
OperationListBranchs=Get a list of branches
OperationListTags=Get the list of Tags
trigger.condition.branchName=branches
trigger.condition.excludeBranchName=branches-ignore
trigger.condition.includePaths=paths
trigger.condition.excludePaths=paths-ignore
trigger.condition.includeUsers=users
trigger.condition.excludeUsers=users-ignore
trigger.condition.tagName=tags
trigger.condition.excludeTagName=tags-ignore
trigger.condition.fromBranches=from-branches
trigger.condition.includeSourceBranchName=source-branches
trigger.condition.excludeSourceBranchName=source-branches-ignore
trigger.condition.relativePath=relativePath
trigger.condition.includeCrState=review state
trigger.condition.includeCrState.approving=approving
trigger.condition.includeCrState.approved=approved
trigger.condition.includeCrState.change_denied=change_denied
trigger.condition.includeCrState.change_required=change_required
trigger.condition.includeNoteComment=note comment
trigger.condition.includeNoteTypes=note type
trigger.condition.includeNoteTypes.Commit=commit
trigger.condition.includeNoteTypes.Review=merge_request
trigger.condition.includeNoteTypes.Issue=issue
trigger.condition.includeIssueAction=issue action 
trigger.condition.includeIssueAction.open=open
trigger.condition.includeIssueAction.close=close
trigger.condition.includeIssueAction.reopen=reopen
trigger.condition.includeIssueAction.update=update
trigger.condition.action=action
trigger.condition.action.open=open
trigger.condition.action.close=close
trigger.condition.action.reopen=reopen
trigger.condition.action.push-update=push-update
trigger.condition.action.merge=merge
trigger.condition.skip-wip=skip-wip
trigger.condition.skip-wip.true=enable
trigger.condition.skip-wip.false=disable
CREDENTIAL_TYPE_ACCESSTOKEN=AccessToken
CREDENTIAL_TYPE_USERNAME_PASSWORD=username+password
CREDENTIAL_TYPE_SSH_PRIVATEKEY=SSH PRIVATEKEY
CREDENTIAL_TYPE_TOKEN_SSH_PRIVATEKEY=SSH PRIVATEKEY + PRIVATE_TOKEN
CREDENTIAL_TYPE_TOKEN_USERNAME_PASSWORD=USERNAME_PASSWORD + PRIVATE_TOKEN

2101001=パイプライン: サブパイプラインIDが存在しません
2101002=パイプライン: サブパイプラインが存在しません
2101003=パイプライン: 同時に保存できるビューは最大7個までです
2101004=パイプライン: ビュー({0})が存在しません
2101005=パイプライン: ビュー({0})が既に存在します
2101006=パイプライン: ユーザー({0})にビュー({1})を削除する権限がありません
2101007=パイプライン: パイプラインリストの長さは100を超えることはできません
2101008=パイプライン: ユーザーに{0}権限がありません
2101009=パイプライン: パイプラインの渠道ソースが({0})に合致しません
2101010=パイプライン: プラグインが存在しません
2101011=パイプライン: パイプラインModelが不合法です
2101012=パイプライン: パイプラインに異常が発生しました:{0}
2101013=パイプライン名称が既に使用されています
2101014=パイプライン: テンプレートパイプラインは編集をサポートしていません
2101015=パイプライン: パイプライン名称が長すぎます
2101016=パイプライン: パイプラインが既に存在します
2101017=パイプライン: 品質ゲートでブロックされたタスク[{0}]が存在しません
2101018=パイプライン: ユーザー({0})は審査担当者のリストに含まれていません
2101019=パイプライン: パイプラインが{0}によって構築がキャンセルされました。{1}秒後に再試行してください
2101020=パイプライン: 構築を頻繁に起動することはできません
2101021=パイプライン: このパイプラインは手動で起動できません
2101022=パイプライン: このパイプラインはリモートトリガーで起動できません
2101023=パイプライン: WebhookのIDと名称が同時に空です
2101024=パイプライン: 復元するパイプラインが存在しません。削除されたか、すでに復元されている可能性があります
2101025=パイプライン: StageにJobが不足しています
2101026=パイプライン: 管理者のみがテンプレートを操作できます
2101027=パイプライン: パイプライン設定が存在しません
2101028=パイプライン: テンプレート名が空文字列です
2101029=パイプライン: パイプライン変数パラメータと定数が同名です
2101030=パイプライン: テンプレート名が既に存在します
2101031=パイプライン: テンプレートにインスタンスがまだ存在しているため、削除できません
2101032=パイプライン: 研发现屋に関連付けられています。先に下架してから削除してください
2101033=テンプレートが他のプロジェクトにインストールされて使用されているため、削除できません
2101034=パイプライン: テンプレートが存在しません
2101035=パイプライン: ソーステンプレートが存在しません
2101036=パイプライン: パイプラインテンプレートパラメータの列挙に失敗しました
2101037=パイプライン: パイプラインは1つのトリガーStageのみを含めることができます
2101038=パイプライン: パイプラインが存在しません
2101039=パイプライン: パイプラインのモデルが存在しません
2101040=パイプライン: パイプラインのモデルで指定された構築コンテナ{0}が存在しません
2101041=パイプライン: パイプラインのタイムトリガーの保存に失敗しました
2101042=パイプライン: Jobには少なくとも1つのタスクプラグインが必要です
2101043=パイプライン: パイプライン{0}のタイムトリガーの削除に失敗しました
2101044=SVNはTagをサポートしていません
2101045=リポジトリIDが空です
2101046=リポジトリ名が空です
2101047=パイプライン: パイプラインがロックされています
2101048=パイプライン: タイムトリガーのタイムパラメータが不合法です
2101049=パイプライン: パイプラインキューが満杯です
2101050=パイプライン: ユーザー({0})はプロジェクト({1})下でパイプライン{2}の権限を持っていません
2101051=モデルで商店イメージを使用していますが、codeが空です
2101052=モデルで商店イメージを使用していますが、versionが空です
2101053=商店BlueKing CI源/第三方源以外のイメージvalueは空にできません
2101054=変数名[{0}]は英文字母、数字、アンダーバーのみ使用可能で、先頭文字は数字で始めることはできません
2101055=Stage[{0}]の准入設定が正しくありません
2101056=パイプラインの説明が長すぎます
2101057=タイムトリガーのタイムパラメータ[{0}]は秒単位でのトリガーはできません
2101058=パイプライン: 入力パラメータbuildIdとpipelineIdが一致しません
2101059=パイプライン内にプラグイン市場に存在しないプラグインが含まれています
2101060=ユーザー情報の取得に失敗しました
2101061=プロジェクトが存在しません
2101062=パイプライン: プラグイン[{0}]はこの環境下で実行できません
2101063=パイプライン: テンプレート下のパイプラインインスタンス{0}が更新中です。しばらくして再試行してください
2101064=パイプライン: 各Modelは1つのFinallyStageのみを含めることができ、かつ最後の位置に配置する必要があります
2101065=パイプライン: finallyStageのJob実行条件設定エラー: {0}
2101066=パイプライン: 通常stage下の[{0}]Job実行条件設定エラー: {0}
2101067=パイプライン: Model情報が不完整で、Stage[{0}] Job[{1}]下にプラグインがありません
2101068=パイプライン: パイプラインモデルが上限を超えました。閾値は[{0}]文字です。发布者に連絡してください
2101069=パイプライン: パイプライン下[{0}]の[{1}]数量が上限を超えました。閾値は[{2}]個です。发布者に連絡してください
2101070=パイプライン: プラグイン[{0}]のパラメータ[{1}]値が上限を超えました。閾値は[{2}]文字です。发布者に連絡してください
2101071=パイプライン: final stageが実行中であるため、キャンセルできません
2101072=Stage[{0}]の審査グループ[{1}]に実行者が未設定です
2101073=Stage[{0}]の審査グループID[{1}]が存在しません
2101074=Stage[{0}]の准入准出識別子[{1}]が正しくありません
2101075=パイプライン起動準備に失敗しました{0}
2101076=このテンプレートは更新できません
2101077=リポジトリIDとリポジトリ名が同時に空です
2101078=テンプレートのバージョン数量は{0}個を超えることはできません
2101079=テンプレートインスタンス更新数量[{0}]がシステム規定の最大値[{1}]を超えました。パラメータを調整するか、アシスタントに相談してください
2101080=プロジェクト[{0}]が無効化されています。起動できません
2101081=構築データが期限切れです。rebuildを使用して再試行してください
2101082=Stage審査パラメータ{0}が4000文字の長さ制限を超えました
2101083=このパイプラインバージョンにまだ構築記録が存在しているため、削除できません
2101084=Job[{0}]のタイムアウト設定のパイプライン変数[{1}]値[{2}]が合理的範囲[{3}](分)を超えました
2101085=Job[{0}]のプラグイン[{1}]のタイムアウト設定パイプライン変数[{2}]値[{3}]が合理的範囲[{4}](分)を超えました
2101086=Job[{0}]の互斥グループ[{1}]タイムアウト設定のパイプライン変数[{2}]値[{3}]が合理的範囲[{4}](分)を超えました
2101087=無効なGITリポジトリです
2101088=無効なTGITリポジトリです
2101089=無効なSVNリポジトリです
2101090=無効なGITHUBリポジトリです
2101091=無効なp4リポジトリです
2101092=コードリポジトリ{0}が存在しません
2101093=コードリポジトリ({0})はsvnコードリポジトリではありません
2101094=Svnディレクトリの取得に失敗しました。msg:{0}
2101095=パイプラインのタイムトリガーの追加保存に失敗しました！タイマーパラメータが長すぎる可能性があります！
2101096=キュー中: 現在の構築がキュー中です
2101097=Job[{0}]のマトリックスYAML設定エラー: {1}
2101098={0} は {1} パイプラインではありません
2101099=対応するパイプラインが見つかりません
2101100=サブパイプラインは循環呼び出しを許可しません。循環パイプライン:projectId:{0},pipelineId:{1}
2101101=このプロジェクトで最大{0}本のパイプラインを作成できます
2101102=パイプライン: 3回の再試行に失敗しました
2101103=パイプライン: 更新に失敗しました: {0}
2101104=パイプライン: {0}はプロジェクト{1}の管理者ではありません
2101105=キュー中: 現在の構築が並列グループ({0})でキュー中です
2101106=プラグインのインストールに失敗しました
2101107=一時停止したパイプラインが実行を開始しました
2101108=パイプライン: Stage[{0}]が審査待ち状態ではありません
2101109={0} elementのサイズが境界を超えました
2101110=jobが完了状態ではないため、再試行できません
2101111=キュー待ち時間オーバー。実行をキャンセルします! [{0}]
2101112=品質ゲート(准出)検出に失敗しました
2101113={0}の実行が({1})分に達しました。タイムアウトで実行を終了します!
2101114=stageが失敗状態ではないため、再試行できません
2101115=Job実行のカスタム変数を設定してください
2101116=バックエンドサービスタスクの実行にエラーが発生しました
2101117= バックエンドサービスの実行にエラーが発生しました
2101118=プロジェクト {0} 下で{1}ビュー{2}が見つかりません
2101119=環境名が初期化されていません
2101120=環境IDが初期化されていません
2101121=以下の環境名が存在しません。パイプラインを再修正してください！
2101122=ユーザーがこれらの環境を操作する権限がありません！環境:
2101123=以下の環境idが存在しません。パイプラインを再修正してください！id:
2101124=サポート 目標環境タイプ: {0}
2101125=パイプライングループのビュー範囲が一致しません
2101126=パイプライングループの作成が上限に達しました
2101127=パイプライングループ名称が重複しています: {0}
2101128=パイプライングループ名称が不合法です
2101129=パイプライン: 現在の構築が実行中です。再試行の請求を重複して送信しないでください
2101130=品質ゲート(准入)検出に失敗しました
2101131=Excel形式が間違っています、またはファイルが存在しません
2101132=コールバックのurlが非法です
2101133=ユーザー（{0}）に（{1}）プロジェクトの権限がありません
2101134=コールバックの履歴({0})が存在しません
2101135=コールバック再試行に失敗しました
2101136=コールバック記録({0})が存在しません
2101137=callbackの作成に失敗しました。失敗原因:{0}
2101138=パイプライン: パイプラインタイムトリガー時にコードに変更がありません
2101139=異常: パイプラインの基礎構築データSummaryが存在しません。管理者に連絡してください
2101140=リリースが拒否されました。このバージョンは最新バージョンよりも古いためです
2101141=パイプライン: 再開待ち構築{0}が再開中です
2101142= 最大キュー数量が非法です
2101143=パイプライングループを修正する権限がありません
2101144=変数名[{0}]のソースが一意ではありません。変数名を修正するか、プラグイン出力名前空間を追加してください: {1}
2101145=({0})と({1})のjobIdが循環依存しています
2101146=({0})のjobId({1})が既に存在します
2101147=最大キュー待ち時間が非法です
2101148=説明
2101149=手動トリガー
2101150=スケジュールトリガー
2101151=リモートトリガー
2101152=webhookトリガー
2101153=サービストリガー
2101154=パイプライントリガー
2101155=構築情報の説明
2101156=その他の構築プロセスがクラッシュした場合の参考情報。ログに出力するために自由に追加できます
2101157=<a href="/console/environment/{0}/node/nodeDetail/{1}">Agent詳細を見る/Agent Detail</a>'
2101158=構築トリガー
2101159=構築プロセスのハートビートが{0}秒オーバーしました \n 可能な原因: \n 1. 構築機のネットワークが不通です。構築機のネットワークプロキシ、または所属企業のセキュリティ認証セッションが期限切れかどうかを確認してください。 \n 2. 業務構築プロセスがオペレーティングシステムまたはその他のプログラムによって終了されました。負荷を軽減して再試行してください。\n 3. その他の参考リンク[Link] その他の構築プロセスがクラッシュした場合の参考情報。ログに出力するために自由に追加できます\n 4. プラットフォームレベルの故障により大規模なタイムアウトが発生しました。
2101160=1つのプロジェクトタググループは10個を超えることはできません
2101161=同一グループ下で最大12個のタグを追加できます
2101162=1つのタグに最大20文字を入力できます
2101163=パイプライン構築[{0}]が存在しません
2101164=パイプライン[{0}]が存在しません
2101165=サブパイプライン循環呼び出し
2101166=構築中Stage[{0}]が存在しません
2101167=構築中Stage[{0}]が審査待ち状態ではありません
2101168=実行条件式の解析に失敗しました
2101169=トリガー審査が承認されませんでした
2101170=トリガーが審査状態ではありません
2101171=リモートトリガーtokenの生成に失敗しました
2101172=対応するサブパイプラインの構築記録が見つかりません
2101173=対応するサブパイプラインが見つかりません
2101174=ユーザー（{0}) にパイプライン({1})の情報({2})を取得する権限がありません
2101175=サブパイプラインパラメータのフィルタリングに失敗しました
2101176=テンプレート下に権限のないプラグインが存在します
2101177=パイプライン編成数量が非法です
2101178=最大並列数量が非法です
2101179=プラグイン{0}のパイプライン情報にアクセスする権限がありません。コンポーネント管理者に連絡してください
2101180=グループ({0})が既に存在します
2101181=グループタグ({0})が既に存在します
2101182=パイプライン: パイプライン構築が終了しました。操作できません
2101183=ユーザーがテンプレートを操作する権限がありません

2101184=パイプラインバージョン({0})が存在しません
2101185=このパイプラインに下書きバージョンが存在しません
2101186=YAMLに変換する際に異常が発生しました
2101187=定数({0})の取り値が空です
2101188=パイプラインYAMLファイルの拡張子{0}が正しくありません
2101189=パイプラインのstageが空です
2101190=このバージョンは実行できません

2101191=トリガー詳細{0}が存在しません
2101192=トリガーイベント{0}が存在しません
2101193=トリガータイプ{0}はリプレイをサポートしていません
2101194=リプレイパイプラインIDが空ではありません
2101195=Webhook {0} が存在しません

2101196=gitプロジェクト情報の取得に失敗しました
2101197=mr情報の取得に失敗しました
2101198=mr審査情報の取得に失敗しました
2101199=mr変更情報の取得に失敗しました
2101200=gitファイルツリーの取得に失敗しました
2101201=yamlファイル内容の取得に失敗しました
2101202=ファイル情報の取得に失敗しました
2101203=REBASEまたはMERGEを実行して、遠隔目標ブランチからYAMLを更新してください
2101204=DEVNETゲートウェイへの請求がタイムアウトしました
2101205=未知のエラーです
2101206=PACモードを有効化したことにより自動作成されました。手動での修正と削除をサポートしていません
2101207=PACモードを有効化したことにより自動作成されました。パイプラインの手動追加/削除をサポートしていません
2101208=PACモードを有効化したことにより自動作成されました。パイプラインの削除はコードリポジトリで操作してください
2101209=commit情報の取得に失敗しました
2101210=PACモードが既に有効化されています。コードリポジトリのデフォルトブランチ上のyamlファイルを先に削除し、次にパイプラインを削除してください
2101211=yamlファイル内容が空です
2101212=yamlファイル形式が間違っています。yaml、ymlの拡張子と1階層のサブディレクトリのみをサポートしています
2101213=パイプラインがファイル{0}にバインドされています。修正できません
2101214=パイプラインがコードリポジトリ{0}にバインドされています。修正できません
2101215=YAMLファイル[{0}]が既に存在します。関連付けられたパイプラインは[{1}]です
2101216=リリースにはコードリポジトリのdeveloper以上の権限が必要です
2101217=デフォルトブランチが存在しません。コードリポジトリを先に初期化してください
2101218=現在のコードリポジトリ関連人({0})がOAUTH認証を行っていません。コードリポジトリの認証タイプを切り替えてみてください
2101219=正式バージョンと比較して更新がありません。確認してください
2101221=taskをスキップすることは許可されません
2101230=通知タイプの設定が正しくありません。確認してください
2101231=通知内容が空です。確認してください
2101232={0}でパイプライン構築機の再利用互斥グループを使用するには、具体的なJobIdを宣言する必要があり、空にできません
2101233=パイプライン構築機再利用互斥グループノード {0} が再利用する {1} が存在しません、または第三方構築機ノードではありません
2101234= {0} 下で、構築機再利用互斥グループノード {1} と再利用する {2} ノードのスケジュールタイプが異なります。AgentIdとAgentEnvは互いに再利用できません
2101235=ブランチの作成に失敗しました: {0}
2101236=ユーザー[{0}]にコードリポジトリ[{1}]のブランチ作成権限がありません
2101237=ファイルの作成に失敗しました: {0}
2101238=ユーザー[{0}]にコードリポジトリ[{1}]のファイル作成権限がありません
2101239=mrの作成に失敗しました: {0}
2101240=ユーザー[{0}]にコードリポジトリ[{1}]のmr作成権限がありません
2101241=工蜂コードリポジトリ[{0}]が存在しません、またはアクセス権限がありません
2101242=工蜂サービスに異常が発生しました
2101243=タイムトリガーSVNブランチが空です
2101244={0}
2101245=タイムトリガーコードリポジトリが存在しません
2101246=タイムトリガー[PAC監視]の設定が不合法です。現在のパイプラインはPACを有効化していません
2101247=タイムトリガーブランチが空です
2101248=タイムトリガーブランチ[{0}]に変更がありません
2101249=タイムトリガーブランチ[{0}]が存在しません
2101250=パイプラインJob:{0}のjobIdが空であるか、長さが{1}桁を超えています
2101251=パイプラインJob:{0}の単一ノードまたは合計ノードの並列設定は1000未満の正の整数である必要があります
2101252=タイムトリガーブランチ[{0}]に未知のエラーが発生しました
2101253=[{0}]の条件式の長さが{1}桁を超えました
2101254=構築入力パラメータ[{0}]は必須で、空にできません
2101255=構築機を重複起動しました。現在の構築機の状態は：{0}
2101256=パイプライン変数{0}の値が4000文字の長さ制限を超えました
2101257= {0} 下で、構築機再利用互斥グループノード {1} と再利用する {2} ノードの前後の順序が不明です。変数を使用するには前後の順序を明確にする必要があります
2101258=構築データが期限切れです。再試行時間は構築開始時間{0}日以上後にすることはできません
2101259=目標ブランチが空です
2101260=サポートされていないブランチコミットタイプです
2101266=現在の構築バージョンは最新バージョンではありません。バージョンを再選択してください
2101267=コードリポジトリ情報が空です
2101268=トリガーイベントメッセージ本体が存在しません
2101269=デフォルトブランチファイル[{0}]が削除されました。先にデフォルトブランチを同期してください
2101270=PACを有効化できるのはgitタイプのコードリポジトリのみです
2101271=ユーザー [{0}] に倉庫 [{1}] のPUSH権限がありません
2101272=同じトリガーパラメータですが、現在のパイプライン最新バージョン {0} のトリガー条件を満たしていません。継続的に実行するとエラーが発生する可能性があります。続行してもよろしいですか
2101273=stageが実行中状態ではないため、プラグインレベルの再試行できません
2101274=パラメータ[{0}]の値がシステム制限(4K)を超えました。起動に失敗しました
2101275=処理するパイプライン数量[{0}]がシステム規定の最大値{1}を超えました。パラメータを調整するか、アシスタントに相談してください
2101276=パイプライン[{0}]が実行中です。アーカイブできません
2101277=再試行するプラグインが失敗またはキャンセル状態ではないため、再試行できません
2101279=プラグイン【ID:{0}】が存在しないか、審査可能状態ではありません
2101280=ユーザー [{0}] に倉庫 [{1}] の推送権限がありません。倉庫管理者に権限を追加するよう依頼してください
2101281=構築備考は最大{0}文字入力できます
2101282=構築状態を一括取得するbuildId数量は{0}を超えることはできません
2101286=コールバックリンクに高危険なポート番号 [{0}] が存在します
ATOM_POST_EXECUTE_TIP=###Tip:this is the post-action hooked by [step{0}]{1}###
ci.build-no=構築番号。推奨バージョン番号を有効化した場合に有効です
ci.build_num=現在の構築の唯一の識別ID。1から順に増加します
ci.build_msg=構築情報。最大128文字。取り値規則：<br/>- Pushイベント：commit message<br/>- Mrイベント：Mr title<br/>- Noteイベント：コメント内容<br/>- Issueイベント：Issueタイトル<br/>- Crイベント：Cr title<br/>- Tagイベント：Tag name<br/>- 手動トリガー：トリガー時にページで入力した構築情報
ci.pipeline_creator=パイプライン作成者
ci.pipeline_modifier=パイプライン最新修正者
ci.pipeline_version=パイプラインバージョン番号
ci.project_name=プロジェクト名
ci.build_id=現在の構築ID
ci.pipeline_id=パイプラインID
ci.pipeline_name=パイプライン名
ci.project_id=プロジェクトID。プロジェクトの唯一の識別子
ci.build_start_type=構築起動方式。可能な値は MANUAL、TIME_TRIGGER、WEB_HOOK、SERVICE、PIPELINEまたはREMOTEです
ci.actor=現在の構築の起動人
ci.workspace=現在のJobのワークスペース
ci.failed_tasknames=パイプライン実行に失敗したすべてのTASK。値の形式：TASK別名,TASK別名,TASK別名
ci.failed_tasks=パイプライン実行に失敗したすべてのTASK。値の形式：[STAGE別名][JOB別名]TASK別名。複数の並列JOBが失敗した場合、改行(\\n)で区切ります
ci.remark=パイプライン備考。スクリプトプラグインでecho ::set-remark xxxの方式で値を設定できます
# Stepパラメータ
step.name=step名称
step.name.remark=省略時、対応するプラグインの名称となります
step.id=現在のプラグインTASK ID。32桁。グローバル唯一
step.id.remark=システムが自動生成します(e-から始まります)
step.retry-count-manual=現在のステップの手動再試行回数
step.retry-count-auto=現在のステップの自動再試行回数
steps.<step-id>.status=stepの状態。可能な取り値は: SUCCEED/FAILED/CANCELED/SKIPです
steps.<step-id>.status.remark=continue-on-error=trueでstep実行が失敗した場合、status=SUCCEED, outcome=FAILEDとなります。下流のステップでのみ取得できます
steps.<step-id>.outcome=stepの結果。可能な取り値は: SUCCEED/FAILED/CANCELED/SKIPです
steps.<step-id>.outcome.remark=continue-on-error=trueでstep実行が失敗した場合，status=SUCCEED, outcome=FAILEDとなります。下流のステップでのみ取得できます
# Jobパラメータ
job.name=job名称
job.name.remark=省略時、設定順序に従ってjob-1、job-2……job-Nとなります
job.id=現在のpipeline下のjobの唯一の識別子
job.id.remark=ユーザーがカスタム識別子を設定する場合、独自に一意性を保証してください。省略時、システムが組み込み生成します
job.os=現在のjobが実行されるマシンのオペレーティングシステム: LINUX/WINDOWS/MACOS
job.container.network=現在のjobが属するネットワークエリア。可能な取り値は: IDC/DEVNET/OAです
job.container.node_alias=第三方構築機クラスターを使用する場合に有効です。現在のjobがスケジュールされたノード別名
job.stage_id=jobが属するstage id
job.stage_name=jobが属するstage name
job.index=matrix job下で、0から始まるインデックスです。matrix jobが解析された順序に関係があります
job.index.remark=indexに基づいてmatrix job下の指定jobの具体的ステップ出力を取得できます
jobs.<job-id>.status=現在のjobの状態。可能な取り値は: SUCCEED/FAILED/CANCELED/SKIPです
jobs.<job-id>.status.remark=continue-on-error=trueでjob実行が失敗した場合，status=SUCCEED, outcome=FAILEDとなります。下流のステップでのみ取得できます
jobs.<job-id>.outcome=現在のjobの結果。可能な取り値は: SUCCEED/FAILED/CANCELED/SKIPです
jobs.<job-id>.outcome.remark=continue-on-error=trueでjob実行が失敗した場合，status=SUCCEED, outcome=FAILEDとなります。下流のステップでのみ取得できます

BUILD_NUM_RULE_STYLE=BUILD_NUM_RULE_STYLEカスタム構築番号規則は【大文字と小文字のアルファベット、数字、スペース、-、_、.、:、{、}、(、)、"、+、?、$】の文字のみで構成できます。長さは1-256の間です
CONST_PROCESS_VIEW_LABEL_ALL=全パイプライン
CONST_PROCESS_VIEW_LABEL_FAVORITE=お気に入り
CONST_PROCESS_VIEW_LABEL_MY=私のパイプライン
CONST_PROCESS_VIEW_LABEL_PRIVATE=個人ビュー
CONST_PROCESS_VIEW_LABEL_PROJECT=プロジェクトビュー
CONST_PROCESS_VIEW_LABEL_SYSTEM=システムビュー
bkAdministrator=管理者
bkAuditResult=ステップ審査が終了しました。審査結果: [{0}]，審査人: {1}
bkAuditTimeout=審査タイムアウト
bkAutomaticExportNotSupported=### この環境では自動エクスポートをサポートしていません ###
bkAutomaticExportNotSupportedImage=### このイメージは現在自動エクスポートをサポートしていません ###
bkBeeCiNotSupport=工蜂CIはBlueKing CIの古いバージョンのプラグインをサポートしていません
bkBuildClustersThrough=### runs-on: macos-10.15 を使用してmacOS公共構築クラスターを使用できます。
bkBuildInReviewStatus=プロジェクト【{0}】下のパイプライン【{1}】#{2} 構築が審査待ち状態にあります
bkBuildInfo=構築情報
bkDetail=詳細
bkBuildStatus=構築状態
bkBuildVariables=構築変数
bkBuildVariablesValue=構築変数の値
bkBuildHistory=構築履歴
bkCheckFileCountAndVersion=ファイル数、バージョンを調べます:
bkCheckIntegrityYaml=YAMLの完全性を確認してください。または、研发现屋で推奨されるプラグインに切り替えてからエクスポートしてください
bkCheckOperatingSystemCorrect=存在する環境に手動で修正し、オペレーティングシステムが正しいかどうかを確認してください
bkCheckPoolField=JOB({0})のPoolフィールドを確認する必要があります
bkCheckTheWebData=web端データを調べます:
bkContinue=続行
bkComputerViewDetails={0}\n\nPCで詳細を見る: {1}\nスマホで詳細を見る: {2}
bkConstructionMachineNotSupported=# 注意: 現在のタイプの構築機をサポートしていません
bkContactPlugDeveloper=。プラグイン開発者に連絡してください
bkCreateResourceOperation=「リソースを作成」操作を開始します\n
bkCreateResourcesOperationParameters=「リソースを作成」操作パラメータ:
bkCreator=作成者
bkEmailNotificationContentEmpty=メール通知内容が空です
bkEmptyTitle=Message Title is empty(タイトルが空です)
bkEnterUrlAddressImage=###イメージ(TLinux2.2公共イメージ)のURLアドレスを直接入力してください。認証が必要な場合はcredentialsフィールドを追加してください###
bkExperiencePathEmpty=体験パスが空です
bkExport=のエクスポート,
bkExportSystemCredentials=# 注意: システム凭证(ユーザー名、パスワード)のエクスポートをサポートしていません。streamプロジェクト設定で再び凭据を追加してください！ \n
bkExportTime=# エクスポート時間:
bkFailedUploadFile=ファイルのアップロードに失敗しました:
bkFindRecommendedReplacementPlug=BlueKing CI研发现屋で推奨される置換プラグインを検索してください！
bkFirstStageEnvNotEmpty=第一ステージの環境が空ではありません
bkIdentifiedSensitiveInformation=# ①敏感情報と識別されました。エクスポートをサポートしていません\n
bkIncorrectNotificationMethod=通知方法が正しくありません
bkInvalidNotificationRecipient=通知受信者が不合法です:
bkMessageContentEmpty=Message Body is empty(メッセージ内容が空です)
bkMessageSubjectEmpty=メール主题が空です
bkModificationGuidelines=プラグイン開発者に連絡してプラグインを改造してください
bkMutexGroupSingleBuild=現在の互斥グループ[{0}]に同時に1つの構築タスクのみ実行できます。キューに入ります！
bkNoMatchFileDistribute=配布するファイルにマッチしません: {0}
bkNoRightExportPipeline=ユーザー({0})がプロジェクト({1})下でパイプラインをエクスポートする権限がありません
bkNodeNotExistUnderNewBusiness=# 注意: 【{0}】のノード【{1}】は新規ビジネス下で存在しない可能性があります，
bkNonTimedTriggerSkip=タイムトリガーではないため、直接スキップします
bkRetryTimedTriggerSkip=タイムトリガーを再試行します。直接スキップします
bkNotConfirmedCanExecuted=プラグイン {0} が工蜂CIで実行可能かどうかまだ確認されていません
bkNotExistUnderNewBusiness=# 注意: 【{0}】の環境【{1}】は新規ビジネス下で存在しない可能性があります，
bkNotSupportCurrentConstructionMachine=# 注意: 工蜂CIは現在のタイプの構築機を一時的にサポートしていません
bkNoteDefaultXcodeVersion=注意: デフォルトのXcodeバージョンは12.2です。カスタムが必要な場合は、JOB下でxcode-selectコマンドを実行して切り替えてください ###
bkOldPlugNotSupport=組み込みの古いプラグインはエクスポートをサポートしていません。市場のプラグインを使用してください ###
bkOnlyVisiblePcgBusiness=# 注意: 【{0}】はPCGビジネスのみに表示されます。現在のビジネスがPCGに属するかどうかを確認してください！ \n
bkOverrule=却下
bkTrigger=トリガー
bkOperationCompletedSuccessfully=バージョンをCDNにアップロードするタスクの状態を照会する 操作 が正常に実行されました\n
bkOperationParameters=\"動的リソースバージョンをアップロード\" 操作パラメータ：
bkParametersBeExported=# \n# tips: 一部のパラメータのエクスポートに[このフィールドのエクスポートを制限します。手動で入力してください]が存在します。手動で指定する必要があります。原因は以下の通りです:\n
bkPipelineName=パイプライン名
bkPipelinedId=# パイプラインID:
bkPleaseManuallyModify=存在するノードに手動で修正してください
bkPleaseUseStageAudit=人工審査プラグインはStage審査を使用してください ###
bkPlugNotSupported=# 注意: プラグイン【{0}({1})】のエクスポートをサポートしていません
bkPollingWaitForQualityResult=質量ゲートの結果を待つための{0}回目のポーリング
bkProcessingCurrentReportedTaskPleaseWait=現在報告されたタスクを処理中です。しばらくお待ちください。。。
bkPullGitWarehouseCode=Git倉庫のコードをプルします
bkQualityCheckIntercepted=品質ゲート({0})検出がブロックされました
bkQualityCheckResult=ゲート検出結果
bkQualityCheckSucceed=品質ゲート({0})検出が通過しました
bkQualityToBeReview=品質ゲート({0})審査待ち!審査人: {1}
bkQueryFavoritePipeline=お気に入りのパイプラインを照会します:
bkQueryPipelineInfo=パイプライン情報を調べます:
bkQueryVersionUpload=バージョンをCDNにアップロードするタスクの状態を照会する 操作を開始します\n
bkQuickApprovalMoa=【MOAで迅速承認】
bkQuickApprovalPc=【PCで迅速承認】
bkReceiverEmpty=Message Receivers is empty(受信者が空です)
bkRecipientEmpty=受信者が空です
bkRemoteCallSourceIp=今回のリモート呼び出しのソースIPは[{0}]です
bkResponseResult=プレリリースの単一または複数の渠道の応答結果:
bkSearchStore=研发现屋で新しいプラグインを検索して置換してください
bkSendWecomContent=企業微信の内容: ({0}) を {1} に送信します
bkSendWecomContentFailed=企業微信の内容: ({0}) を {1} に送信できませんでした:
bkSendWecomContentSuccessfully=企業微信の内容: ({0}) を {1} に正常に送信しました
bkSendWecomMessage=enterprise wechat messageを送信します(企業微信メッセージ):\n{0}\nto\n{1}
bkSensitiveInformationInParameters=# 注意: [プラグイン]の入力パラメータに敏感情報が含まれる可能性があります。必ず確認し、注意して共有してください！！！ \n
bkStartPerformingGcloudOperation=ファイル（{0}）にGcloud関連の操作を開始します。詳細はgcloud公式サイトで確認してください: 
bkStartReleaseOperation=プレリリース 操作を開始します\n
bkStartUploadOperation=「動的リソースバージョンをアップロード」操作を開始します
bkStreamNotSupport=# 注意: [プラグイン]StreamはBlueKing CIの古いバージョンのプラグインをサポートしていません。研发现屋で新しいプラグインを検索して置換してください \n
bkSuccessfullyDistributed=クロスプロジェクトコンポーネントの配布に成功しました。合計{0}個のファイルを配布しました
bkSuccessfullyFailed=クロスプロジェクトコンポーネントの配布に失敗しました,
bkTriggeredByGitEventPlugin=【Gitイベントトリガー】プラグインにて、MR Request Hookで【MRが同源同目標ブランチの場合、キューに最新のトリガータスクのみを保留】設定がオンになっているため、この度の構築は新たにトリガーされた構築によって
bkUnknownContextExists=# ②一部のフィールドの形式検証時に未知のコンテキストが存在します。エクスポートをサポートしていません\n
bkUserNoPipelineExecutePermissions=ユーザー（{0}) にパイプライン({1})の実行権限がありません
bkVersionExperienceCreatedSuccessfully=バージョン体験({0})が正常に作成されました
bkViewIdAndNameCannotBeEmptyTogether=<viewId>と<viewName>が同時に空にできません。<viewName>を入力する場合は、パラメータ<isProject>も同時に入力してください
bkViewResult=結果を見ます:
bkWaitQueryVersion=\"バージョンをCDNにアップロード\" タスクの状態を照会する 操作の実行が完了するのを待ちます: \n
bkWecomNotice=企業微信通知内容:
bkWorkerBeeCiNotSupport=# 注意: [プラグイン]工蜂CIはBlueKing CIプロジェクトに依存するサービス(たとえば凭证、ノードなど)をサポートしていません、
LimitMessage=[このフィールドのエクスポートを制限します。手動で入力してください]
templateType.constraint=商店から
templateType.customize=カスタムテンプレート
templateType.public=公共テンプレート
unclassified=未分類

bkPendingApproval=ステップ審査待ち
bkReviewers=審査待ち人
bkReviewer=審査人
bkDescription=審査説明
bkParams=審査パラメータ
bkAuditResultsApprove=審査結果：続行
bkAuditResultsReject=審査結果：却下
bkFinalApproval=ステップ審査が終了しました
bkReviewComments=審査意見
bkQueueTimeout=キュー待ち時間オーバー
bkJobQueueTimeout=Jobキュー待ち時間オーバー。並列設定を確認してください
bkTriggerUser=トリガー人
bkTclsEnvironmentMessage=TCLS環境の取得に失敗しました。ユーザー名とパスワードが正しいかどうかを確認してください。エラー情報：
bkTclsEnvironment=TCLS環境の取得に失敗しました。ユーザー名とパスワードが正しいかどうかを確認してください
bkStartUser=実行人
bkWhenTheCustomVariablesAreAllSatisfied=[カスタム変数がすべ
bkCustomVariablesAreAllSatisfied=[カスタム変数が全て満たされた時実行]
bkCheckTaskRunCondition=プラグイン実行条件をチェック:
bkTaskDisabled=プラグインが無効化されました = true
bkOnlyWhenPreviousTaskHasFailed=[前のタスクが失敗した場合のみ実行]
bkItDoesNotRunUnlessItIsCanceled=[前のプラグインが失敗しても実行します。キャンセルされた場合のみ実行しません]
bkRunsEvenIfCanceled=[前のプラグインが失敗しても実行します。キャンセルされても実行します]
bkJobFailureOrCancel=Jobが失敗またはキャンセルされました skip=true
bkCheckJobRunCondition=Job実行条件をチェック:
bkReleaseLock=互斥グループロックを解放
bkGetLocked=ロックを取得 ロック期間:
bkQueueDisabled=キューが有効化されていません
bkCurrentNumberOfQueues=[現在のキュー数[{0}], 待機時間[{1}} 秒]
bkQueueFull=キューが満杯
bkEnqueue=現在のキュー数[{0}]. キュー待ち
bkMutuallyExclusiveGroups=Job#{0}|互斥グループMutex[{1}]|
bkLocked=ロック中
bkClick=表示
bkCurrent=現在
bkPreviousStageCancel=[上位Stageがキャンセルされた場合]:
bkPreviousStageFailed=[上位Stageが失敗した場合]:
bkPreviousStageSuccess=[上位Stageが成功した場合]:
bkUnexecuteTask=構築を終了し、スキップ
bkConditionInvalid=実行条件の判断に失敗
bkUnexecutePostactionTask=[SystemLog]終了指令を受信
bkMaxParallel=並列上限:
bkManuallySkipped=手動でスキップされました
bkEvent={0}イベント
bkWarehouseEvents=倉庫イベント
bkVmStartAlready=構築エージェントを重複起動:
bkContinueWhenError=失敗時自動スキップ
bkMutexWaiting=互斥中
bkQueuing=キュー中
bkPending=審査中
bkQualityIn=品質ゲート(准入)
bkQualityOut=品質ゲート(准出)
bkBuildFinishedAndDenyPause=構築が終了しました。一時停止の請求を禁止します
commonShutdownSuccessContent=【${{%s}}】- 【${{%s}}】#${{%s}} 実行成功，所要時間${{%s}}, トリガー人: ${{%s}}。
commonShutdownFailureContent=【${{%s}}】- 【${{%s}}】#${{%s}} 実行失敗，所要時間${{%s}}, トリガー人: ${{%s}}。
bkBeforePosition=准入-条件を満たして初めて制御ポイントを実行
bkAfterPosition=准出-条件を満たして初めて後続のプラグインを実行
bkTgitPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 推送 
bkTgitIssueCreatedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 创建 
bkTgitIssueUpdatedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 更新 
bkTgitIssueClosedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 关闭 
bkTgitIssueReopenedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 重新打开 
bkTgitMrCreatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 创建
bkTgitMrUpdatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 编辑
bkTgitMrClosedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 关闭
bkTgitMrReopenedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 重新打开
bkTgitMrPushUpdatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 在源分支提交代码触发
bkTgitMrMergedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 合并
bkTgitTagPushEventDesc=[{0}] Tag作成 [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 推送
bkTgitTagDeleteEventDesc=[{0}] Tag [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 删除
bkTgitNoteEventDesc=コメント [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 发表 
bkTgitReviewCreatedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 创建
bkTgitReviewApprovedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 评审通过
bkTgitReviewApprovingEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 评审中
bkTgitReviewClosedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 已关闭
bkTgitReviewChangeDeniedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 被 <span class="trigger-user">{2}</span> 拒绝
bkTgitReviewChangeRequiredEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 要求修改
bkGithubPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 推送
bkGithubCreateBranchEventDesc=ブランチ [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 创建
bkGithubCreateTagEventDesc=Tag [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 推送
bkGithubPrEventDesc=Pull request [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> {3}
bkP4EventDesc=Change {0} 由 <span class="trigger-user">{1}</span> {2}
bkSvnCommitEventDesc=コミット [{0}] 由 <span class="trigger-user">{1}</span> 推送
bkManualStartEventDesc=<span class="trigger-user">{0}</span> 手動トリガー
bkRemoteStartEventDesc=<span class="trigger-user">{0} [{1}]</span> リモートトリガー
bkServiceStartEventDesc=<span class="trigger-user">{0}</span> 触发的パイプライン调用
bkPipelineStartEventDesc=[<a href="{1}" target="_blank">{2}</a>] <span class="trigger-user">{0}</span> 子パイプライン调用
bkTimingStartEventDesc=<span class="trigger-user">{0}</span> スケジュールトリガー
bkEventReplayDesc=イベント [<a target="_self" href="?eventId={0}">{0}</a>] 由 <span class="trigger-user">{1}</span> 重放
bkRepoTriggerEventTypeNotMatch=イベントタイプがトリガー条件を満たしていません
bkRepoTriggerBranchNotMatch=ブランチ[{0}]がトリガー条件を満たしていません
bkRepoTriggerBranchIgnored=ブランチ[{0}]が排除されました
bkRepoTriggerTargetBranchNotMatch=MR目標ブランチ[{0}]がトリガー条件を満たしていません
bkRepoTriggerTargetBranchIgnored=MR目標ブランチ[{0}]が排除されました
bkRepoTriggerSourceBranchNotMatch=MRソースブランチ[{0}]がトリガー条件を満たしていません
bkRepoTriggerSourceBranchIgnored=MRソースブランチ[{0}]が排除されました
bkRepoTriggerUserNotMatch=トリガー人[{0}]が一致しません
bkRepoTriggerUserIgnored=トリガー人[{0}]が排除されました
bkRepoTriggerPathNotMatch=パスがトリガー条件を満たしていません
bkRepoTriggerPathIgnored=パスが排除されました
bkRepoTriggerTagNameNotMatch=Tag名称[{0}]がトリガー条件を満たしていません
bkRepoTriggerTagNameIgnored=Tag名称[{0}]が排除されました
bkRepoTriggerTagSourceBranchNotMatch=Tagソースブランチがトリガー条件を満たしていません
bkRepoTriggerThirdFilterNotMatch=カスタムトリガー制御がトリガー条件を満たしていません
bkRepoTriggerNoteContentNotMatch=コメント内容がトリガー条件を満たしていません
bkRepoTriggerNoteActionNotMatch=コメントタイプがトリガー条件を満たしていません
bkRepoTriggerReviewActionNotMatch=審査タイプがトリガー条件を満たしていません
bkRepoTriggerIssueActionNotMatch=Issueアクションがトリガー条件を満たしていません
bkTriggerConditionNotMatch=トリガー条件が一致しません
bkMergeYamlCreateFileTitle=[{0}]新增パイプライン[{1}]
bkMergeYamlUpdateFileTitle=[{0}]修改パイプライン[{1}]
bkBuildQueueWaitingForConcurrency=構築の並列モード: {0}，並列グループ[{1}]の[{2}]件の構築が完了するのを待機中。現在実行中の構築{3}
bkBuildQueueWaiting=構築の並列モード: {0}，[{1}]件の構築が完了するのを待機中
bkBuildCancelByConcurrency=構築が並列グループ[{0}]で優先度の高い構築{1}によりキャンセルされます
bkBuildTaskRetryNotice=プラグイン[{0}]の実行に失敗しました。{1}回目の自動再試行を開始します。失敗原因:{2}。
bkStageReviewEmptyViewer=審査担当者がいないため、システムに自動的に却下されました

operationLogType.NORMAL_SAVE_OPERATION=通常保存操作
operationLogType.CREATE_PIPELINE_AND_DRAFT=下書きを作成
operationLogType.CREATE_DRAFT_VERSION=新しい下書きは基づく
operationLogType.UPDATE_DRAFT_VERSION=下書きを修改
operationLogType.CREATE_BRANCH_VERSION=新規ブランチバージョン
operationLogType.UPDATE_BRANCH_VERSION=ブランチバージョンを修改
operationLogType.RELEASE_MASTER_VERSION=バージョンをリリース
operationLogType.DISABLE_PIPELINE=パイプラインを無効化
operationLogType.ENABLE_PIPELINE=パイプラインを有効化
operationLogType.ADD_PIPELINE_OWNER=実行者を追加
operationLogType.ADD_PIPELINE_TO_GROUP=パイプライングループに追加
operationLogType.MOVE_PIPELINE_OUT_OF_GROUP=パイプライングループから移出
operationLogType.UPDATE_PIPELINE_BY_OPENAPI=設定を修改して新規バージョンを追加
operationLogType.RESET_RECOMMENDED_VERSION_BUILD_NO=推奨バージョン番号をリセット为

trigger.build.param.basic=パイプライン組み込み変数
trigger.build.param.step=Step組み込み変数
trigger.build.param.job=Job組み込み変数
trigger.build.param.codeGitWebHookTrigger.ci.repo_type.desc=トリガーされたコードリポジトリのタイプ
trigger.build.param.codeGitWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeGitWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリの全名, 例:gourp_name/repo_name
trigger.build.param.codeGitWebHookTrigger.ci.repo_group.desc=トリガーされたコードリポジトリのグループ名
trigger.build.param.codeGitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリの名称
trigger.build.param.codeGitWebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeGitWebHookTrigger.ci.event.desc=トリガーされたイベントのタイプ
trigger.build.param.codeGitWebHookTrigger.ci.event_url.desc=トリガーイベントのリンクアドレス
trigger.build.param.codeGitWebHookTrigger.ci.branch.desc=トリガーされたブランチ或いはTag
trigger.build.param.codeGitWebHookTrigger.ci.build_msg.desc=構築情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名称
trigger.build.param.codeGitWebHookTrigger.ci.commit_message.desc=コミット情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:ソースブランチ最後のコミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Cr最後のコミット情報<br/>- Tag:Tag最後のコミット情報
trigger.build.param.codeGitWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGitWebHookTrigger.ci.actor.desc=トリガー人
trigger.build.param.codeGitWebHookTrigger.ci.before_sha.desc=前回のpushのcommitSha。Push-commit、Tag-pushがトリガーされた場合有効
trigger.build.param.codeGitWebHookTrigger.ci.before_sha_short.desc=前回のpushの前回のpushのcommitShaの先頭8文字。Push-commit、Tag-pushがトリガーされた場合有効
trigger.build.param.codeGitWebHookTrigger.ci.sha.desc=Commit id
trigger.build.param.codeGitWebHookTrigger.ci.sha_short.desc=Commit idの先頭8文字
trigger.build.param.codeGitWebHookTrigger.ci.operation_kind.desc=今回のPUSHによるトリガー操作タイプ。規則: <br/>- create:ブランチを作成或いは通常MRをMergeするpush<br/>- delete:ブランチを削除するpush<br/>- update:ファイルを修改するpush<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeGitWebHookTrigger.ci.mr_proposer.desc=Mergeリクエストの作者或いはコミット者
trigger.build.param.codeGitWebHookTrigger.ci.head_repo_url.desc=Mergeリクエストの目標コードリポジトリURL
trigger.build.param.codeGitWebHookTrigger.ci.base_repo_url.desc=MergeリクエストのソースコードリポジトリURL
trigger.build.param.codeGitWebHookTrigger.ci.head_ref.desc=Mergeリクエストの目標ブランチ
trigger.build.param.codeGitWebHookTrigger.ci.base_ref.desc=Mergeリクエストのソースブランチ
trigger.build.param.codeGitWebHookTrigger.ci.mr_id.desc=Mergeリクエストのid
trigger.build.param.codeGitWebHookTrigger.ci.mr_iid.desc=Mergeリクエストの序号
trigger.build.param.codeGitWebHookTrigger.ci.mr_desc.desc=Mergeリクエストの描述
trigger.build.param.codeGitWebHookTrigger.ci.mr_title.desc=Mergeリクエストの标题
trigger.build.param.codeGitWebHookTrigger.ci.mr_url.desc=Mergeリクエストのリンク
trigger.build.param.codeGitWebHookTrigger.ci.mr_reviewers.desc=Mergeリクエストの審査人(必要審査人を含む)
trigger.build.param.codeGitWebHookTrigger.ci.milestone_name.desc=Mergeリクエストのマイルストーン名称
trigger.build.param.codeGitWebHookTrigger.ci.milestone_id.desc=Mergeリクエストのマイルストーンid
trigger.build.param.codeGitWebHookTrigger.ci.mr_tapd_issues.desc=Mergeリクエストに関連付けられたTAPD課題
trigger.build.param.codeGitWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeGitWebHookTrigger.ci.tag_from.desc=Tagソース。ブランチ名或いはCommit sha
trigger.build.param.codeGitWebHookTrigger.ci.tag_desc.desc=Tagの描述
trigger.build.param.codeGitWebHookTrigger.ci.issue_title.desc=Issue标题
trigger.build.param.codeGitWebHookTrigger.ci.issue_id.desc=Issue id
trigger.build.param.codeGitWebHookTrigger.ci.issue_iid.desc=Issue序号
trigger.build.param.codeGitWebHookTrigger.ci.issue_description.desc=Issue描述
trigger.build.param.codeGitWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeGitWebHookTrigger.ci.issue_owner.desc=Issue创建者
trigger.build.param.codeGitWebHookTrigger.ci.issue_milestone_id.desc=Issueマイルストーンid
trigger.build.param.codeGitWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGitWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeGitWebHookTrigger.ci.repo_id.desc=コードリポジトリId
trigger.build.param.codeGitWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGitWebHookTrigger.ci.note_author.desc=コメント作者
trigger.build.param.codeGitWebHookTrigger.ci.create_time.desc=コメント创建时间
trigger.build.param.codeGitWebHookTrigger.ci.modify_time.desc=コメント更新时间
trigger.build.param.codeGitWebHookTrigger.ci.review_id.desc=コード審査のID
trigger.build.param.codeGitWebHookTrigger.ci.review_iid.desc=審査の序号
trigger.build.param.codeGitWebHookTrigger.ci.review_type.desc=審査タイプ
trigger.build.param.codeGitWebHookTrigger.ci.review_reviewers.desc=審査人列表。,で分割
trigger.build.param.codeGitWebHookTrigger.ci.review_state.desc=審査状態
trigger.build.param.codeGitWebHookTrigger.ci.review_owner.desc=審査イベントの作者
trigger.build.param.codeGitWebHookTrigger.common=Gitイベントトリガー - 公共変数
trigger.build.param.codeGitWebHookTrigger.PUSH=Gitイベントトリガー - 推送イベント
trigger.build.param.codeGitWebHookTrigger.TAG_PUSH=Gitイベントトリガー - Tag推送イベント
trigger.build.param.codeGitWebHookTrigger.MERGE_REQUEST=Gitイベントトリガー - Mergeリクエストイベント
trigger.build.param.codeGitWebHookTrigger.MERGE_REQUEST_ACCEPT=Gitイベントトリガー - Mergeリクエスト已合并イベント
trigger.build.param.codeGitWebHookTrigger.ISSUES=Gitイベントトリガー - 課題イベント
trigger.build.param.codeGitWebHookTrigger.NOTE=Gitイベントトリガー - コメントイベント
trigger.build.param.codeGitWebHookTrigger.REVIEW=Gitイベントトリガー - 審査イベント
trigger.build.param.codeTGitWebHookTrigger.ci.repo_type.desc=トリガーされたコードリポジトリのタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeTGitWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリの全名, 例:gourp_name/repo_name
trigger.build.param.codeTGitWebHookTrigger.ci.repo_group.desc=トリガーされたコードリポジトリのグループ名
trigger.build.param.codeTGitWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリの名称
trigger.build.param.codeTGitWebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeTGitWebHookTrigger.ci.event.desc=トリガーされたイベントのタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.event_url.desc=トリガーイベントのリンクアドレス
trigger.build.param.codeTGitWebHookTrigger.ci.branch.desc=トリガーされたブランチ或いはTag
trigger.build.param.codeTGitWebHookTrigger.ci.build_msg.desc=構築情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名称
trigger.build.param.codeTGitWebHookTrigger.ci.commit_message.desc=コミット情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:ソースブランチ最後のコミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Tag:Tag最後のコミット情報
trigger.build.param.codeTGitWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeTGitWebHookTrigger.ci.actor.desc=トリガー人
trigger.build.param.codeTGitWebHookTrigger.ci.before_sha.desc=Push-commit、Tag-pushがトリガーされた場合有効。前回のpushのsha
trigger.build.param.codeTGitWebHookTrigger.ci.before_sha_short.desc=Push-commit、Tag-pushがトリガーされた場合有効。前回のpushのshaの先頭8文字
trigger.build.param.codeTGitWebHookTrigger.ci.sha.desc=Commit id
trigger.build.param.codeTGitWebHookTrigger.ci.sha_short.desc=Commit idの先頭8文字
trigger.build.param.codeTGitWebHookTrigger.ci.operation_kind.desc=今回のPUSHによるトリガー操作タイプ。規則: <br/>- create:ブランチを作成或いは通常MRをMergeするpush<br/>- delete:ブランチを削除するpush<br/>- update:ファイルを修改するpush<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeTGitWebHookTrigger.ci.mr_proposer.desc=Mergeリクエストの作者或いはコミット者
trigger.build.param.codeTGitWebHookTrigger.ci.head_repo_url.desc=Mergeリクエストの目標コードリポジトリURL
trigger.build.param.codeTGitWebHookTrigger.ci.base_repo_url.desc=MergeリクエストのソースコードリポジトリURL
trigger.build.param.codeTGitWebHookTrigger.ci.head_ref.desc=Mergeリクエストの目標ブランチ
trigger.build.param.codeTGitWebHookTrigger.ci.base_ref.desc=Mergeリクエストのソースブランチ
trigger.build.param.codeTGitWebHookTrigger.ci.mr_id.desc=Mergeリクエストのid
trigger.build.param.codeTGitWebHookTrigger.ci.mr_iid.desc=Mergeリクエストの序号
trigger.build.param.codeTGitWebHookTrigger.ci.mr_desc.desc=Mergeリクエストの描述
trigger.build.param.codeTGitWebHookTrigger.ci.mr_title.desc=Mergeリクエストの标题
trigger.build.param.codeTGitWebHookTrigger.ci.mr_url.desc=Mergeリクエストのリンク
trigger.build.param.codeTGitWebHookTrigger.ci.mr_reviewers.desc=Mergeリクエストの審査人(必要審査人を含む)
trigger.build.param.codeTGitWebHookTrigger.ci.milestone_name.desc=Mergeリクエストのマイルストーン名称
trigger.build.param.codeTGitWebHookTrigger.ci.milestone_id.desc=Mergeリクエストのマイルストーンid
trigger.build.param.codeTGitWebHookTrigger.ci.mr_tapd_issues.desc=Mergeリクエストに関連付けられたTAPD課題
trigger.build.param.codeTGitWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeTGitWebHookTrigger.ci.tag_from.desc=Tagソース。ブランチ名或いはCommit sha
trigger.build.param.codeTGitWebHookTrigger.ci.tag_desc.desc=Tagの描述
trigger.build.param.codeTGitWebHookTrigger.ci.issue_title.desc=Issue标题
trigger.build.param.codeTGitWebHookTrigger.ci.issue_id.desc=Issue id
trigger.build.param.codeTGitWebHookTrigger.ci.issue_iid.desc=Issue序号
trigger.build.param.codeTGitWebHookTrigger.ci.issue_description.desc=Issue描述
trigger.build.param.codeTGitWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeTGitWebHookTrigger.ci.issue_owner.desc=Issue创建者
trigger.build.param.codeTGitWebHookTrigger.ci.issue_milestone_id.desc=Issueマイルストーンid
trigger.build.param.codeTGitWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeTGitWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeTGitWebHookTrigger.ci.repo_id.desc=コードリポジトリId
trigger.build.param.codeTGitWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeTGitWebHookTrigger.ci.note_author.desc=コメント作者
trigger.build.param.codeTGitWebHookTrigger.ci.create_time.desc=コメント创建时间
trigger.build.param.codeTGitWebHookTrigger.ci.modify_time.desc=コメント更新时间
trigger.build.param.codeTGitWebHookTrigger.ci.review_id.desc=コード審査のID
trigger.build.param.codeTGitWebHookTrigger.ci.review_iid.desc=審査の序号
trigger.build.param.codeTGitWebHookTrigger.ci.review_type.desc=審査タイプ
trigger.build.param.codeTGitWebHookTrigger.ci.review_reviewers.desc=審査人列表。,で分割
trigger.build.param.codeTGitWebHookTrigger.ci.review_state.desc=審査状態
trigger.build.param.codeTGitWebHookTrigger.ci.review_owner.desc=審査イベントの作者
trigger.build.param.codeTGitWebHookTrigger.PUSH=TGitイベントトリガー - 推送イベント
trigger.build.param.codeTGitWebHookTrigger.TAG_PUSH=TGitイベントトリガー - Tag推送イベント
trigger.build.param.codeTGitWebHookTrigger.MERGE_REQUEST=TGitイベントトリガー - Mergeリクエストイベント
trigger.build.param.codeTGitWebHookTrigger.MERGE_REQUEST_ACCEPT=TGitイベントトリガー - Mergeリクエスト已合并イベント
trigger.build.param.codeTGitWebHookTrigger.ISSUES=TGitイベントトリガー - 課題イベント
trigger.build.param.codeTGitWebHookTrigger.NOTE=TGitイベントトリガー - コメントイベント
trigger.build.param.codeTGitWebHookTrigger.REVIEW=TGitイベントトリガー - 審査イベント
trigger.build.param.codeTGitWebHookTrigger.common=TGitイベントトリガー - 公共変数
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_type.desc=トリガーされたコードリポジトリのタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeGitlabWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリの全名, 例:gourp_name/repo_name
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_group.desc=トリガーされたコードリポジトリのグループ名
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリの名称
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeGitlabWebHookTrigger.ci.event.desc=トリガーされたイベントのタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.event_url.desc=トリガーイベントのリンクアドレス
trigger.build.param.codeGitlabWebHookTrigger.ci.branch.desc=トリガーされたブランチ或いはTag
trigger.build.param.codeGitlabWebHookTrigger.ci.build_msg.desc=構築情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:Mrタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- Tag:Tag名称
trigger.build.param.codeGitlabWebHookTrigger.ci.commit_message.desc=コミット情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Mr:ソースブランチ最後のコミット情報<br/>- Tag:Tag最後のコミット情報
trigger.build.param.codeGitlabWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGitlabWebHookTrigger.ci.actor.desc=トリガー人
trigger.build.param.codeGitlabWebHookTrigger.ci.before_sha.desc=Push-commit、Tag-pushがトリガーされた場合有効。前回のpushのsha
trigger.build.param.codeGitlabWebHookTrigger.ci.before_sha_short.desc=Push-commit、Tag-pushがトリガーされた場合有効。前回のpushのshaの先頭8文字
trigger.build.param.codeGitlabWebHookTrigger.ci.sha.desc=Commit id
trigger.build.param.codeGitlabWebHookTrigger.ci.sha_short.desc=Commit idの先頭8文字
trigger.build.param.codeGitlabWebHookTrigger.ci.operation_kind.desc=今回のPUSHによるトリガー操作タイプ。規則: <br/>- create:ブランチを作成或いは通常MRをMergeするpush<br/>- delete:ブランチを削除するpush<br/>- update:ファイルを修改するpush<br/>- update_nonfastforward:non-fast-forwardコミット
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_proposer.desc=Mergeリクエストの作者或いはコミット者
trigger.build.param.codeGitlabWebHookTrigger.ci.head_repo_url.desc=Mergeリクエストの目標コードリポジトリURL
trigger.build.param.codeGitlabWebHookTrigger.ci.base_repo_url.desc=MergeリクエストのソースコードリポジトリURL
trigger.build.param.codeGitlabWebHookTrigger.ci.head_ref.desc=Mergeリクエストの目標ブランチ
trigger.build.param.codeGitlabWebHookTrigger.ci.base_ref.desc=Mergeリクエストのソースブランチ
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_id.desc=Mergeリクエストのid
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_iid.desc=Mergeリクエストの序号
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_desc.desc=Mergeリクエストの描述
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_title.desc=Mergeリクエストの标题
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_url.desc=Mergeリクエストのリンク
trigger.build.param.codeGitlabWebHookTrigger.ci.mr_reviewers.desc=Mergeリクエストの審査人(必要審査人を含む)
trigger.build.param.codeGitlabWebHookTrigger.ci.milestone_name.desc=Mergeリクエストのマイルストーン名称
trigger.build.param.codeGitlabWebHookTrigger.ci.milestone_id.desc=Mergeリクエストのマイルストーンid
trigger.build.param.codeGitlabWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeGitlabWebHookTrigger.ci.tag_from.desc=Tagソース。ブランチ名或いはCommit sha
trigger.build.param.codeGitlabWebHookTrigger.ci.tag_desc.desc=Tagの描述
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_title.desc=Issue标题
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_id.desc=Issue id
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_iid.desc=Issue序号
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_description.desc=Issue描述
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_owner.desc=Issue创建者
trigger.build.param.codeGitlabWebHookTrigger.ci.issue_milestone_id.desc=Issueマイルストーンid
trigger.build.param.codeGitlabWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGitlabWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeGitlabWebHookTrigger.ci.repo_id.desc=コードリポジトリId
trigger.build.param.codeGitlabWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.note_author.desc=コメント作者
trigger.build.param.codeGitlabWebHookTrigger.ci.create_time.desc=コメント创建时间
trigger.build.param.codeGitlabWebHookTrigger.ci.modify_time.desc=コメント更新时间
trigger.build.param.codeGitlabWebHookTrigger.ci.review_id.desc=コード審査のID
trigger.build.param.codeGitlabWebHookTrigger.ci.review_iid.desc=審査の序号
trigger.build.param.codeGitlabWebHookTrigger.ci.review_type.desc=審査タイプ
trigger.build.param.codeGitlabWebHookTrigger.ci.review_reviewers.desc=審査人列表。,で分割
trigger.build.param.codeGitlabWebHookTrigger.ci.review_state.desc=審査状態
trigger.build.param.codeGitlabWebHookTrigger.ci.review_owner.desc=審査イベントの作者
trigger.build.param.codeGitlabWebHookTrigger.common=Gitlabイベントトリガー - 公共変数
trigger.build.param.codeGitlabWebHookTrigger.PUSH=Gitlabイベントトリガー - 推送イベント
trigger.build.param.codeGitlabWebHookTrigger.TAG_PUSH=Gitlabイベントトリガー - Tag推送イベント
trigger.build.param.codeGitlabWebHookTrigger.MERGE_REQUEST=Gitlabイベントトリガー - Mergeリクエストイベント
trigger.build.param.codeGitlabWebHookTrigger.MERGE_REQUEST_ACCEPT=Gitlabイベントトリガー - Mergeリクエスト已合并イベント
trigger.build.param.codeGitlabWebHookTrigger.ISSUES=Gitlabイベントトリガー - 課題イベント
trigger.build.param.codeGitlabWebHookTrigger.NOTE=Gitlabイベントトリガー - コメントイベント
trigger.build.param.codeGitlabWebHookTrigger.REVIEW=Gitlabイベントトリガー - 審査イベント
trigger.build.param.codeGithubWebHookTrigger.ci.repo_type.desc=トリガーされたコードリポジトリのタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeGithubWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリの全名, 例:gourp_name/repo_name
trigger.build.param.codeGithubWebHookTrigger.ci.repo_group.desc=トリガーされたコードリポジトリのグループ名
trigger.build.param.codeGithubWebHookTrigger.ci.repo_name.desc=トリガーされたコードリポジトリの名称
trigger.build.param.codeGithubWebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeGithubWebHookTrigger.ci.event.desc=トリガーされたイベントのタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.event_url.desc=トリガーイベントのリンクアドレス
trigger.build.param.codeGithubWebHookTrigger.ci.branch.desc=トリガーされたブランチ或いはTag
trigger.build.param.codeGithubWebHookTrigger.ci.build_msg.desc=構築情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Pr:Prタイトル<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Crタイトル<br/>- create:Tag或いはブランチ名称
trigger.build.param.codeGithubWebHookTrigger.ci.commit_message.desc=コミット情報。イベントタイプによる取値規則: <br/>- Push:最後のコミット情報<br/>- Pr:Prソースブランチ最後のコミット情報<br/>- Note:コメント内容<br/>- Issue:Issueタイトル<br/>- Review:Cr最後のコミット情報<br/>- Tag:Tag或いはブランチ最後のコミット情報
trigger.build.param.codeGithubWebHookTrigger.ci.action.desc=トリガーアクション
trigger.build.param.codeGithubWebHookTrigger.ci.actor.desc=トリガー人
trigger.build.param.codeGithubWebHookTrigger.ci.before_sha.desc=Push-commit時、前回のpushのsha
trigger.build.param.codeGithubWebHookTrigger.ci.before_sha_short.desc=Push-commit時、前回のpushのshaの先頭8文字
trigger.build.param.codeGithubWebHookTrigger.ci.sha.desc=Commit id
trigger.build.param.codeGithubWebHookTrigger.ci.sha_short.desc=Commit idの先頭8文字
trigger.build.param.codeGithubWebHookTrigger.ci.mr_proposer.desc=Pullリクエストの作者或いはコミット者
trigger.build.param.codeGithubWebHookTrigger.ci.head_repo_url.desc=Pullリクエストの目標コードリポジトリURL
trigger.build.param.codeGithubWebHookTrigger.ci.base_repo_url.desc=PullリクエストのソースコードリポジトリURL
trigger.build.param.codeGithubWebHookTrigger.ci.head_ref.desc=Pullリクエストの目標ブランチ
trigger.build.param.codeGithubWebHookTrigger.ci.base_ref.desc=Pullリクエストのソースブランチ
trigger.build.param.codeGithubWebHookTrigger.ci.mr_id.desc=Pullリクエストのid
trigger.build.param.codeGithubWebHookTrigger.ci.mr_iid.desc=Pullリクエストの序号
trigger.build.param.codeGithubWebHookTrigger.ci.mr_desc.desc=Pullリクエストの描述
trigger.build.param.codeGithubWebHookTrigger.ci.mr_title.desc=Pullリクエストの标题
trigger.build.param.codeGithubWebHookTrigger.ci.mr_url.desc=Pullリクエストのリンク
trigger.build.param.codeGithubWebHookTrigger.ci.mr_reviewers.desc=Pullリクエストの審査人(必要審査人を含む)
trigger.build.param.codeGithubWebHookTrigger.ci.milestone_name.desc=Pullリクエストのマイルストーン名称
trigger.build.param.codeGithubWebHookTrigger.ci.milestone_id.desc=Pullリクエストのマイルストーンid
trigger.build.param.codeGithubWebHookTrigger.ci.commit_author.desc=Tagコミットユーザー
trigger.build.param.codeGithubWebHookTrigger.ci.issue_title.desc=Issue标题
trigger.build.param.codeGithubWebHookTrigger.ci.issue_id.desc=Issue id
trigger.build.param.codeGithubWebHookTrigger.ci.issue_iid.desc=Issue序号
trigger.build.param.codeGithubWebHookTrigger.ci.issue_description.desc=Issue描述
trigger.build.param.codeGithubWebHookTrigger.ci.issue_state.desc=Issue状態
trigger.build.param.codeGithubWebHookTrigger.ci.issue_owner.desc=Issue创建者
trigger.build.param.codeGithubWebHookTrigger.ci.issue_milestone_id.desc=Issueマイルストーンid
trigger.build.param.codeGithubWebHookTrigger.ci.note_comment.desc=コメント内容
trigger.build.param.codeGithubWebHookTrigger.ci.note_id.desc=コメントID
trigger.build.param.codeGithubWebHookTrigger.ci.repo_id.desc=コードリポジトリId
trigger.build.param.codeGithubWebHookTrigger.ci.note_type.desc=コメントタイプ
trigger.build.param.codeGithubWebHookTrigger.ci.note_author.desc=コメント作者
trigger.build.param.codeGithubWebHookTrigger.ci.create_time.desc=コメント创建时间
trigger.build.param.codeGithubWebHookTrigger.ci.modify_time.desc=コメント更新时间
trigger.build.param.codeGithubWebHookTrigger.ci.review_id.desc=コード審査のID
trigger.build.param.codeGithubWebHookTrigger.ci.review_iid.desc=審査の序号
trigger.build.param.codeGithubWebHookTrigger.ci.review_type.desc=審査タイプ
trigger.build.param.codeGithubWebHookTrigger.ci.review_reviewers.desc=審査人列表。,で分割
trigger.build.param.codeGithubWebHookTrigger.ci.review_state.desc=審査状態
trigger.build.param.codeGithubWebHookTrigger.ci.review_owner.desc=審査イベントの作者
trigger.build.param.codeGithubWebHookTrigger.ci.create_ref.desc=作成されたブランチ名或いはTag名
trigger.build.param.codeGithubWebHookTrigger.ci.create_type.desc=作成要素のタイプ
trigger.build.param.codeGithubWebHookTrigger.PUSH=Githubイベントトリガー - 推送イベント
trigger.build.param.codeGithubWebHookTrigger.ISSUES=Githubイベントトリガー - 課題イベント
trigger.build.param.codeGithubWebHookTrigger.NOTE=Githubイベントトリガー - コメントイベント
trigger.build.param.codeGithubWebHookTrigger.REVIEW=Githubイベントトリガー - 審査イベント
trigger.build.param.codeGithubWebHookTrigger.CREATE=Githubイベントトリガー - Tag/Branch作成イベント
trigger.build.param.codeGithubWebHookTrigger.PULL_REQUEST=Githubイベントトリガー - Pullリクエストイベント
trigger.build.param.codeGithubWebHookTrigger.PULL_REQUEST_ACCEPT=Githubイベントトリガー - Pullリクエスト已合并イベント
trigger.build.param.codeGithubWebHookTrigger.common=Githubイベントトリガー - 公共変数
trigger.build.param.codeSVNWebHookTrigger.ci.sha.desc=SVNコミットバージョン番号
trigger.build.param.codeSVNWebHookTrigger.ci.actor.desc=SVNコミット人
trigger.build.param.codeSVNWebHookTrigger.ci.event.desc=トリガーイベント描述
trigger.build.param.codeSVNWebHookTrigger.ci.build_msg.desc=トリガー情報
trigger.build.param.codeSVNWebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリ
trigger.build.param.codeSVNWebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeSVNWebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeSVNWebHookTrigger.POST_COMMIT=SVNイベントトリガー - 公共変数
trigger.build.param.codeP4WebHookTrigger.ci.sha.desc=P4コミットバージョン番号
trigger.build.param.codeP4WebHookTrigger.ci.actor.desc=P4コミット人
trigger.build.param.codeP4WebHookTrigger.ci.event.desc=トリガーイベントタイプ
trigger.build.param.codeP4WebHookTrigger.ci.build_msg.desc=トリガー情報
trigger.build.param.codeP4WebHookTrigger.ci.repo.desc=トリガーされたコードリポジトリ
trigger.build.param.codeP4WebHookTrigger.ci.repo_alias_name.desc=トリガーされたコードリポジトリのBlueKing CIでの别名
trigger.build.param.codeP4WebHookTrigger.ci.repo_url.desc=トリガーされたコードリポジトリのリンク
trigger.build.param.codeP4WebHookTrigger.common=P4イベントトリガー - 公共変数
bkRepoTriggerPrActionNotMatch=Pull requestアクションがトリガー条件を満たしていません
bkAgentReuseMutex=Agent再利用互斥グループMutex[{0}]|
bkAgentReuseMutexAgentIdNull=Agent再利用互斥グループMutex|AgentIdが空|
bkNotSubPipelineExecutePermissionErrorTitle=パイプライン権限代持人[{0}]が以下の子パイプラインの実行権限を持っていません。保存に失敗しました:
bkNotSubPipelineExecutePermissionErrorMessage=Stage[{0}]-Job[{1}]-Step[{2}]: <a target="_blank" href="{3}">{4}</a>
bkNotSubPipelineExecutePermissionResetErrorTitle=ユーザー[{0}] が以下の子パイプラインの実行権限を持っていません。権限リセットに失敗しました:
bkPipelineElementCheckFailedMessage=パイプラインプラグイン有効性検証に失敗しました
bkRepoTriggerMrActionNotMatch=Merge requestアクションがトリガー条件を満たしていません
bkRepoTriggerPushActionNotMatch=Pushアクションがトリガー条件を満たしていません
bkRepoTriggerSkipWipNotMatch=WIP段階でトリガーしません
bkPipelineRunConditionResult=カスタム条件[{0}]の計算結果: {1}
bkPipelineRunConditionNotMatch=。条件を満たしていないため、すぐにスキップします
bkPipelineRunConditionWithError=カスタム条件の計算にエラーが発生: {0}
bkAuthorNotPipelineExecutePermission=権限代持人[{0}]が現在のパイプラインの実行権限を失っています。権限が期限切れ或いはこのパイプラインの担当者でなくなった可能性があります。パイプライン所有者に連絡してください
transferErrorCheckAgentIdFailed=現在の専用構築エージェントデータが誤っている或いは存在しません
transferErrorCheckEnvIdFailed=現在の専用構築エージェントクラスターデータが誤っている或いは存在しません
bkSubPipelineCircularDependencyErrorTitle=循環依存が存在します。保存に失敗しました:
bkCurrentSubPipelineCircularDependencyErrorMessage=現在のパイプラインに循環依存が存在します
bkSubPipelineCircularDependencyErrorMessage=子パイプライン[<a target="_blank" href="{0}">{1}</a>]が現在のパイプラインを呼び出し、循環依存を形成しました
bkOtherSubPipelineCircularDependencyErrorMessage=子パイプライン[<a target="_blank" href="{0}">{1}</a>]が[<a target="_blank" href="{2}">{3}</a>]パイプラインを呼び出し、循環依存を形成しました

bkGitPushEventDesc=[{0}] コミット [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 推送 
bkGitPushCreateEventDesc=Branch [<a href="{1}" target="_blank">{0}</a>]  由 <span class="trigger-user">{3}</span> 创建
bkGitPushDeleteEventDesc=Branch [<a href="{1}" target="_blank">{0}</a>]  由 <span class="trigger-user">{3}</span> 删除
bkGitIssueOpenedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 创建 
bkGitIssueUpdatedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 更新 
bkGitIssueClosedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 关闭 
bkGitIssueReopenedEventDesc=課題 [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 重新打开 
bkGitPrCreatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 创建
bkGitPrUpdatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 编辑
bkGitPrClosedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 关闭
bkGitPrReopenedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 重新打开
bkGitPrPushUpdatedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 在源分支提交代码触发
bkGitPrMergedEventDesc=Mergeリクエスト [<a href="{0}" target="_blank">!{1}</a>] 由 <span class="trigger-user">{2}</span> 合并
bkGitTagPushEventDesc=[{0}] Tag作成 [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 推送
bkGitTagDeleteEventDesc=[{0}] Tag [<a href="{1}" target="_blank">{2}</a>] 由 <span class="trigger-user">{3}</span> 删除
bkGitNoteEventDesc=コメント [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 发表 
bkGitReviewCreatedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 创建
bkGitReviewApprovedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 评审通过
bkGitReviewApprovingEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 评审中
bkGitReviewClosedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 已关闭
bkGitReviewChangeDeniedEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 被 <span class="trigger-user">{2}</span> 拒绝
bkGitReviewChangeRequiredEventDesc=コード審査 [<a href="{0}" target="_blank">{1}</a>] 由 <span class="trigger-user">{2}</span> 要求修改

bkYamlPipelineCreateSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]创建成功
bkYamlPipelineUpdateSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]更新成功
bkYamlPipelineDeleteVersionSuccess=[<a href="{0}" target="_blank">{1}</a>|{2}]删除版本成功
bkYamlPipelineDeleteSuccess=[{0}|{1}]删除成功
bkYamlPipelineCreateFailed=パイプラインの作成に失敗しました
bkYamlPipelineUpdateFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>]の更新に失敗しました
bkYamlPipelineDeleteVersionFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>|{2}]のバージョン削除に失敗しました
bkYamlPipelineDeleteFailed=パイプライン[<a href="{0}" target="_blank">{1}</a>]の削除に失敗しました
bkRepoEnablePacEventDesc=<span class="trigger-user">{0}</span> PACを有効化
bkEmptyPipeline = 空のパイプライン
## 微扩展相关配置

upstream ext_gray_upstream {
    server __EXT_GRAY_UPSTREAM__;
}

upstream ext_upstream {
    server __EXT_UPSTREAM__;
}

server {
    listen 80;
    server_name __EXT_GRAY_SERVER_NAME__;

    #  ### ssl config begin ###
    #  listen __BKCI_HTTPS_PORT__ ssl;
    #  include devops.ssl;
    #  # force https-redirects
    #  # if ($scheme = http) {
    #  #   return 301 https://$server_name$request_uri;
    #  # }
    #  ### ssl config end ###

    access_log __INSTALL_PATH__/logs/ci/nginx/devops.ext.access.$log_date.log devops_format;
    error_log __INSTALL_PATH__/logs/ci/nginx/devops.ext.error.log;

    # server的通用配置
    include server.common.conf;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    location ^~ /api/user {
        auth_request /auth/user;
        proxy_pass http://ext_gray_upstream;
    }

    location ^~ /static {
        auth_request /auth/user;
        proxy_pass http://ext_gray_upstream;
    }

    location ^~ /api/build {
        auth_request /auth/build;
        proxy_pass http://ext_gray_upstream;
    }

    location ^~ /api/open {
        proxy_pass http://ext_gray_upstream;
    }

    location / {
        return 404 "{\"status\": 404,\"data\": \"\",\"result\":true,\"message\": \"非法请求\"}";
    }
}

server {
    listen 80;
    server_name __EXT_SERVER_NAME__;

    #  ### ssl config begin ###
    #  listen __BKCI_HTTPS_PORT__ ssl;
    #  include devops.ssl;
    #  # force https-redirects
    #  # if ($scheme = http) {
    #  #   return 301 https://$server_name$request_uri;
    #  # }
    #  ### ssl config end ###

    access_log __INSTALL_PATH__/logs/ci/nginx/devops.ext.access.$log_date.log devops_format;
    error_log __INSTALL_PATH__/logs/ci/nginx/devops.ext.error.log;

    # server的通用配置
    include server.common.conf;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    location ^~ /api/user {
        auth_request /auth/user;
        proxy_pass http://ext_upstream;
    }

        location ^~ /static {
        auth_request /auth/user;
        proxy_pass http://ext_upstream;
    }

    location ^~ /api/build {
        auth_request /auth/build;
        proxy_pass http://ext_upstream;
    }

    location ^~ /api/open {
        proxy_pass http://ext_upstream;
    }

    location / {
        return 404 "{\"status\": 404,\"data\": \"\",\"result\":true,\"message\": \"非法请求\"}";
    }
}

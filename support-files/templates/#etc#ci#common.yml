# Common config Template 重复的通用的配置抽离在到
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    version: 4.0.0
# consul config do not need to change
  cloud:
    consul:
      port: __BK_CI_CONSUL_HTTP_PORT__
      discovery:
        tags: __BK_CI_CONSUL_DISCOVERY_TAG__
        instanceId: ${spring.application.name}-${server.port}-${spring.cloud.client.hostname}
# spring cloud stream 配置，common-stream
    stream:
      binders:
        extend-rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: __BK_CI_RABBITMQ_VHOST__
                username: __BK_CI_RABBITMQ_USER__
                password: __BK_CI_RABBITMQ_PASSWORD__
                addresses: __BK_CI_RABBITMQ_ADDR__
      default-binder: extend-rabbit
# redis config
  redis:
#   # Redis sentinel 集群方式配置
#    sentinel:
#      master: __BK_CI_REDIS_SENTINEL_MASTER_NAME__
# 逗号分隔, master_IP:port
#      nodes: __BK_CI_REDIS_SENTINEL_ADDR__
#   # Redis 单机配置方式
    host: __BK_CI_REDIS_HOST__
    port: __BK_CI_REDIS_PORT__
    password: __BK_CI_REDIS_PASSWORD__
    database: __BK_CI_REDIS_DB__
    pool:
      max-active: 16
      max-wait:  2000
# rabbitmq config
  rabbitmq:
    # 引擎核心业务MQ
    core:
      virtual-host: __BK_CI_RABBITMQ_VHOST__
      username: __BK_CI_RABBITMQ_USER__
      password: __BK_CI_RABBITMQ_PASSWORD__
      addresses: __BK_CI_RABBITMQ_ADDR__
    # 拓展功能模块MQ -- 如果主rabbitmq出现性能瓶颈, 可以考虑使用额外的实例
    extend:
      virtual-host: __BK_CI_RABBITMQ_VHOST__
      username: __BK_CI_RABBITMQ_USER__
      password: __BK_CI_RABBITMQ_PASSWORD__
      addresses: __BK_CI_RABBITMQ_ADDR__
  metrics:
    servo:
      enabled: false
  datasource:    
    # 数据库表规则配置
    tableRuleConfigs:
      - index: 0
        name: T_AUDIT_RESOURCE
        databaseShardingStrategy: SHARDING
      - index: 1
        name: T_PIPELINE_BUILD_CONTAINER
        databaseShardingStrategy: SHARDING
      - index: 2
        name: T_PIPELINE_BUILD_DETAIL
        databaseShardingStrategy: SHARDING
      - index: 3
        name: T_PIPELINE_BUILD_HIS_DATA_CLEAR
        databaseShardingStrategy: SHARDING
      - index: 4
        name: T_PIPELINE_BUILD_HISTORY
        databaseShardingStrategy: SHARDING
      - index: 5
        name: T_PIPELINE_BUILD_STAGE
        databaseShardingStrategy: SHARDING
      - index: 6
        name: T_PIPELINE_BUILD_SUMMARY
        databaseShardingStrategy: SHARDING
      - index: 7
        name: T_PIPELINE_BUILD_TASK
        databaseShardingStrategy: SHARDING
      - index: 8
        name: T_PIPELINE_BUILD_VAR
        databaseShardingStrategy: SHARDING
      - index: 9
        name: T_PIPELINE_FAVOR
        databaseShardingStrategy: SHARDING
      - index: 10
        name: T_PIPELINE_GROUP
        databaseShardingStrategy: SHARDING
      - index: 11
        name: T_PIPELINE_INFO
        databaseShardingStrategy: SHARDING
      - index: 12
        name: T_PIPELINE_JOB_MUTEX_GROUP
        databaseShardingStrategy: SHARDING
      - index: 13
        name: T_PIPELINE_LABEL
        databaseShardingStrategy: SHARDING
      - index: 14
        name: T_PIPELINE_LABEL_PIPELINE
        databaseShardingStrategy: SHARDING
      - index: 15
        name: T_PIPELINE_MODEL_TASK
        databaseShardingStrategy: SHARDING
      - index: 16
        name: T_PIPELINE_PAUSE_VALUE
        databaseShardingStrategy: SHARDING
      - index: 17
        name: T_PIPELINE_RESOURCE
        databaseShardingStrategy: SHARDING
      - index: 18
        name: T_PIPELINE_RESOURCE_VERSION
        databaseShardingStrategy: SHARDING
      - index: 19
        name: T_PIPELINE_SETTING
        databaseShardingStrategy: SHARDING
      - index: 20
        name: T_PIPELINE_SETTING_VERSION
        databaseShardingStrategy: SHARDING
      - index: 21
        name: T_PIPELINE_VIEW
        databaseShardingStrategy: SHARDING
      - index: 22
        name: T_PIPELINE_VIEW_USER_LAST_VIEW
        databaseShardingStrategy: SHARDING
      - index: 23
        name: T_PIPELINE_VIEW_USER_SETTINGS
        databaseShardingStrategy: SHARDING
      - index: 24
        name: T_PIPELINE_WEBHOOK_BUILD_LOG_DETAIL
        databaseShardingStrategy: SHARDING
      - index: 25
        name: T_PIPELINE_WEBHOOK_QUEUE
        databaseShardingStrategy: SHARDING
      - index: 26
        name: T_PROJECT_PIPELINE_CALLBACK
        databaseShardingStrategy: SHARDING
      - index: 27
        name: T_PROJECT_PIPELINE_CALLBACK_HISTORY
        databaseShardingStrategy: SHARDING
      - index: 28
        name: T_REPORT
        databaseShardingStrategy: SHARDING
      - index: 29
        name: T_TEMPLATE
        databaseShardingStrategy: SHARDING
      - index: 30
        name: T_TEMPLATE_PIPELINE
        databaseShardingStrategy: SHARDING
      - index: 31
        name: T_PIPELINE_BUILD_TEMPLATE_ACROSS_INFO
        databaseShardingStrategy: SHARDING
      - index: 32
        name: T_PIPELINE_BUILD_COMMITS
        databaseShardingStrategy: SHARDING
      - index: 33
        name: T_PIPELINE_RULE
        broadcastFlag: true
      - index: 34
        name: T_PIPELINE_STAGE_TAG
        broadcastFlag: true
      - index: 35
        name: T_PIPELINE_TIMER
        broadcastFlag: true
      - index: 36
        name: T_PIPELINE_REMOTE_AUTH
        broadcastFlag: true
      - index: 37
        name: T_PIPELINE_WEBHOOK
        broadcastFlag: true
      - index: 38
        name: T_TEMPLATE_INSTANCE_BASE
        broadcastFlag: true
      - index: 39
        name: T_TEMPLATE_INSTANCE_ITEM
        broadcastFlag: true
      - index: 40
        name: T_PIPELINE_GITCI_ATOM
        broadcastFlag: true
      - index: 41
        name: T_PIPELINE_WEBHOOK_REVISION
        broadcastFlag: true
      - index: 42
        name: T_PIPELINE_ATOM_REPLACE_BASE
        databaseShardingStrategy: SPECIFY
      - index: 43
        name: T_PIPELINE_ATOM_REPLACE_ITEM
        databaseShardingStrategy: SPECIFY
      - index: 44
        name: T_PIPELINE_ATOM_REPLACE_HISTORY
        databaseShardingStrategy: SPECIFY          
      

endpoints:
  metrics:
    filter:
      enabled: false

service-suffix: "-__BK_CI_CONSUL_DISCOVERY_TAG__"
# http concurrency
server:
  undertow:
    worker-threads: 100
    accesslog:
      enabled: true
      pattern: '%h %I "%{i,X-DEVOPS-UID}" [%{time,yyyyMMddHHmmss.S}] "%r" %s %D %b "%{i,Referer}" "%{i,User-Agent}"'
      dir: ${service.log.dir}

# gateway for system
devopsGateway:
  outer: __BK_CI_PUBLIC_URL__         # generic endpoint for public(internet or intranet) areas.
  outerApi: __BK_CI_PUBLIC_URL__      # endpoint for api access in public areas.
  host: __BK_CI_PUBLIC_URL__         # generic endpoint for private(inside bk-ci cluster) access.
  api: __BK_CI_PUBLIC_URL__          # endpoint for api access which inside BlueKing platform.
  build: __BK_CI_PUBLIC_URL__         # endpoint for build nodes, maybe use another dns server.
  idc: __BK_CI_PRIVATE_URL__          # not used yet. keep it same as `host' property.
  idcProxy: __BK_CI_PRIVATE_URL__     # not used yet. keep it same as `host' property.
  devnetProxy: __BK_CI_PRIVATE_URL__  # not used yet. keep it same as `host' property.
  devnet: __BK_CI_PRIVATE_URL__       # not used yet. keep it same as `host' property.
  oss: __BK_CI_PRIVATE_URL__          # not used yet. keep it same as `host' property.
  ossProxy: __BK_CI_PRIVATE_URL__     # not used yet. keep it same as `host' property.
  
# certificate server 配置
certificate:
  server: __BK_LICENSE_PRIVATE_URL__/certificate


#S3 Storage
s3:
  endpointUrl: __BK_CI_S3_ENDPOINT_URL__   # 应该包含完整的地区等信息.
  accessKey: __BK_CI_S3_ACCESS_KEY__
  secretKey: __BK_CI_S3_SECRET_KEY__
  bucketName: __BK_CI_S3_BUCKET_NAME__

auth:
  # idProvider为权限中心对接方式，sample(开源默认实现无鉴权)/ bk_login（蓝鲸登录) / client
  # 选择sample后以下配置无效
  idProvider: __BK_CI_AUTH_PROVIDER__
  grantType: rization_code
  principalType: user
  envName: prod
  #  开发时需要配置Host解析到iam.service.consul
  url: __BK_IAM_PRIVATE_URL__
  appCode: __BK_CI_APP_CODE__
  appSecret: __BK_CI_APP_TOKEN__
  bkloginUrl: __BK_PAAS_PRIVATE_URL__/login/api/v2
  iamCallBackUser: __BK_CI_IAM_CALLBACK_USER__
  # 用户组权限申请前端跳转页面HOST
  webHost: __BK_CI_IAM_WEB_URL__
  token: __BK_CI_APP_TOKEN__
  #  openapi服务需要配置accessToken鉴权时将enabled设为true，secret设为任意字符串string，expirationTime过期时间（毫秒）
  accessToken:
    enabled: __BK_CI_API_TOKEN_ENABLED__
    secret: __BK_CI_API_TOKEN_SECRET__
    expirationTime: __BK_CI_API_TOKEN_EXPIRED_MILLISECOND__

#bk esb config for cd plugin in pipeline
esb:
  code: __BK_CI_APP_CODE__
  secret: __BK_CI_APP_TOKEN__

# codecc config
codecc:
  host: __BK_CODECC_PRIVATE_URL__  # 

codeccGateway:
  gateway: __BK_CODECC_PRIVATE_URL__
  gatewayWeb: __BK_CODECC_PRIVATE_URL__
alert:
  users: ''
codeoa:
  api-key: __BK_CI_CODEOA_API_KEY__
  api-url: __BK_CI_CODEOA_API_URL__
  git-url: __BK_CI_CODEOA_GIT_URL__

bk:
  paas:
    host: __BK_PAAS_PRIVATE_URL__

bkci:
  security:
    public-key: "__BK_CI_JWT_RSA_PUBLIC_KEY__"
    private-key: "__BK_CI_JWT_RSA_PRIVATE_KEY__"
    enable: false
    
process:
  deletedPipelineStoreDays: 30

net:
  proxy:
    # 是否开启，设置为 true 才生效
    enable: false
    # 需要代理的hosts，多个使用","隔开，支持正则表达式
    hosts: ".*google.*"
    server:
      # 代理服务器类型，可 HTTP, SOCKS
      type: "HTTP"
      # 代理服务器主机，host 或者 ip
      host: 127.0.0.1
      # 代理服务器端口
      port: 8080

# shardingsphere分片规则配置
sharding:
  routing:
    cacheSize: 100000  # 缓存分片规则最大数量

SET NAMES utf8mb4;
use devops_ci_store;

REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('0a1c7837b53e4c459c50f3228f0ed317', 'Timer', 'timerTrigger', 'timerTrigger', '', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'The pipeline can be started through background timing tasks, supporting fast timing and linux crontab advanced timing', 'ÂèØThe pipeline can be started through background timing tasks, supporting fast timing and linux crontab advanced timing', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FtimerTrigger.png&logo=true', NULL, True, True, False, NULL, NULL, False, '1.0', '{\"newExpression\":{\"label\":\"Basic Rules\",\"required\":true,\"component\":\"cron-timer\"},\"advanceExpression\":{\"label\":\"Scheduled task rules\",\"required\":false,\"component\":\"vuex-textarea\"},\"noScm\":{\"component\":\"atom-checkbox\",\"required\":false}}', '{}', 'BlueKing', 8, 'system', 'system', '2019-03-04 18:09:39', '2019-04-18 13:41:48', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('6868f24a5b14479683dcd6d63fdb9b42', 'Review', 'manualReviewUserTask', 'manualReviewUserTask', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e5de5b6e525e4b0abf6b1d88d2242fe7', '', '0', '7', NULL, '', '', '1', '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FmanualReviewUserTask.png&logo=true', NULL, b'1', b'1', b'1', NULL, NULL, b'0', '1.0', '{\"reviewUsers\":{\"rule\":{},\"required\":true,\"label\":\"Reviewer\",\"component\":\"user-input\",\"placeholder\":\"withing set {var}, separate multiple reviewers with commas\",\"default\":[]}}', '{}', 'BlueKing', '1', 'system', 'system', '2019-03-04 18:09:42', '2019-08-08 18:04:38', '0');
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('a1c216facd7b4ffa99a2041830482aee', 'Batch Script', 'windowsScript', 'windowsScript', '[ \"pipeline\" ]', 'AGENT', '[ \"WINDOWS\" ]', '75c96e7aa24f481789300cd1737b1ae1', '', 0, 7, NULL, 'run bat/cmd on windows', 'run bat/cmd on windows, workdir is {WORKSPACE}', 1, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FwindowsScript.png&logo=true', NULL, True, True, False, NULL, NULL, False, '1.0', '{\"scriptType\":{\"rule\":{},\"type\":\"enum\",\"label\":\"Type\",\"required\":true,\"component\":\"enum-input\",\"list\":[{\"id\":\"batchfile\",\"value\":\"BAT\",\"label\":\"bat\"}],\"default\":\"BAT\"},\"charsetType\":{\"rule\":{},\"type\":\"enum\",\"label\":\"Charset\",\"required\":true,\"component\":\"enum-input\",\"list\":[{\"value\":\"DEFAULT\",\"label\":\"Default\"},{\"value\":\"UTF_8\",\"label\":\"UTF-8\"},{\"value\":\"GBK\",\"label\":\"GBK\"}],\"default\":\"DEFAULT\"},\"script\":{\"rule\":{},\"type\":\"text\",\"label\":\"Content\",\"required\":true,\"default\":\"\",\"component\":\"atom-ace-editor\",\"desc\":\"Script will run at ${WORKSPACE}\",\"descLink\":\"\",\"descLinkText\":\"Detail\"}}', '{}', 'BlueKing', 98, 'system', 'system', '2019-03-04 18:09:40', '2019-04-18 14:36:54', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('c82507989cf442288d03c6520369febb', 'Manual', 'manualTrigger', 'manualTrigger', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'Manual trigger pipeline', 'Manual trigger pipeline with parameters', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FmanualTrigger.png&logo=true', NULL, True, True, False, NULL, NULL, False, '1.0', '{\"canElementSkip\":{\"rule\":{},\"type\":\"boolean\",\"component\":\"atom-checkbox\",\"required\":true,\"text\":\"Skip some on manual trigger\",\"default\":true,\"desc\":\"Skip some on manual trigger\"},\"useLatestParameters\":{\"rule\":{},\"type\":\"boolean\",\"component\":\"atom-checkbox\",\"required\":true,\"text\":\"filling the same parameters on latest manual trigger\",\"default\":true,\"desc\":\"filling the same parameters on latest manual trigger\"}}', '{}', 'BlueKing', 9, 'system', 'system', '2019-03-04 18:09:39', '2019-05-07 20:03:12', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('cb0fafe8ca264b739932eb94e46a7fa3', 'Shell Script', 'linuxScript', 'linuxScript', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\" ]', '75c96e7aa24f481789300cd1737b1ae1', '', 0, 7, NULL, 'Run shell script on macos and linux', 'Run shell script on macos and linux, the workdir is WORKSPACE', 1, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FlinuxScript.png&logo=true', NULL, True, True, True, NULL, NULL, False, '1.0', '{\"scriptType\":{\"rule\":{},\"type\":\"enum\",\"label\":\"Type\",\"required\":true,\"component\":\"enum-input\",\"list\":[{\"id\":\"sh\",\"value\":\"SHELL\",\"label\":\"Shell\"}],\"default\":\"SHELL\"},\"script\":{\"rule\":{},\"type\":\"text\",\"label\":\"Content\",\"required\":true,\"default\":\"#!/usr/bin/env bash\\n\",\"component\":\"atom-ace-editor\",\"desc\":\"Script will run at ${WORKSPACE}\",\"descLink\":\"\",\"descLinkText\":\"Detail\"},\"continueNoneZero\":{\"rule\":{},\"component\":\"atom-checkbox\",\"text\":\"Continue on error\",\"default\":false},\"enableArchiveFile\":{\"rule\":{},\"type\":\"boolean\",\"component\":\"atom-checkbox\",\"text\":\"Upload on error\",\"default\":false},\"archiveFile\":{\"rule\":{},\"type\":\"text\",\"component\":\"vuex-input\",\"label\":\"path\",\"default\":\"\",\"isHidden\":\"function (element) { return !element.enableArchiveFile }\",\"required\":true,\"desc\":\"result/*.log\",\"placeholder\":\"result/*.log etc. \"}}', '{}', 'BlueKing', 99, 'system', 'system', '2019-03-04 18:09:40', '2019-04-18 13:41:17', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('d47de844527f45f68eb659dafbfc272e', 'Remote', 'remoteTrigger', 'remoteTrigger', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'Trigger pipeline with remote command', 'Trigger pipeline with remote command', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FremoteTrigger.png&logo=true', NULL, True, True, False, NULL, NULL, False, '1.0', '{\"remoteToken\":{\"label\":\"\",\"required\":false,\"component\":\"remote-curl-url\",\"default\":\"\"}}', '{}', 'BlueKing', 2, 'system', 'system', '2019-03-04 18:09:39', '2019-04-18 13:42:42', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('6dbd742f76854aedb2603430574d842b', 'SVN', 'codeSVNWebHookTrigger', 'codeSVNWebHookTrigger', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'Start the pipeline when listening to related events of the SVN repository', 'Start the pipeline when listening to related events of the SVN repository', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FsvnTrigger.png&logo=true', NULL, b'1', b'1', b'0', NULL, NULL, b'0', '1.0', '{\"repositoryType\":{\"rule\":{},\"type\":\"enum\",\"component\":\"enum-input\",\"required\":true,\"label\":\"Repository\",\"list\":[{\"value\":\"ID\",\"label\":\"Select by repository\"},{\"value\":\"NAME\",\"label\":\"Enter by repository alias\"}],\"default\":\"ID\",\"desc\":\"\"},\"repositoryHashId\":{\"rule\":{},\"label\":\"\",\"hasAddItem\":true,\"component\":\"request-selector\",\"searchable\":true,\"placeholder\":\"Please select a repository name\",\"required\":true,\"default\":\"\",\"url\":\"/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_SVN&page=1&pageSize=1000\",\"paramId\":\"repositoryHashId\",\"paramName\":\"aliasName\",\"tools\":{\"edit\":true,\"del\":false}},\"repositoryName\":{\"rule\":{},\"type\":\"text\",\"component\":\"vuex-input\",\"required\":true,\"hidden\":true,\"label\":\"\",\"placeholder\":\"Please enter a repository alias\",\"default\":\"\"},\"relativePath\":{\"rule\":{},\"type\":\"text\",\"required\":false,\"component\":\"vuex-input\",\"label\":\"Repository relative path\",\"placeholder\":\"A relative path with the repository as the root path, such as branches/v1.0.0, multiple paths are separated by commas\",\"default\":\"\"},\"excludePaths\":{\"rule\":{},\"type\":\"text\",\"required\":false,\"component\":\"vuex-input\",\"label\":\"Exclude the following paths\",\"placeholder\":\"Multiple paths should be separated by commas\",\"default\":\"\"},\"includeUsers\":{\"rule\":{},\"type\":\"text\",\"required\":false,\"component\":\"user-input\",\"label\":\"Contains the following people\",\"placeholder\":\"Multiple names should be separated by commas\",\"default\":[]},\"excludeUsers\":{\"rule\":{},\"type\":\"text\",\"required\":false,\"component\":\"user-input\",\"label\":\"exclude the following people\",\"placeholder\":\"Multiple paths should be separated by commas\",\"default\":[]}}', '{}', 'BlueKing', 6, 'system', 'system', '2019-03-04 18:09:39', '2020-05-21 11:17:42', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('6e715b411b7e4c35b5944a03b4f488a9', 'GitLab', 'codeGitlabWebHookTrigger', 'codeGitlabWebHookTrigger', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'Start the pipeline when listening to related events in the GitLab repository', 'Start the pipeline when listening to related events in the GitLab repository', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FgitlabTrigger.png&logo=true', NULL, b'1', b'1', b'0', NULL, NULL, b'0', '1.0', '{"repositoryType":{"rule":{},"type":"enum","component":"enum-input","required":true,"label":"Repository","list":[{"value":"ID","label":"Select by repository ID"},{"value":"NAME","label":"Enter by repository alias"}],"default":"ID","desc":""},"repositoryHashId":{"rule":{},"type":"text","label":"Repository","hasAddItem":true,"required":true,"component":"request-selector","searchable":true,"placeholder":"Please select a repository name","default":"","url":"/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_GITLAB&page=1&pageSize=100","paramId":"repositoryHashId","paramName":"aliasName","tools":{"edit":true,"del":false}},"repositoryName":{"rule":{},"type":"text","component":"vuex-input","required":true,"hidden":true,"label":"","placeholder":"Please enter a repository alias","default":""},"branchName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"branch name","placeholder":"Defaults to all branches","default":""},"excludeBranchName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Exclude the following target branches","placeholder":"Multiple branches should be separated by commas","default":"","rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"includeSourceBranchName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Listen to the following source branches","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"},{"key":"eventType","value":"MERGE_REQUEST_ACCEPT"}]}},"excludeSourceBranchName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Exclude the following source branches","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"},{"key":"eventType","value":"MERGE_REQUEST_ACCEPT"}]}},"tagName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Listen to the following tags","placeholder":"The default is all tags, and multiple tags should be separated by English commas","default":"","rely":{"operation":"AND","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"excludeTagName":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Exclude the following tags","placeholder":"Multiple tags should be separated by English commas","default":"","rely":{"operation":"AND","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"includePaths":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Listen to the following paths","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"excludePaths":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Exclude the following paths","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"includeUsers":{"rule":{},"component":"staff-input","required":false,"multiSelect":true,"label":"Includes following people","default":[],"rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"excludeUsers":{"rule":{},"component":"staff-input","required":false,"multiSelect":true,"label":"Exclude the following people","default":[],"rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"includeCommitMsg":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Includes the following Commit Message","default":"","rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"},{"key":"eventType","value":"MERGE_REQUEST_ACCEPT"}]}},"excludeCommitMsg":{"rule":{},"type":"text","required":false,"component":"vuex-input","label":"Exclude the following Commit Messages","default":"","rely":{"operation":"NOT","expression":[{"key":"eventType","value":"TAG_PUSH"},{"key":"eventType","value":"MERGE_REQUEST_ACCEPT"}]}},"eventType":{"rule":{},"type":"text","required":false,"component":"enum-input","label":"Event Type","list":[{"label":"Commit Push Hook","value":"PUSH","tips":"Triggered when there is a new push event to the project. If it is a tag push, it will not be triggered."},{"label":"Tag Push Hook","value":"TAG_PUSH","tips":"Triggered when tags are added or deleted in the project"},{"label":"Merge Request Hook","value":"MERGE_REQUEST","tips":"It will be triggered when a new Merge Request is added to the project"},{"label":"Merge Request Accept Hook","value":"MERGE_REQUEST_ACCEPT","tips":"È°πÁõÆ‰∏≠Merge Request acceptÊó∂‰ºöËß¶Âèë"}],"default":"PUSH"}}', '{}', 'BlueKing', 0, 'system', 'system', '2019-03-04 18:09:39', '2020-04-26 12:16:06', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('eaa2bfb9f95245b482039f9bebccfcc9', 'GitHub', 'codeGithubWebHookTrigger', 'codeGithubWebHookTrigger', '[ \"pipeline\" ]', 'AGENT', '[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]', 'e1bea5430f574f9ea3e0312dc7de9efa', '', 0, 7, NULL, 'Start the pipeline when listening to related events of the GitHub repository', 'Start the pipeline when listening to related events of the GitHub repository', 0, '1.0.0', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FgithubTrigger.png&logo=true', NULL, b'1', b'1', b'0', NULL, NULL, b'0', '1.0', '{ "repositoryType": { "rule": {}, "type": "enum", "component": "enum-input", "required": true, "label": "Repository", "list": [ { "value": "ID", "label": "Select by repository ID" }, { "value": "NAME", "label": "Enter by repository alias" } ], "default": "ID", "desc": "" }, "repositoryHashId": { "rule": {}, "type": "text", "label": "", "hasAddItem": true, "component": "request-selector", "searchable": true, "placeholder": "Please select a repository name", "required": true, "default": "", "url": "/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=GITHUB&page=1&pageSize=100", "paramId": "repositoryHashId", "paramName": "aliasName", "tools": { "edit": true, "del": false }, "list": [] }, "repositoryName": { "rule": {}, "type": "text", "component": "vuex-input", "required": true, "hidden": true, "label": "", "placeholder": "Please enter a repository alias", "default": "" }, "branchName": { "rule": {}, "type": "text", "required": false, "component": "vuex-input", "label": "Listen to the following branches", "placeholder": "The default is all branches, and multiple branches should be separated by commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "CREATE" }, { "key": "eventType", "value": "PULL_REQUEST" } ] } }, "excludeBranchName": { "rule": {}, "type": "text", "required": false, "component": "vuex-input", "label": "Exclude the following branches", "placeholder": "Multiple branches should be separated by commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "CREATE" }, { "key": "eventType", "value": "PULL_REQUEST" } ] } }, "excludeUsers": { "rule": {}, "component": "vuex-input", "required": false, "label": "Exclude the following people", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "CREATE" }, { "key": "eventType", "value": "PULL_REQUEST" } ] } }, "includeMrAction": { "rule": {}, "type": "selector", "component": "selector", "required": false, "searchable": false, "label": "action", "value": [ "open", "reopen", "push-update" ], "multiSelect": true, "list": [ { "id": "open", "name": "Created" }, { "id": "close", "name": "Closed" }, { "id": "reopen", "name": "Reopened" }, { "id": "push-update", "name": "Push Update" }, { "id": "merge", "name": "Merged" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "PULL_REQUEST" } ] } }, "eventType": { "rule": {}, "type": "text", "required": false, "component": "enum-input", "label": "Event Type", "list": [ { "label": "Commit Push Hook", "value": "PUSH", "tips": "Triggered when there is a new push event to the project. If it is a tag push, it will not be triggered." }, { "label": "Create Branch Or Tag", "value": "CREATE", "tips": "Triggered when a new branch or tag is added to the project" }, { "label": "Pull Request Hook", "value": "PULL_REQUEST", "tips": "Triggered when a Pull Request is added to the project" }, { "label": "Code Review Hook", "value": "REVIEW", "tips": "Triggered when there is a code review event to the project" }, { "label": "Issue Hook", "value": "ISSUES", "tips": "Triggered when there is a issues event to the project" }, { "label": "Note Hook", "value": "NOTE", "tips": "Triggered when there is a note event to the project" } ], "default": "PUSH" }, "includeIssueAction": { "label": "Listen to the following action", "type": "selector", "component": "selector", "multiSelect": true, "list": [ { "id": "open", "name": "open" }, { "id": "close", "name": "close" }, { "id": "reopen", "name": "reopen" }, { "id": "update", "name": "update" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "ISSUES" } ] } }, "includeCrState": { "label": "Listen to the following state", "component": "selector", "multiSelect": true, "list": [ { "id": "approving", "name": "approving" }, { "id": "approved", "name": "approved" }, { "id": "change_denied", "name": "change denied" }, { "id": "change_required", "name": "request changes" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "REVIEW" } ] } }, "includeNoteComment": { "rule": {}, "type": "vuex-input", "required": false, "component": "vuex-input", "label": "Listening to the following comment", "desc": "", "placeholder": "Separate multiple comments with commas", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "NOTE" } ] } }, "includeNoteTypes": { "label": "Listening to the following types of comments", "component": "selector", "multiSelect": true, "list": [ { "id": "Commit", "name": "Providing comments on commit" }, { "id": "Review", "name": "Providing comments on reviews" }, { "id": "Issue", "name": "Providing comments on issue" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "NOTE" } ] } } }', '{}', 'BlueKing', 2, 'system', 'system', '2019-03-04 18:09:39', '2020-04-26 12:17:06', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('24425d3fa0b645dc8ab23013e9f1df5e','TGit','codeTGitWebHookTrigger','codeTGitWebHookTrigger','[ \"pipeline\" ]','AGENT','[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]','e1bea5430f574f9ea3e0312dc7de9efa','',0,7,NULL,'Start the pipeline when listening to related events of the TGit repository','Start the pipeline when listening to related events of the TGit repository',0,'1.0.0','/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FtgitTrigger.png&logo=true',NULL,b'1',b'0',b'0',NULL,NULL,b'0','1.1','{ "input": { "repositoryType": { "rule": {}, "type": "enum-input", "component": "enum-input", "required": true, "label": "Repository", "list": [ { "value": "ID", "label": "Select by repository ID" }, { "value": "NAME", "label": "Enter by repository alias" } ], "default": "ID", "desc": "" }, "repositoryHashId": { "rule": {}, "label": "", "hasAddItem": true, "type": "request-selector", "component": "request-selector", "searchable": true, "placeholder": "Please select a repository name", "required": true, "default": "", "url": "/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_TGIT&page=1&pageSize=100", "paramId": "repositoryHashId", "paramName": "aliasName", "tools": { "edit": true, "del": false }, "rely": { "operation": "OR", "expression": [ { "key": "repositoryType", "value": "ID" } ] } }, "repositoryName": { "rule": {}, "component": "vuex-input", "type": "vuex-input", "required": true, "label": "", "placeholder": "Please enter a repository alias", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "repositoryType", "value": "NAME" } ] } }, "eventType": { "rule": {}, "required": false, "component": "enum-input", "type": "enum-input", "label": "Event Type", "list": [ { "label": "Commit Push Hook", "value": "PUSH", "tips": "Triggered when there is a new push event to the project. If it is a tag push, it will not be triggered." }, { "label": "Tag Push Hook", "value": "TAG_PUSH", "tips": "Triggered when tags are added or deleted in the project" }, { "label": "Merge Request Hook", "value": "MERGE_REQUEST", "tips": "Triggered when a Merge Request is added to the project" }, { "label": "Merge Request Accept Hook", "value": "MERGE_REQUEST_ACCEPT", "tips": "It will be triggered when Merge Request accept in the project" }, { "label": "Issue Hook", "value": "ISSUES", "tips": "Triggered when there is a issues event to the project" }, { "label": "Note Hook", "value": "NOTE", "tips": "Triggered when there is a note event to the project" } ], "default": "PUSH" }, "branchName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listen to the following target branches", "placeholder": "The default is all branches, and multiple branches should be separated by commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "excludeBranchName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Exclude the following target branches", "placeholder": "Multiple branches should be separated by commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "includeSourceBranchName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listen to the following branches", "placeholder": "Separate multiple paths with commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "excludeSourceBranchName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Exclude the following source branches", "placeholder": "Separate multiple paths with commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "tagName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listen to the following tags", "placeholder": "The default is all tags, and multiple tags should be separated by commas", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "TAG_PUSH" } ] } }, "excludeTagName": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Exclude the following tags", "placeholder": "Multiple tags should be separated by commas", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "TAG_PUSH" } ] } }, "fromBranches": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listen to the following source branches", "desc": "Tags created by the Git client do not contain information about the branch they were created from. In this case, tags created cannot be used to listen to the target branch", "placeholder": "Multiple branches should be separated by commas", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "TAG_PUSH" } ] } }, "pathFilterType": { "rule": {}, "type": "enum-input", "component": "enum-input", "required": true, "label": "Path filtering type", "list": [ { "value": "NamePrefixFilter", "label": "Matching by Path Prefix" }, { "value": "RegexBasedFilter", "label": "Matching by Wildcard" } ], "default": "NamePrefixFilter", "desc": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "includePaths": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listen to the following paths", "placeholder": "Separate multiple paths with commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "excludePaths": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Exclude the following paths", "placeholder": "Separate multiple paths with commas", "default": "", "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "includeUsers": { "rule": {}, "type": "staff-input", "component": "staff-input", "required": false, "label": "Includes following people", "default": [], "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "TAG_PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "excludeUsers": { "rule": {}, "type": "staff-input", "component": "staff-input", "required": false, "label": "Exclude the following people", "default": [], "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "PUSH" }, { "key": "eventType", "value": "TAG_PUSH" }, { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "enableCheck": { "rule": {}, "type": "atom-checkbox", "component": "atom-checkbox", "required": false, "text": "Write commit check", "default": true, "hidden": false, "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "eventType", "value": "MERGE_REQUEST_ACCEPT" } ] } }, "block": { "rule": {}, "type": "atom-checkbox", "component": "atom-checkbox", "required": false, "text": "Lock Commit", "default": false, "hidden": false, "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "MERGE_REQUEST" }, { "key": "enableCheck", "value": true } ] } }, "webhookQueue": { "rule": {}, "type": "atom-checkbox", "component": "atom-checkbox", "required": false, "text": "When the MR has the same source and target branches, only the latest triggered task will be kept in the waiting queue", "default": false, "hidden": false, "rely": { "operation": "OR", "expression": [ { "key": "eventType", "value": "MERGE_REQUEST" } ] } }, "includeNoteTypes": { "label": "Listening to the following types of comments", "type": "selector", "component": "selector", "optionsConf": { "searchable": true, "multiple": true }, "options": [ { "id": "Commit", "name": "Providing comments on commit" }, { "id": "Review", "name": "Providing comments on reviews" }, { "id": "Issue", "name": "Providing comments on issue" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "NOTE" } ] } }, "includeNoteComment": { "rule": {}, "required": false, "type": "vuex-input", "component": "vuex-input", "label": "Listening to the following comment", "desc": "", "placeholder": "Separate multiple comments with commas", "default": "", "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "NOTE" } ] } }, "includeIssueAction": { "label": "Listen to the following action", "type": "selector", "component": "selector", "optionsConf": { "searchable": true, "multiple": true }, "options": [ { "id": "open", "name": "open" }, { "id": "close", "name": "close" }, { "id": "reopen", "name": "reopen" }, { "id": "update", "name": "update" } ], "rely": { "operation": "AND", "expression": [ { "key": "eventType", "value": "ISSUES" } ] } } } }','{}','BlueKing','2','system','system','2020-08-29 12:18:20','2020-09-03 10:43:18', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('b7373cdb56ec4a779488f30e26c96208','TGit','codeTGitWebHookTrigger','codeTGitWebHookTrigger','[ \"pipeline\" ]','AGENT','[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]','e1bea5430f574f9ea3e0312dc7de9efa','',0,7,NULL,'Start the pipeline when listening to related events of the TGit repository','Start the pipeline when listening to related events of the TGit repository',0,'2.0.0','/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FtgitTrigger.png&logo=true',NULL,b'1',b'1',b'0',NULL,NULL,b'0','1.1','{"input":{"tips":{"label":"","type":"tips-simple","tipStr":"Merge Request Accept event type has been adjusted to action:merged for Merge Request event"},"repositoryType":{"rule":{},"component":"conditional-input-selector","required":true,"label":"Repository","list":[{"value":"ID","label":"ID","key":"repositoryHashId","rule":{},"hasAddItem":true,"type":"request-selector","searchable":true,"placeholder":"Select by repository ID","required":true,"default":"","url":"/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_TGIT&page=1&pageSize=1000","paramId":"repositoryHashId","paramName":"aliasName","tools":{"edit":true,"del":false}},{"value":"NAME","label":"NAME","key":"repositoryName","rule":{},"type":"vuex-input","required":true,"hidden":true,"placeholder":"Please select a repository name","default":""},{"value":"SELF","label":"PAC","key":"","rule":{},"disabled":true,"type":"vuex-input","required":true,"hidden":true,"placeholder":"Automatically listen to the PAC code repository without the need for settings","default":""}],"default":"ID","desc":""},"eventType":{"rule":{},"required":false,"component":"enum-input","type":"enum-input","label":"Event Type","list":[{"label":"Push","value":"PUSH"},{"label":"Tag","value":"TAG_PUSH"},{"label":"Merge Request","value":"MERGE_REQUEST"},{"label":"Issue","value":"ISSUES"},{"label":"Note","value":"NOTE"}],"default":"PUSH"},"includePushAction":{"label":"Action","bottomDivider":true,"required":true,"component":"atom-checkbox-list","multiSelect":true,"list":[{"id":"push-file","name":"Modify File"},{"id":"new-branch","name":"Create Branch"}],"default":["push-file","new-branch"],"rely":{"operation":"AND","expression":[{"key":"eventType","value":"PUSH"}]}},"includeMrAction":{"label":"Action","component":"atom-checkbox-list","required":true,"list":[{"id":"open","name":"Created"},{"id":"close","name":"Closed"},{"id":"reopen","name":"Reopened"},{"id":"push-update","name":"Push-Updated"},{"id":"merge","name":"Merged"}],"default":["open","reopen","push-update"],"rely":{"operation":"AND","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}},"branchSettings":{"type":"group","label":"Branch","rely":{"operation":"OR","expression":[{"key":"eventType","value":"PUSH"},{"key":"eventType","value":"MERGE_REQUEST"}]},"children":[{"key":"branchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Listen to the following target branches","placeholder":"The default is all branches, and multiple branches should be separated by commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"PUSH"}]}},{"key":"excludeBranchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Exclude the following target branches","placeholder":"Multiple branches should be separated by commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"PUSH"}]}},{"key":"branchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Listen to the following target branches","labelWidth":"105","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}},{"key":"excludeBranchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Exclude the following target branches","labelWidth":"105","placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}},{"key":"includeSourceBranchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Listen to the following source branches","labelWidth":105,"placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}},{"key":"excludeSourceBranchName","type":"groupItem","rule":{},"required":false,"component":"composite-input","prependText":"Exclude the following source branches","labelWidth":105,"placeholder":"Separate multiple paths with commas","default":"","rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}}]},"tagSettings":{"type":"group","label":"Tag","rely":{"operation":"AND","expression":[{"key":"eventType","value":"TAG_PUSH"}]},"children":[{"rule":{},"key":"tagName","type":"groupItem","required":false,"component":"composite-input","prependText":"Listen to the following tags","placeholder":"The default is all tags, and multiple tags should be separated by commas","default":""},{"rule":{},"key":"excludeTagName","type":"groupItem","required":false,"component":"composite-input","prependText":"Exclude the following tags","placeholder":"Multiple tags should be separated by commas","default":""}]},"fromBranches":{"rule":{},"type":"vuex-input","required":false,"component":"vuex-input","label":"Listen to the following source branches","desc":"Tags created by the Git client do not contain information about the branch they were created from. In this case, tags created cannot be used to listen to the target branch","placeholder":"Multiple branches should be separated by commas","default":"","rely":{"operation":"AND","expression":[{"key":"eventType","value":"TAG_PUSH"}]}},"pathSettings":{"type":"group","label":"PATH","rely":{"operation":"OR","expression":[{"key":"eventType","value":"PUSH"},{"key":"eventType","value":"MERGE_REQUEST"}]},"children":[{"key":"pathFilterType","rule":{},"type":"groupItem","component":"enum-button","required":true,"list":[{"value":"NamePrefixFilter","label":"Matching by Path Prefix"},{"value":"RegexBasedFilter","label":"Matching by Wildcard"}],"default":"NamePrefixFilter","desc":""},{"key":"includePaths","rule":{},"type":"groupItem","required":false,"component":"composite-input","prependText":"Listen to the following paths","placeholder":"Separate multiple paths with commas","default":""},{"key":"excludePaths","rule":{},"type":"groupItem","required":false,"component":"composite-input","prependText":"Exclude the following paths","placeholder":"Separate multiple paths with commas","default":""}]},"userSettings":{"type":"group","label":"User","rely":{"operation":"OR","expression":[{"key":"eventType","value":"PUSH"},{"key":"eventType","value":"MERGE_REQUEST"},{"key":"eventType","value":"TAG_PUSH"}]},"children":[{"key":"includeUsers","type":"groupItem","rule":{},"component":"staff-input","required":false,"multiSelect":true,"prependText":"Includes following people","desc":"","default":[]},{"key":"excludeUsers","type":"groupItem","rule":{},"component":"staff-input","required":false,"multiSelect":true,"prependText":"Exclude the following people","desc":"","default":[]}]},"enableCheck":{"rule":{},"type":"atom-checkbox","component":"atom-checkbox","required":false,"text":"Write commit check","desc":"","default":true,"hidden":false,"rely":{"operation":"OR","expression":[{"key":"eventType","value":"MERGE_REQUEST"},{"key":"eventType","value":"PUSH"}]}},"block":{"rule":{},"type":"atom-checkbox","component":"atom-checkbox","required":false,"text":"Lock Commit","default":false,"hidden":false,"rely":{"operation":"AND","expression":[{"key":"eventType","value":"MERGE_REQUEST"},{"key":"enableCheck","value":true}]}},"webhookQueue":{"rule":{},"type":"atom-checkbox","component":"atom-checkbox","required":false,"text":"When the MR has the same source and target branches, only the latest triggered task will be kept in the waiting queue","default":false,"hidden":false,"rely":{"operation":"AND","expression":[{"key":"eventType","value":"MERGE_REQUEST"}]}},"includeNoteTypes":{"label":"Listening to the following types of comments","component":"atom-checkbox-list","multiSelect":true,"list":[{"id":"Commit","name":"Providing comments on commit"},{"id":"Review","name":"Providing comments on reviews"},{"id":"Issue","name":"Providing comments on issue"}],"rely":{"operation":"AND","expression":[{"key":"eventType","value":"NOTE"}]}},"includeNoteComment":{"rule":{},"type":"vuex-input","required":false,"component":"vuex-textarea","label":"Listening to the following comment","desc":"","placeholder":"Separate multiple comments with commas","default":"","rely":{"operation":"AND","expression":[{"key":"eventType","value":"NOTE"}]}},"includeIssueAction":{"label":"Listen to the following action","component":"atom-checkbox-list","list":[{"id":"open","name":"open"},{"id":"close","name":"close"},{"id":"reopen","name":"reopen"},{"id":"update","name":"update"}],"rely":{"operation":"AND","expression":[{"key":"eventType","value":"ISSUES"}]}}}}','{}','BlueKing','2','system','system','2024-05-09 12:00:00','2024-05-09 12:00:00', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('39580f08e9574fc291cdd8c51f39ddee','P4','codeP4WebHookTrigger','codeP4WebHookTrigger','[ \"pipeline\" ]','AGENT','[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]','e1bea5430f574f9ea3e0312dc7de9efa','',0,7,NULL,'Start the pipeline when listening to related events of the Perforce repository',' start the pipeline when listening to related events of the Perforce repository',0,'1.0.0','/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2Fp4Trigger.png&logo=true',NULL,b'1',b'0',b'0',NULL,NULL,b'0','1.1','{"input":{"notice":{"label":"","type":"tips","tipStr":"1. The trigger will create a devops_trigger depot in the repository<br/>2. To create a trigger, the credentials associated with the repository must have administrator privileges<br/>3. Deleting the trigger plugin will not delete the server-side trigger, you need to delete it manually <br/>"},"repositoryType":{"rule":{},"type":"enum-input","required":true,"label":"Repository","list":[{"value":"ID","label":"Select by repository ID"},{"value":"NAME","label":"Enter by repository alias"}],"default":"ID","desc":""},"repositoryHashId":{"rule":{},"label":"","hasAddItem":true,"type":"request-selector","searchable":true,"placeholder":"Please select a repository name","required":true,"default":"","url":"/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_P4&page=1&pageSize=100","paramId":"repositoryHashId","paramName":"aliasName","tools":{"edit":true,"del":false},"rely":{"operation":"OR","expression":[{"key":"repositoryType","value":"ID"}]}},"repositoryName":{"rule":{},"type":"vuex-input","required":true,"label":"","placeholder":"ËØ∑Enter a repository alias","default":"","rely":{"operation":"AND","expression":[{"key":"repositoryType","value":"NAME"}]}},"eventType":{"rule":{},"required":false,"type":"enum-input","label":"Event Type","list":[{"label":"change commit","value":"CHANGE_COMMIT"},{"label":"change content","value":"CHANGE_CONTENT"},{"label":"change submit","value":"CHANGE_SUBMIT"},{"label":"shelve commit","value":"SHELVE_COMMIT"},{"label":"shelve submit","value":"SHELVE_SUBMIT"}],"default":"CHANGE_COMMIT"},"noticePath":{"label":"","type":"tips","tipStr":"The Perforce path matching starts from the depot path. For example, if there is a demo depot, the configuration rules are as follows:<br/>1. Listen to the aaa stream under //demo, //demo/aaa/**<br/>2. Listen to //demo The java file under, //demo/*.java"},"includePaths":{"rule":{},"required":true,"type":"vuex-input","label":"Listen to the following paths","placeholder":"Separate multiple paths with commas","default":""},"excludePaths":{"rule":{},"required":false,"type":"vuex-input","label":"Exclude the following paths","placeholder":"Separate multiple paths with commas","default":""}}}','{}','BlueKing','2','system','system','2021-11-16 12:18:20','2021-11-16 12:18:20', 0);
REPLACE INTO `T_ATOM` (`ID`, `NAME`, `ATOM_CODE`, `CLASS_TYPE`, `SERVICE_SCOPE`, `JOB_TYPE`, `OS`, `CLASSIFY_ID`, `DOCS_LINK`, `ATOM_TYPE`, `ATOM_STATUS`, `ATOM_STATUS_MSG`, `SUMMARY`, `DESCRIPTION`, `CATEGROY`, `VERSION`, `LOGO_URL`, `ICON`, `DEFAULT_FLAG`, `LATEST_FLAG`, `BUILD_LESS_RUN_FLAG`, `REPOSITORY_HASH_ID`, `CODE_SRC`, `PAY_FLAG`, `HTML_TEMPLATE_VERSION`, `PROPS`, `DATA`, `PUBLISHER`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `VISIBILITY_LEVEL`) VALUES
  ('2d90938b6a164d069045e960051e5421','P4','codeP4WebHookTrigger','codeP4WebHookTrigger','[ \"pipeline\" ]','AGENT','[ \"LINUX\", \"MACOS\", \"WINDOWS\" ]','e1bea5430f574f9ea3e0312dc7de9efa','',0,7,NULL,'Start the pipeline when listening to related events of the Perforce repository',' start the pipeline when listening to related events of the Perforce repository',0,'2.0.0','/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2Fp4Trigger.png&logo=true',NULL,b'1',b'1',b'0',NULL,NULL,b'0','1.1','{"input":{"notice":{"label":"","type":"tips","tipStr":"To enable this plugin, you need to config [P4 Triggers](https://github.com/TencentBlueKing/bk-ci/issues/8556#issuecomment-1493775141)"},"repositoryType":{"rule":{},"type":"enum-input","required":true,"label":"Repository","list":[{"value":"ID","label":"Select by repository ID"},{"value":"NAME","label":"Enter by repository alias"}],"default":"ID","desc":""},"repositoryHashId":{"rule":{},"label":"","hasAddItem":true,"type":"request-selector","searchable":true,"placeholder":"Please select a repository name","required":true,"default":"","url":"/repository/api/user/repositories/{projectId}/hasPermissionList?permission=USE&repositoryType=CODE_P4&page=1&pageSize=100","paramId":"repositoryHashId","paramName":"aliasName","tools":{"edit":true,"del":false},"rely":{"operation":"OR","expression":[{"key":"repositoryType","value":"ID"}]}},"repositoryName":{"rule":{},"type":"vuex-input","required":true,"label":"","placeholder":"ËØ∑Enter a repository alias","default":"","rely":{"operation":"AND","expression":[{"key":"repositoryType","value":"NAME"}]}},"eventType":{"rule":{},"required":false,"type":"enum-input","label":"Event Type","list":[{"label":"change commit","value":"CHANGE_COMMIT"}],"default":"CHANGE_COMMIT"},"noticePath":{"label":"","type":"tips","tipStr":"The Perforce path matching starts from the depot path. For example, if there is a demo depot, the configuration rules are as follows:<br/>1. Listen to the aaa stream under //demo, //demo/aaa/**<br/>2. Listen to //demo The java file under, //demo/*.java"},"includePaths":{"rule":{},"required":true,"type":"vuex-input","label":"Listen to the following paths","placeholder":"Separate multiple paths with commas","default":""},"excludePaths":{"rule":{},"required":false,"type":"vuex-input","label":"Exclude the following paths","placeholder":"Separate multiple paths with commas","default":""}}}','{}','BlueKing','2','system','system','2021-11-16 12:18:20','2021-11-16 12:18:20', 0);

INSERT IGNORE INTO `T_BUILD_RESOURCE`(`ID`, `BUILD_RESOURCE_CODE`, `BUILD_RESOURCE_NAME`, `DEFAULT_FLAG`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('55913ac708c211e62192fa163e50f2b5', 'centos7.2', 'centos7.2', b'0', 'system', 'system', '2019-07-12 12:29:59', '2019-07-12 12:29:59');
INSERT IGNORE INTO `T_BUILD_RESOURCE`(`ID`, `BUILD_RESOURCE_CODE`, `BUILD_RESOURCE_NAME`, `DEFAULT_FLAG`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('5596a01908c211e99792fa163e50f2b5', 'bkci/ci:latest', 'bkci/ci:latest', b'0', 'system', 'system', '2019-07-12 12:29:59', '2019-07-12 12:29:59');

INSERT IGNORE INTO `T_CONTAINER_RESOURCE_REL`(`ID`, `CONTAINER_ID`, `RESOURCE_ID`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('a60bc7613061438a913148babf0b6378', 'c029e57d08c011e99792fa163e50f2b5', '55913ac708c211e62192fa163e50f2b5', 'system', 'system', '2019-07-12 12:30:54', '2019-07-12 12:30:54');
INSERT IGNORE INTO `T_CONTAINER_RESOURCE_REL`(`ID`, `CONTAINER_ID`, `RESOURCE_ID`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('381d65cbd8c44bc19952d1dca53a7a86', 'c029e57d08c011e99792fa163e50f2b5', '5596a01908c211e99792fa163e50f2b5', 'system', 'system', '2019-07-12 12:30:54', '2019-07-12 12:30:54');


INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('0f8f6d827a114df0a19d259699288f2e', 'code', 'code', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('197390cd1a5b450d9a573e905be2c00a', 'review', 'review', 'system', 'system', '2019-04-26 14:58:46', '2019-04-26 14:58:46', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('302111bac5404e7da9bd88608ed9bf5a', 'trigger', 'trigger', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('39cda36cc739463a9ebb7548dea9ed19', 'build', 'build', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('411ddb35b53b4aada88f8f8f7473d7f1', 'Andriod', 'Andriod', 'system', 'system', '2019-04-26 14:59:07', '2019-04-26 14:59:07', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('4287290bc5734749a55245297227b410', 'build-report', 'build-report', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('45049ff58c644f2dbb71e6fd043e8292', 'project', 'project', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('4d73ffcb28c14709b9b05f6f77e8a385', 'clean', 'clean', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('4f74ce313b704d58bcc82f2c5bb575dd', 'CD', 'CD', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 1);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('5797575ee66441098c3ac734e2fbdfd9', 'artifact', 'upload', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('7c96df514ae1467e924ca82ba56fd3c4', 'deploy', 'deploy', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('aace59778ffc42ac97620a6a449e3073', 'CI', 'CI', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 1);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('b2d5bdd90c3e427c9a5b1f1fcbed0930', 'autotest', 'test', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 1);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('c0c5d07203c244c9a3f3f7ad4386f4a1', 'build-tool', 'build', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('eae37e1891aa4ef1869df52c59047014', 'notice', 'notice', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('efa8a2264a2649f78b7b0d627b3c4caa', 'iOS', 'iOS', 'system', 'system', '2019-04-26 14:59:00', '2019-04-26 14:59:00', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('f6617d0f80d849e1b90632b204b8c424', 'test-report', 'test-report', 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47', 0);
INSERT IGNORE INTO `T_LABEL`(`ID`, `LABEL_CODE`, `LABEL_NAME`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('fd4a34b5177749e694b4e28f3f76ccde', 'publish', 'publish', 'system', 'system', '2019-04-26 14:58:08', '2019-04-26 14:58:08', 0);


REPLACE INTO `T_CATEGORY` (`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('0e61802f5e7647c199398fd41050d859', 'SERVER', 'server', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FSERVER.png&logo=true', 1, 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47');
REPLACE INTO `T_CATEGORY` (`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('188f7952b3fa4071b16460c52bc6f68c', 'WEB', 'web', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FWEB.png&logo=true', 1, 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47');
REPLACE INTO `T_CATEGORY` (`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('1a6b1ab6bf434be486f7a8767cc47807', 'IOS', 'iOS', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FIOS.png&logo=true', 1, 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47');
REPLACE INTO `T_CATEGORY` (`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('8b3d2921a87840778a388bc9598ff611', 'ANDROID', 'Android', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FANDROID.png&logo=true', 1, 'system', 'system', '2019-04-18 12:39:47', '2019-04-18 12:39:47');

INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('29a4531e675742ccb0997a804cd015af', 'deploy', 'deploy', 3, 'system', 'system', '2019-03-05 19:59:42', '2019-03-06 11:57:29', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('543459ca2f4c47c58999c16c14a9382f', 'cd', 'cd', 0, 'system', 'system', '2019-04-18 13:08:56', '2019-04-18 13:08:56', 1);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('75c96e7aa24f481789300cd1737b1ae1', 'compileBuild', 'build', 9, 'system', 'system', '2019-03-05 19:59:42', '2019-03-05 19:59:42', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('a066a21f73ea4b858db86918df0f2866', 'test', 'test', 7, 'system', 'system', '2019-03-05 19:59:42', '2019-03-05 19:59:42', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('babff353027b4763a7fd127f61ae80e7', 'scm', 'scm', 10, 'system', 'system', '2019-03-06 11:57:07', '2019-03-06 11:57:07', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('d6b4eb43ca534c57a0316eb660c64423', 'security', 'security', 5, 'system', 'system', '2019-03-05 19:59:42', '2019-03-06 11:57:34', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('e148982bf0b6433d97cf0e573eefc540', 'ci', 'ci', 0, 'system', 'system', '2019-04-18 13:08:56', '2019-04-18 13:08:56', 1);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('e1bea5430f574f9ea3e0312dc7de9efa', 'trigger', 'trigger', 11, 'system', 'system', '2019-03-05 19:59:42', '2019-03-05 19:59:42', 0);
INSERT IGNORE INTO `T_CLASSIFY` (`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES
  ('e5de5b6e525e4b0abf6b1d88d2242fe7', 'common', 'other', 1, 'system', 'system', '2019-03-05 19:59:42', '2019-03-06 11:57:43', 0);


INSERT IGNORE INTO `T_CONTAINER` (`ID`, `NAME`, `TYPE`, `OS`, `REQUIRED`, `MAX_QUEUE_MINUTES`, `MAX_RUNNING_MINUTES`, `PROPS`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('3d029fbe08c011e99792fa163e50f2b5', 'Trigger', 'trigger', 'NONE', 1, NULL, NULL, '{}', 'system', 'system', '2018-12-26 12:16:21', '2018-12-26 12:16:21');
INSERT IGNORE INTO `T_CONTAINER` (`ID`, `NAME`, `TYPE`, `OS`, `REQUIRED`, `MAX_QUEUE_MINUTES`, `MAX_RUNNING_MINUTES`, `PROPS`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('c020c1a408c011e99792fa163e50f2b5', 'Windows', 'vmBuild', 'WINDOWS', 0, 60, 900, '{}', 'system', 'system', '2018-12-26 12:16:21', '2018-12-26 12:16:21');
INSERT IGNORE INTO `T_CONTAINER` (`ID`, `NAME`, `TYPE`, `OS`, `REQUIRED`, `MAX_QUEUE_MINUTES`, `MAX_RUNNING_MINUTES`, `PROPS`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('c024824008c011e99792fa163e50f2b5', 'macOS', 'vmBuild', 'MACOS', 0, 60, 900, '{}', 'system', 'system', '2018-12-26 12:16:21', '2018-12-26 12:16:21');
INSERT IGNORE INTO `T_CONTAINER` (`ID`, `NAME`, `TYPE`, `OS`, `REQUIRED`, `MAX_QUEUE_MINUTES`, `MAX_RUNNING_MINUTES`, `PROPS`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES
  ('c029e57d08c011e99792fa163e50f2b5', 'Linux', 'vmBuild', 'LINUX', 0, 60, 900, '{}', 'system', 'system', '2018-12-26 12:16:21', '2018-12-26 12:16:21');

REPLACE INTO `T_LOGO`(`ID`, `TYPE`, `LOGO_URL`, `LINK`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ORDER`) VALUES ('ef3e60ba6ef44b92b0fec0b940af8fa1', 'BANNER', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2FBANNER.png&logo=true', '', 'system', 'system', '2019-10-21 17:23:40', '2019-10-21 17:23:40', 2);

INSERT IGNORE INTO `T_ATOM_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `SAMPLE_PROJECT_PATH`, `ENABLE`) VALUES ('0951a1e44a2f479bb9505e5554fa42a6', 'Python', '', 'system', 'system', '2019-03-05 19:59:42', '2019-03-05 19:59:42', NULL, '', b'1');
INSERT IGNORE INTO `T_ATOM_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `SAMPLE_PROJECT_PATH`, `ENABLE`) VALUES ('8732f1d5b35c11e9aa7c84a9c49dad92', 'Node', '', 'system', 'system', '2019-03-04 20:37:50', '2019-03-04 20:37:50', NULL, '', b'1');
INSERT IGNORE INTO `T_ATOM_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `SAMPLE_PROJECT_PATH`, `ENABLE`) VALUES ('b1ed78299aa147c8a3291cde6355f008', 'Go', '', 'system', 'system', '2019-04-09 10:14:09', '2019-04-09 10:14:09', NULL, '', b'1');
INSERT IGNORE INTO `T_ATOM_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `SAMPLE_PROJECT_PATH`, `ENABLE`) VALUES ('b1ed8e499aa147c8a3291cde6355f518', 'Java', '', 'system', 'system', '2019-03-05 19:59:42', '2019-03-05 19:59:42', NULL, '', b'1');

INSERT IGNORE INTO `T_STORE_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`,  `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `ENABLE`, `SAMPLE_PROJECT_PATH`, `STORE_TYPE`) VALUES ('0951a1e44a2f479bb9505e5554fa42a6', 'python', '', 'system', 'system', '2019-01-11 15:34:39', '2019-01-11 15:34:39', NULL, b'1', '', 0);
INSERT IGNORE INTO `T_STORE_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`,  `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `ENABLE`, `SAMPLE_PROJECT_PATH`, `STORE_TYPE`) VALUES ('8732f1d5b35c11e9aa7c84a9c49dad92', 'nodejs', '', 'system', 'system', '2019-03-04 20:37:50', '2019-03-04 20:37:50', NULL, b'1', '', 0);
INSERT IGNORE INTO `T_STORE_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`,  `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `ENABLE`, `SAMPLE_PROJECT_PATH`, `STORE_TYPE`) VALUES ('b1ed78299aa147c8a3291cde6355f008', 'golang', '', 'system', 'system', '2019-03-19 10:14:09', '2019-03-19 10:14:09', NULL, b'1', '', 0);
INSERT IGNORE INTO `T_STORE_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`,  `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `ENABLE`, `SAMPLE_PROJECT_PATH`, `STORE_TYPE`) VALUES ('b1ed8e499aa147c8a3291cde6355c218', 'java', '', 'system', 'system', '2020-02-12 20:59:50', '2020-02-12 20:59:43', NULL, b'1', '', 4);
INSERT IGNORE INTO `T_STORE_BUILD_INFO`(`ID`, `LANGUAGE`, `SCRIPT`,  `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `REPOSITORY_PATH`, `ENABLE`, `SAMPLE_PROJECT_PATH`, `STORE_TYPE`) VALUES ('b1ed8e499aa147c8a3291cde6355f518', 'java', '', 'system', 'system', '2019-01-17 10:39:38', '2019-01-17 10:39:38', NULL, b'1', '', 0);


REPLACE INTO `T_CATEGORY`(`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('33747b44ccd14f26a2c77f33c2bec88d', 'PIPELINE_JOB', 'Job', '/ms/artifactory/api/user/artifactories/file/download?filePath=%2Ffile%2Fpng%2Fcategory_pipeline_job.png&logo=true', 2, 'system', 'system', '2019-12-05 21:19:39', '2019-12-05 21:19:39');
INSERT IGNORE INTO `T_CATEGORY`(`ID`, `CATEGORY_CODE`, `CATEGORY_NAME`, `ICON_URL`, `TYPE`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`) VALUES ('ee07b9473e104ca69906e9e9cd21c62b', 'TOOL_CODECC', 'CodeCC', '', 2, 'system', 'system', '2019-12-12 12:00:27', '2019-12-12 12:00:27');

INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('CATEGORY', 'needAgentType', 'PIPELINE_JOB', 'NEED_AGENT_TYPE_TRUE', 'ÈïúÂÉèËåÉÁï¥ÊòØÂê¶ÈúÄÈÄâÊã©Êú∫Âô®Á±ªÂûãÈÖçÁΩÆ');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('CATEGORY', 'needInstallToProject', 'PIPELINE_JOB', 'NEED_INSTALL_TO_PROJECT_TRUE', 'ÊµÅÊ∞¥Á∫øÊûÑÂª∫ÈïúÂÉèÈúÄË¶ÅÊòæÁ§∫ÂÆâË£ÖÊåâÈíÆ');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('BUILD_TYPE', 'defaultBuildType', 'LINUX', 'DOCKER', 'DockerÂÖ¨ÂÖ±ÊûÑÂª∫Êú∫');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('BUILD_TYPE', 'defaultBuildType', 'WINDOWS', 'THIRD_PARTY_AGENT_ID', 'ÁßÅÊúâÔºöÂçïÊûÑÂª∫Êú∫');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('BUILD_TYPE', 'defaultBuildType', 'MACOS', 'THIRD_PARTY_AGENT_ID', 'ÁßÅÊúâÔºöÂçïÊûÑÂª∫Êú∫');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`ID`, `BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) values('54','ATOM','api','sensitiveApi','[{\"apiName\":\"get_oauth_token\",\"apiUrl\":\"/repository/api/build/oauth/git/{userId}\"},{\"apiName\":\"get_credential\",\"apiUrl\":\"ticket/api/build/credentials/{credentialId}?publicKey={publicKey}\"}]','ÊïèÊÑüAPIÂàóË°®');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`ID`, `BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES('55',	'BUILD_TYPE',	'defaultBuildType',	'KUBERNETES',	'KUBERNETES',	'KubernetesÊûÑÂª∫ËµÑÊ∫ê');
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`ID`, `BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES('56',	'BUILD_TYPE',	'defaultBuildResource',	'KUBERNETES',	'{\"code\": \"bkci\",\"version\":\"1.0.0\",\"name":\"bkci\",\"recommendFlag\":true}', NULL);
INSERT IGNORE INTO `T_BUSINESS_CONFIG`(`BUSINESS`, `FEATURE`, `BUSINESS_VALUE`, `CONFIG_VALUE`, `DESCRIPTION`) VALUES ('IMAGE', 'initBuildPipeline', 'PIPELINE_MODEL', '{\n    \"name\": \"#{pipelineName}\",\n    \"desc\": \"\",\n    \"stages\": [\n        {\n            \"containers\": [\n                {\n                    \"@type\": \"trigger\",\n                    \"id\": \"0\",\n                    \"name\": \"ÊûÑÂª∫Ëß¶Âèë\",\n                    \"elements\": [\n                        {\n                            \"@type\": \"manualTrigger\",\n                            \"name\": \"ÊâãÂä®Ëß¶Âèë\",\n                            \"id\": \"T-1-1-1\",\n                            \"canElementSkip\": false,\n                            \"useLatestParameters\": false,\n                            \"executeCount\": 1,\n                            \"canRetry\": false,\n                            \"version\": \"1.*\",\n                            \"classType\": \"manualTrigger\",\n                            \"atomCode\": \"manualTrigger\",\n                            \"taskAtom\": \"\",\n                            \"elementEnable\": true\n                        }\n                    ],\n                    \"params\": [\n                        {\n                            \"id\": \"imageCode\",\n                            \"required\": true,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"imageName\",\n                            \"required\": true,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"version\",\n                            \"required\": true,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"imageType\",\n                            \"required\": false,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"registryUser\",\n                            \"required\": false,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"registryPwd\",\n                            \"required\": false,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        },\n                        {\n                            \"id\": \"registryHost\",\n                            \"required\": false,\n                            \"type\": \"STRING\",\n                            \"defaultValue\": \"\"\n                        }\n                    ],\n                    \"canRetry\": false,\n                    \"containerId\": \"1\",\n                    \"executeCount\": 1,\n                    \"classType\": \"trigger\"\n                }\n            ],\n            \"id\": \"stage-1\",\n            \"name\": \"\",\n            \"fastKill\": false\n        },\n        {\n            \"containers\": [\n                {\n                    \"@type\": \"vmBuild\",\n                    \"id\": \"1\",\n                    \"name\": \"ÊûÑÂª∫ÁéØÂ¢É\",\n                    \"elements\": [\n                        {\n                            \"@type\": \"marketCheckImage\",\n                            \"name\": \"È™åËØÅÈïúÂÉèÂêàÊ≥ïÊÄß\",\n                            \"id\": \"T-2-1-1\",\n                            \"executeCount\": 1,\n                            \"canRetry\": false,\n                            \"version\": \"1.*\",\n                            \"classType\": \"marketCheckImage\",\n                            \"atomCode\": \"marketCheckImage\",\n                            \"taskAtom\": \"\",\n                            \"elementEnable\": true\n                        }\n                    ],\n                    \"baseOS\": \"LINUX\",\n                    \"vmNames\": [\n                        \n                    ],\n                    \"maxQueueMinutes\": 60,\n                    \"maxRunningMinutes\": 480,\n                    \"buildEnv\": {\n                        \n                    },\n                    \"dispatchType\": {\n                        \"buildType\": \"DOCKER\",\n                        \"value\": \"bkci\",\n                        \"imageType\": \"BKSTORE\",\n                        \"credentialId\": \"\",\n                        \"credentialProject\": \"\",\n                        \"imageCode\": \"bkci\",\n                        \"imageVersion\": \"1.*\",\n                        \"imageName\": \"bkci\",\n                        \"dockerBuildVersion\": \"bkci\",\n                        \"imagePublicFlag\": false,\n                        \"imageRDType\": \"\",\n                        \"recommendFlag\": true\n                    },\n                    \"showBuildResource\": false,\n                    \"canRetry\": false,\n                    \"enableExternal\": false,\n                    \"containerId\": \"2\",\n                    \"executeCount\": 1,\n                    \"nfsSwitch\": true,\n                    \"classType\": \"vmBuild\"\n                }\n            ],\n            \"id\": \"stage-2\",\n            \"name\": \"stage-2\",\n            \"fastKill\": false\n        }\n    ],\n    \"labels\": [\n        \n    ],\n    \"instanceFromTemplate\": false\n}', 'ÈïúÂÉèÂÜÖÁΩÆÊ£ÄÊü•ÊµÅÊ∞¥Á∫øÊ®°Âûã');


INSERT IGNORE INTO `T_CLASSIFY`(`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('32ef49e3daa045caa44f9311072f1f26', 'OTHER', 'other', NULL, 'system', 'system', '2019-12-05 21:19:39', '2019-12-05 21:19:39', 2);
INSERT IGNORE INTO `T_CLASSIFY`(`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('b1922caeff264223b1d79a95bc09fbbc', 'SECURITY', 'Security', 10, 'system', 'system', '2019-12-05 21:27:41', '2019-12-05 21:27:41', 2);
INSERT IGNORE INTO `T_CLASSIFY`(`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('ba192c667c2f4853943484407b520976', 'COMPILE', 'Build', 20, 'system', 'system', '2019-12-05 21:26:40', '2019-12-05 21:26:40', 2);
INSERT IGNORE INTO `T_CLASSIFY`(`ID`, `CLASSIFY_CODE`, `CLASSIFY_NAME`, `WEIGHT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `TYPE`) VALUES ('d1aabe8077ae4d68b20e0b7e72a43d68', 'BASE', 'Base', 25, 'system', 'system', '2019-12-06 10:31:39', '2019-12-06 10:31:39', 2);

INSERT IGNORE INTO `T_REASON` (`ID`, `TYPE`, `CONTENT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ENABLE`, `ORDER`) VALUES ('2c41f2d2922f443fa0b76c8a33f75585', 'uninstallAtom', 'Â§™Â§öBUGÔºåÁªèÂ∏∏Â§±Ë¥•', 'admin', 'admin', NOW(), NOW(), b'1', '0');
INSERT IGNORE INTO `T_REASON` (`ID`, `TYPE`, `CONTENT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ENABLE`, `ORDER`) VALUES ('6844b152fe474df7ab68640178193786', 'uninstallAtom', '‰ΩìÈ™åÂ§™Â∑Æ‰∏çÂ•ΩÁî®', 'admin', 'admin', NOW(), NOW(), b'0', '0');
INSERT IGNORE INTO `T_REASON` (`ID`, `TYPE`, `CONTENT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ENABLE`, `ORDER`) VALUES ('712459a9ea0b4d1496fa5a848ff0af4f', 'uninstallAtom', 'ÂÖ∂ÂÆÉ', 'admin', 'admin', NOW(), NOW(), b'1', '10');
INSERT IGNORE INTO `T_REASON` (`ID`, `TYPE`, `CONTENT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ENABLE`, `ORDER`) VALUES ('8ac9727ad27b407784bea8dae06e91f0', 'uninstallAtom', 'Ê≤°ÊúâÊàëÊÉ≥Ë¶ÅÁöÑÂäüËÉΩ', 'admin', 'admin', NOW(), NOW(), b'0', '0');
INSERT IGNORE INTO `T_REASON` (`ID`, `TYPE`, `CONTENT`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `ENABLE`, `ORDER`) VALUES ('e20897c838564d61b5af1a8c9c1d26d2', 'uninstallAtom', 'Âè™ÊòØËØïÁî®‰∏ã', 'admin', 'admin', NOW(), NOW(), b'1', '0');

INSERT IGNORE INTO `T_ATOM_DEV_LANGUAGE_ENV_VAR`(`ID`, `LANGUAGE`, `ENV_KEY`, `ENV_VALUE`, `BUILD_HOST_TYPE`, `BUILD_HOST_OS`) VALUES ('16aff55caee711e9a40e14050945abb1', 'nodejs', 'machineNodeSwitch', 'true', 'ALL', 'ALL');

INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b611', 'timerTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b616', 'manualReviewUserTask',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b618', 'windowsScript',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b619', 'manualTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b620', 'linuxScript',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b621', 'remoteTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b624', 'codeSVNWebHookTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b625', 'codeGitlabWebHookTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b626', 'codeGithubWebHookTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('968751154c2e42aeb789514d0475b627', 'codeTGitWebHookTrigger',  b'1');
INSERT IGNORE INTO `T_ATOM_FEATURE`(`ID`, `ATOM_CODE`, `RECOMMEND_FLAG`) VALUES ('706a3743691b49fa80f82a3bbb054d76', 'codeP4WebHookTrigger',  b'1');
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a631a1', 'timerTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a631a6', 'manualReviewUserTask', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a631a8', 'windowsScript', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a631a9', 'manualTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63190', 'linuxScript', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63191', 'remoteTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63194', 'codeSVNWebHookTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63195', 'codeGitlabWebHookTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63196', 'codeGithubWebHookTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('1008f2dc058c44b0b81ee842c2a63197', 'codeTGitWebHookTrigger', 0, 0);
INSERT IGNORE INTO `T_STORE_STATISTICS_TOTAL`(`ID`, `STORE_CODE`, `STORE_TYPE`, `DOWNLOADS`) VALUES ('0bf3fd65f97649888c1d8b7072c89299', 'codeP4WebHookTrigger', 0, 0);
INSERT IGNORE INTO `T_ATOM_ENV_INFO` (`ID`, `ATOM_ID`, `PKG_PATH`, `LANGUAGE`, `MIN_VERSION`, `TARGET`, `PRE_CMD`, `CREATOR`, `MODIFIER`, `CREATE_TIME`, `UPDATE_TIME`, `SHA_CONTENT`, `PKG_NAME`, `POST_ENTRY_PARAM`, `POST_CONDITION`) VALUES
('48101620b2394b728be3cfcfaa46a746','39580f08e9574fc291cdd8c51f39ddee','','java','1.8','',NULL,'system','system','2021-11-16 15:56:53','2021-11-16 15:56:53',NULL,'',NULL,NULL);

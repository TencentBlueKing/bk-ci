# 构建机层服务分发
location ~ /(ms/|)([\w-_]+)/api/build/(.*) {
    auth_request /auth/build;
    auth_request_set $error_return $sent_http_x_devops_error_return;

    # # 设置auth的变量
    # include auth.request.set.build.conf;

    set $access_type 'build';
    set $service $2;
    set $path $3;
    set $target '';

    access_by_lua_file 'conf/lua/router_srv.lua';

    # # 设置proxy header的变量
    # include proxy.set.header.build.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/build/$path?$args;
}

# user层服务分发
location ~ /(ms/|)([\w-_]+)/api/user/(.*) {
    header_filter_by_lua_file 'conf/lua/cors_filter.lua';
    auth_request /auth/user;

    # 设置auth的变量
    include auth.request.set.user.conf;

    set $access_type 'user';
    set $service $2;
    set $path $3;
    set $target '';
    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.user.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/user/$path?$args;
}

# service层服务分发
location ~ /(ms/|)([\w-_]+)/api/service/(.*) {
    auth_request /auth/service;

    # 设置auth的变量
    include auth.request.set.service.conf;

    set $access_type 'service';
    set $service $2;
    set $path $3;
    set $target '';
    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.service.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/service/$path?$args;
}

# OP层服务分发
location ~ /(ms/|)([\w-_]+)/api/op/(.*) {
    header_filter_by_lua_file 'conf/lua/cors_filter.lua';
    auth_request /auth/op;

    # 设置auth的变量
    include auth.request.set.user.conf;

    set $access_type 'op';
    set $service $2;
    set $path $3;
    set $target '';

    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.user.conf;

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/api/op/$path?$args;
}

# user层服务的ws分发
location ~ /(ms/|)([\w-_]+)/(websocket|ws)/user/(.*) {
    header_filter_by_lua_file 'conf/lua/cors_filter.lua';
    auth_request /auth/user;

    # 设置auth的变量
    include auth.request.set.user.conf;

    set $access_type 'user';
    set $service $2;
    set $source $3;
    set $path $4;
    set $target '';
    access_by_lua_file 'conf/lua/router_srv.lua';

    # 设置proxy header的变量
    include proxy.set.header.user.conf;

    # websocket
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    # 反向代理到目标ip，端口，路径和参数
    proxy_pass http://$target/$source/user/$path?$args;
}
